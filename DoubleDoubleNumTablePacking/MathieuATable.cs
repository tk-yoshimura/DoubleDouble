using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    static class MathieuATable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>>> tables = new(){
                { nameof(PadeA0Tables), PadeA0Tables },
                { nameof(PadeA1Tables), PadeA1Tables },
                { nameof(PadeA2Tables), PadeA2Tables },
                { nameof(PadeA3Tables), PadeA3Tables },
                { nameof(PadeA4Tables), PadeA4Tables },
                { nameof(PadeA5Tables), PadeA5Tables },
                { nameof(PadeA6Tables), PadeA6Tables },
                { nameof(PadeA7Tables), PadeA7Tables },
                { nameof(PadeA8Tables), PadeA8Tables },
                { nameof(PadeA9Tables), PadeA9Tables },
                { nameof(PadeA10Tables), PadeA10Tables },
                { nameof(PadeA11Tables), PadeA11Tables },
                { nameof(PadeA12Tables), PadeA12Tables },
                { nameof(PadeA13Tables), PadeA13Tables },
                { nameof(PadeA14Tables), PadeA14Tables },
                { nameof(PadeA15Tables), PadeA15Tables },
                { nameof(PadeA16Tables), PadeA16Tables },
            };

            foreach (var key in tables.Keys) {
                for (int i = 0; i < tables[key].Count; i++) {
                    stream.Write($"{key[..^1]}_{i}");

                    stream.Write((UInt32)tables[key][i].Count);
                    foreach ((Hexcode c, Hexcode d) in tables[key][i]) {
                        stream.Write((UInt64)c.Hi);
                        stream.Write((UInt64)c.Lo);
                        stream.Write((UInt64)d.Hi);
                        stream.Write((UInt64)d.Lo);
                    }
                    stream.Write((UInt32)0u);
                }
            }
        }

        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA0Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -95, 0x938467035D139DADuL, 0x3A09202B4AD10EDCuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -84, 0xA6DEE396D986922CuL, 0x1BA453731286627EuL), (-1, 1, 0xCB2A4E22A3637371uL, 0x35AE8B19BE676935uL)),
                ((+1, -74, 0x9498EEDC8C156D70uL, 0xEDFD29CCEEF53401uL), (+1, 1, 0x88832FB70CE88892uL, 0xA05FA280991F9D0BuL)),
                ((-1, -65, 0x8B96762A0BAFA157uL, 0x6C437FCD74434B43uL), (+1, -4, 0xCD89921C42F2C9EEuL, 0x365002BEF113F722uL)),
                ((+1, -57, 0x9CEFB1D8912D151FuL, 0xCC562D48E6F5F1CEuL), (+1, -4, 0xC148AE76ED96A5EFuL, 0xF292C80B9F0C4AA8uL)),
                ((+1, -9, 0xED35FFFFFF8E9DF7uL, 0x2C7D30374242B294uL), (+1, -4, 0xC2F30DCD7D7EB7EEuL, 0xD63C60FC36A589B8uL)),
                ((-1, -8, 0xF89BD684FDA91042uL, 0xA9E25CA363EFBF43uL), (+1, -4, 0xC5FC2D1C0324BFF3uL, 0x1623882CF0508233uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -35, 0xB1EB9FB5652340AFuL, 0x05D35C3790FDF96CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -28, 0xA78D6DB9CFAE9ED1uL, 0x8872A56881CBAB0FuL), (-1, 3, 0x89BE26DE5D2DDC82uL, 0xF43E137BF9B81144uL)),
                ((+1, -23, 0xC875CDB264BE2200uL, 0x44C3E2A33A8CA4E0uL), (-1, 10, 0x9C1372B5EA53BC93uL, 0x54C8A91D20DF8FFAuL)),
                ((-1, -21, 0xBF895AAB1C846D16uL, 0x851D2C7566FE1841uL), (+1, 10, 0xB4D05477CB7DA2F8uL, 0xC17FEAD3CC61B6C4uL)),
                ((-1, -12, 0x92D48BBA45119860uL, 0x12C50A095B13EDE4uL), (+1, 7, 0xCE74F011D81B62E1uL, 0xEA5B80C4445DC32CuL)),
                ((-1, -7, 0x9F9249DE8EE9A7BCuL, 0xF25ED1E2707E2B5DuL), (+1, 8, 0x9524737F20351DC0uL, 0x02F7C5CB404FF865uL)),
                ((-1, -3, 0xA6122806DDE012A2uL, 0x21B75D256C34E1C3uL), (+1, 9, 0x8B2EEC0A0726C7CBuL, 0x2871B298D5D79B0DuL)),
                ((-1, 0, 0xB035E057985D5E76uL, 0x2275EE7F4073CAE0uL), (+1, 9, 0xBE96746B88266DA3uL, 0xE96F5CB7E23BF1ABuL)),
                ((-1, 2, 0x99652E83425497F4uL, 0xFF802597872E1D3BuL), (+1, 11, 0xFAF92792C4E52BF4uL, 0x75062D853A3B5BE8uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xBC225EFF25B31D15uL, 0xCA72F2164F13D3ADuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xF812FE789C6D1232uL, 0x126C0D830FA5736BuL), (-1, 4, 0xB84F67BF236C5291uL, 0xF067E6E9FA64305FuL)),
                ((+1, -19, 0xAD9FA2BA0ED1F22AuL, 0xCA146C771707B502uL), (+1, 9, 0xA522F7360CBC40E9uL, 0x91CB3425AF30ADB1uL)),
                ((+1, -15, 0xC0DB7CF458E6D679uL, 0xE542C67C7DDBE3DEuL), (-1, 13, 0xB56323863080ED26uL, 0x51C064333A8006D2uL)),
                ((+1, -11, 0x9E22661D227847A0uL, 0x89F8BC319320D2D9uL), (+1, 17, 0xAFCC22AB646F3BF9uL, 0x46F782C9E7A072F1uL)),
                ((+1, -8, 0xC4E48B29E7E73483uL, 0x42B3FCBB38C748F9uL), (-1, 21, 0x8516F8C6317B7866uL, 0x944741AAB822102FuL)),
                ((+1, -5, 0xE93246D89C9DAD92uL, 0x97C264D342AA9990uL), (+1, 24, 0xA2DBE7C30AF38058uL, 0xDE87D9DB8BD787DFuL)),
                ((+1, -2, 0xCA8473159EC674B9uL, 0x887BDDE553A15FD5uL), (-1, 27, 0x99278118DF2562C4uL, 0x95C768CCA62AC9AFuL)),
                ((+1, 1, 0x8907967A134A9612uL, 0xC1DC95B87A91C791uL), (+1, 29, 0xD2D4627C2729ED1FuL, 0xF538021A22A6C6CCuL)),
                ((+1, 4, 0xFAEBC92D5E8E75D4uL, 0xC2109C2E4BE12B6FuL), (-1, 31, 0xC98D58BBEAFFA23EuL, 0x639DCC2E9F5C633CuL)),
                ((+1, 8, 0xA1F9E558D97432B4uL, 0x14830FF924826E27uL), (+1, 33, 0xB8E8FF7E83E3E106uL, 0x158ECC6D955D00BDuL)),
                ((+1, 11, 0xE35CDB9FB3515F48uL, 0xDC026236A6E7736EuL), (-1, 36, 0xA3CA16825224C161uL, 0xE23FB9F88FCBABDDuL)),
                ((+1, 15, 0xFE280BDE18272E54uL, 0xBDDF1CF05213720BuL), (+1, 38, 0xDF69CA7D9F378416uL, 0x92FAEB4CDEEF46CEuL)),
                ((+1, 19, 0x88960F98A158F759uL, 0xE00E4F0D7D47810DuL), (+1, 38, 0xA98F8DB7C5F176E6uL, 0xE8D64A9B290EF72CuL)),
                ((+1, 20, 0xC4B0622C6A5C3216uL, 0x2AC6A6B9AF526C5DuL), (-1, 43, 0x9FAFEC691C3EE4A9uL, 0xCD8DCD206C9E8B82uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA1Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -100, 0x9FB45E407E57CDFCuL, 0xAF2DE357F6968C1CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -89, 0xD0246BE2970EE9CFuL, 0x075EB679531D677DuL), (-1, 2, 0xD44E1145AAEE08E2uL, 0xFA6FED80DF224F34uL)),
                ((+1, -79, 0xDC949480334B2476uL, 0xDF8508FD8167603CuL), (+1, 3, 0xDC5E161417B90CBAuL, 0x5B0D62EB3C9485E1uL)),
                ((-1, -70, 0xFE0C36AC208530EBuL, 0x420DA52754CCB304uL), (-1, 3, 0x8C30D3AD902C91BAuL, 0xD780213E9DC637EDuL)),
                ((+1, -61, 0xB3DEFEA30A25175DuL, 0xA39A2C6E769E47D5uL), (-1, -3, 0x99F0D146F64731CDuL, 0x6F9406B1CB3899EAuL)),
                ((+1, -2, 0x91F793FFFFFFEB02uL, 0x1A62B2460869BB9AuL), (-1, -3, 0x9023DC16128860F2uL, 0x4171199C038D6F8AuL)),
                ((-1, 0, 0xBB20B57C8406AAC5uL, 0x7689E1FF6AE5F610uL), (-1, -3, 0x85CB070E6FA4FCB9uL, 0xC7EFE5CB1177B3D7uL)),
                ((+1, 0, 0xE3344CB6FA7D88EBuL, 0xFC1F3738BA0CFB39uL), (-1, -4, 0xD0A4C4CA0E8A30C1uL, 0x56527CCB8B5D8127uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xDFBA3CDDD7EDBE96uL, 0xBB3FB66A8C4B80C9uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xAFB7793E3D2A05BFuL, 0xE2D6428A16EB8BB0uL), (-1, 6, 0xD104C53236F3AF05uL, 0x2334A215AFB498C7uL)),
                ((-1, -17, 0x85E851033264430DuL, 0xBB9C5D3E78A82AD1uL), (+1, 11, 0xFD96D345C6852487uL, 0xDA1C0DA4EF17AEB2uL)),
                ((-1, -13, 0xE2937A2178D78D57uL, 0x7E62C53ACBD40FFEuL), (-1, 15, 0xF3E007580DF71726uL, 0x1AE0F3F562BBE88CuL)),
                ((+1, -7, 0x8BC2E00253255913uL, 0x730101C52BBAE5AAuL), (+1, 17, 0xCC40B7FC8C3BD229uL, 0x4D6330B76DE370F9uL)),
                ((+1, -2, 0x9D49F1FEDB3803F8uL, 0xFF8AFFECFD0F9A6EuL), (-1, 17, 0xB15DA9B75C158825uL, 0xC9451D7207AFD291uL)),
                ((-1, 1, 0x83FD0C1849913EF5uL, 0xC41D5D4D2494ED3EuL), (-1, 12, 0xCAB1B170AFBD5864uL, 0x9D6281A9685AA9A3uL)),
                ((-1, 7, 0xBC7AB512E753F019uL, 0x487B24F0E812106CuL), (-1, 12, 0xCF84FBAED2573281uL, 0x65C0CFA326194395uL)),
                ((-1, 11, 0x994D86694F1717B9uL, 0x42EC7FD874FEC25AuL), (-1, 10, 0x9DEBF4A6A1C74AB0uL, 0x9C417C1C783079F2uL)),
                ((-1, 12, 0xDB7F875CFF0951E0uL, 0x74B6355D1049DD16uL), (-1, 10, 0x8FC6914D65C2E97BuL, 0xE14A62AEC1B662AAuL)),
                ((+1, 15, 0x8D718A06B9461556uL, 0x781ED6AE0512CAA0uL), (+1, 17, 0xD4AD89A001B140C3uL, 0x2F590DA249079B36uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xF28B49FAA968B617uL, 0x218A807E23C4227FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0xE8413234A2DA6CC1uL, 0xE29BE626170A9FBAuL), (-1, 2, 0x90C9655F90604479uL, 0xFE10CA67FF2973CCuL)),
                ((+1, -12, 0xD3EB3D2626149FAAuL, 0xFBA0BF4B1D473020uL), (+1, 8, 0x8286AE454A2234B7uL, 0xD4E9851041ECB9C7uL)),
                ((+1, -7, 0x8720523907BF0C29uL, 0x6B8879AA04417F42uL), (-1, 3, 0x837A9B01092419B3uL, 0xDA8BC08D70035D8AuL)),
                ((+1, -3, 0x84EDF831E08A0F1AuL, 0x92C5A80B194FB351uL), (-1, 14, 0xA82367D1F69AD536uL, 0xBB8A329229F1DBFBuL)),
                ((+1, 0, 0xCA5C1EBA16270DE6uL, 0xDD1B3BB1FE49F895uL), (+1, 19, 0xFEC4AADD22CCAFDFuL, 0x8E1E67383B11D8AAuL)),
                ((+1, 4, 0x818C1F30CC9E813AuL, 0xFB26189BD8B4DBBCuL), (-1, 24, 0x96F5E19216DAA782uL, 0x3F8D1C7E80493FDDuL)),
                ((+1, 7, 0x8FB6E9026E89092FuL, 0x41D892E3AE35F7FEuL), (+1, 28, 0x8ABB56913AEC33CAuL, 0x165760C15F2B18F8uL)),
                ((+1, 10, 0x847533BEB1788D1AuL, 0xBBED9662DBD46E1BuL), (-1, 31, 0xC31AD0B769EC26B3uL, 0xB6B63E15056EE1A3uL)),
                ((+1, 13, 0x8E430749F61A0441uL, 0xF029327C7DB2EC40uL), (+1, 34, 0xDAF80B19D035B2B0uL, 0x2275C637F741246FuL)),
                ((+1, 16, 0xBE9F4F5AE8DA58E7uL, 0x88DFD5480DF2B660uL), (-1, 37, 0xC5485584F522CC21uL, 0x634FC72573AB793FuL)),
                ((+1, 19, 0xFAE8586CFBC9436AuL, 0x063050D2F0FA84C9uL), (+1, 40, 0x988EDA449DCEAC55uL, 0x6E178AC6AAB117C0uL)),
                ((+1, 23, 0xC802F6ECF8C900F0uL, 0xF5CE757FA57276EAuL), (-1, 42, 0xEAF904E24F2C6839uL, 0x46251D9ED5DECA7AuL)),
                ((+1, 26, 0xF35CCDDEECF9B1FFuL, 0xC5363211FC4E5A6BuL), (+1, 45, 0xBBCD94214E042221uL, 0x81BC9BEC0D5AD6F6uL)),
                ((+1, 29, 0x8B8D4D7367F5DCD7uL, 0x17BC3CC9F639F442uL), (-1, 47, 0xF16788B803C65703uL, 0xB0D409B8AEB2DEAAuL)),
                ((+1, 29, 0xBF512C67D6E4BE5DuL, 0xB4C3C360F0218898uL), (+1, 49, 0x9CCD6D754F90A670uL, 0x9D2DD992BE8C7F3FuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA2Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -95, 0xB0D922AB1BFCECC8uL, 0x790B1F83B5B25DEAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -84, 0xC85F0E4B48ACE0B1uL, 0x38A00E188FBB6362uL), (-1, 1, 0x9D448CAECDC32A7AuL, 0x46D90AD91BFF0859uL)),
                ((+1, -74, 0xB2CDA46E1FC8807CuL, 0x954A4C57084FF556uL), (+1, 0, 0xB1D2C8FE73279650uL, 0x8CBB351EB83C9053uL)),
                ((-1, -65, 0xA867450FA75B6310uL, 0x66D70DA8CA186F55uL), (+1, -6, 0xE1726988DA2E10DEuL, 0x817EE1C0755F8D4DuL)),
                ((+1, -57, 0xBDF1D4054A87248FuL, 0x4416480B6D5D3085uL), (+1, -6, 0xA4A240EB85D3D84EuL, 0x3A213318F41AC2AEuL)),
                ((+1, -4, 0xAD2B743FFFFBB1CDuL, 0xD24151BD29050368uL), (+1, -7, 0xF61A4EA286692C14uL, 0x0CA77DEAD9923976uL)),
                ((-1, -4, 0xFE00075D0B167D42uL, 0x03982662C881AB86uL), (+1, -7, 0xA98FEFA80D63CB01uL, 0x5DA21B0F7F11DCE7uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0x814E07C6C7EB3F3DuL, 0x12AD221E4B451D3FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xFF2192E3724DABD9uL, 0x442D515EE0E31CCDuL), (-1, 1, 0xB11C77BD8A38CCE6uL, 0x000BC3B0B6426B93uL)),
                ((+1, -18, 0xD08D13A1BA2F2103uL, 0x7B07A4BAAEA938B7uL), (+1, 0, 0xDC810B813BE0A57AuL, 0xEE93D0B33DE4B9C4uL)),
                ((+1, -13, 0xB3F7C14E378F7797uL, 0x37725D63EBDB2C27uL), (+1, -5, 0xC097C413C31370C5uL, 0x5F4FAB5E6FABB60EuL)),
                ((+1, -9, 0xAAF315CDFEF05FBBuL, 0x063B999A2411406FuL), (+1, -5, 0xA28DC8D0BEAE140BuL, 0xFE4FC58B6AD797ADuL)),
                ((+1, -6, 0xA31B76308A6C99D0uL, 0x3DC3BF6AC48DE5C2uL), (+1, -5, 0x948EEE52178D2D90uL, 0xEC3E3EEC5E292721uL)),
                ((+1, -5, 0xBB5C6603A2664F48uL, 0xFAEEF714CC9996FFuL), (+1, -5, 0x8875D4B2DA8440C2uL, 0xECF259AD5A0C44D2uL)),
                ((-1, -3, 0x9C5AB7B05180390FuL, 0x31691B55DC326D34uL), (+1, -6, 0xFAF97965528ABF98uL, 0x4D5E2944238A559BuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0x87FECAAF6971038BuL, 0xB9BC581B671D7CDEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0x8A3C5C67103B5AD9uL, 0x11CD303C217936E9uL), (-1, 5, 0xFC4CF2A17883572DuL, 0x504EED0024D40EB7uL)),
                ((-1, -15, 0xACD0E9AE056B2863uL, 0x76508315FADCE33CuL), (+1, 10, 0xD1A56C2A90ACE6BDuL, 0x3D0F1B344A61D92FuL)),
                ((+1, -15, 0xB14B8983C6664219uL, 0xE30F0CD76BE71EB4uL), (-1, 14, 0xB05E20B6DE8F92ACuL, 0x5BC22BB207F53222uL)),
                ((+1, -7, 0xEABF751BBDAAA274uL, 0x56B31AD42EA8581FuL), (+1, 17, 0x8D6DE282C36DBEF8uL, 0x9AF34B6623DCDCC5uL)),
                ((-1, -9, 0x874300760C9E3426uL, 0x53B085D467314261uL), (-1, 18, 0x99278CEEF15EF356uL, 0xCE59CEA49E7370E3uL)),
                ((-1, 1, 0xB99F917A7CD98656uL, 0x87268AB9EB8D151EuL), (+1, 17, 0xB9DF376F8260F63CuL, 0xAB4580AAECAFC369uL)),
                ((-1, 3, 0x938AC6B464F2E7BAuL, 0xE2815C44B39D428CuL), (+1, 12, 0xBEF8B69CB6EF15BCuL, 0xB15F0AD631A2EE20uL)),
                ((+1, 8, 0x8C6CB23326408CC1uL, 0xFAF93A37EAD2FAD8uL), (+1, 12, 0xB59C3CE0D8B4B9FDuL, 0xB51B930EA68F63C6uL)),
                ((+1, 11, 0x8BEF3F44CA41382EuL, 0xE66E7A1A4CFC6BB8uL), (+1, 12, 0xCF32253ADCC1FCAFuL, 0x48FCECABD47D338EuL)),
                ((+1, 10, 0xEE9178208DCF959FuL, 0xCA27D09C3ADD441EuL), (+1, 12, 0xC4717F8A8DB73240uL, 0x092C76045ACD8D3BuL)),
                ((-1, 14, 0x8371C4A126D4F56CuL, 0x4C127C81E54045C5uL), (+1, 13, 0xDEB51BF01CF7F032uL, 0x729A53EE3816FD5DuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA3Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -98, 0x8B4DCB779C3A9FF2uL, 0xE1E573457E885A12uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -87, 0x9DFBAE5CCD64A635uL, 0x79E2A7726EEA27E7uL), (-1, 0, 0xFB7D3183E7AFA305uL, 0x838CDB12921EEF4EuL)),
                ((+1, -77, 0x8D26D62775C45099uL, 0xEB67A538F84CFD65uL), (+1, -1, 0xE6D6C50E6E1E87D4uL, 0xA7F4B29D558DDC80uL)),
                ((-1, -68, 0x852589AAB323F41AuL, 0x5B1D728EC8DF0A87uL), (+1, -7, 0xC419EAF6CAD5CF82uL, 0xAFB12B63F9061B41uL)),
                ((+1, -60, 0x967623CB9EAAEA66uL, 0xFE6AC506D2FF72E6uL), (+1, -8, 0xE3E85A67EB133FDBuL, 0x455F000743C8F70AuL)),
                ((+1, -4, 0x8BD359E065225690uL, 0x121B6266F22509ABuL), (+1, -8, 0x85A17AC9CACF0233uL, 0xF0BC4158E38C0F61uL)),
                ((-1, -4, 0x9F208D3EA070FE9DuL, 0x909E395B37671DAEuL), (+1, -9, 0x8B5B21AC3FA262DFuL, 0xC880ABE1EDCDB795uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0xCF220F0BB2E695FDuL, 0x7DA979D1C7374C7CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xCD0BE20F59C01283uL, 0xCD922AF2EFC15D86uL), (-1, 1, 0x89D51539CFA47997uL, 0x02FC6C5CCC94C39EuL)),
                ((+1, -18, 0xA87007E6629FCC99uL, 0x552B64DD01FFA03CuL), (+1, 0, 0x88C1649A94314506uL, 0xB2E35D2C8A2A6B35uL)),
                ((+1, -13, 0x9279F9EEE9000697uL, 0xB4F26D8E5F88D48CuL), (+1, -6, 0x992DB655953541FCuL, 0x98C7A5C95AA7E91FuL)),
                ((+1, -9, 0x8D111386987B28E7uL, 0xCD6D816940A7B577uL), (+1, -7, 0xC9A20FE86981D73BuL, 0xE655CE17BC194930uL)),
                ((+1, -6, 0x8AEE294AA0C4CE03uL, 0xB036BC7B2E40C776uL), (+1, -7, 0x8D4EA43D6E7CAAFCuL, 0x0CF8508C9480404CuL)),
                ((+1, -5, 0xB96FA57B5FD0176BuL, 0xF302C08B2A3DB979uL), (+1, -8, 0xC50E1B0ADCCF4320uL, 0x3F83EB070305EFE8uL)),
                ((-1, -4, 0xBB959779D35F66DFuL, 0x1E4847A860B8E0CAuL), (+1, -8, 0x800A26BA56381C31uL, 0x2BBCB700B96782C3uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0xD7E6CF71FA7AAAD8uL, 0xD6E0035F0C69473DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0xCE1881D84390F989uL, 0x7B05203A2E846BECuL), (-1, 1, 0xF3FCF4315C4BA777uL, 0xE9C6A680356D6857uL)),
                ((+1, -14, 0xA08505A65229A52DuL, 0xBA4BF5EA355A1CF0uL), (+1, 2, 0x93410FF1FA582E6EuL, 0x16DB4B70D6D36998uL)),
                ((+1, -10, 0x8018248AF8BED59BuL, 0xA3057E7334B9B0A8uL), (-1, 0, 0xDCE470E0112B296AuL, 0x98B54450146339E0uL)),
                ((+1, -8, 0xD15377844B0695BEuL, 0xA0BBE29EE9DECA9CuL), (-1, -7, 0xFE36BDC81B3F6973uL, 0x95BA49B68BED2C2FuL)),
                ((+1, -6, 0x80F8CDC4976BD8C9uL, 0xA0EDAFC716021F1AuL), (-1, -7, 0x9223DD104BEF217EuL, 0xEA740583F0FA1B51uL)),
                ((-1, -6, 0xDF59A1B61DFCE7A8uL, 0xDE8E29C10C7FD6DCuL), (-1, -8, 0xAF8CBCD46A5FD39AuL, 0x4A604F4F39146A20uL)),
                ((-1, -3, 0x8612150E8B77ED1DuL, 0xB67E98A79EAA24BCuL), (-1, -9, 0xCAAEF515ABF63470uL, 0x8A863646927D4A29uL)),
                ((+1, -3, 0x9971D663271EB145uL, 0x7027F75ECDC083B8uL), (-1, -10, 0xCCB4DFB6DD6FC95CuL, 0x432D1E6947F1133FuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA4Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -100, 0xA9130DA42A1C9D2AuL, 0xEDD3AB2749D03E96uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -89, 0xBFD4F40E37F56F22uL, 0xC2F7D91805D8329CuL), (-1, 0, 0xDDA7E8229FECFAC5uL, 0x022F1F9A03868B48uL)),
                ((+1, -79, 0xAB7E8A9C00D9EB75uL, 0x210285D4B3785344uL), (+1, -1, 0xB4F2512531522AA2uL, 0xE61E9288AF4EBB8BuL)),
                ((-1, -70, 0xA1E2F0426C4E6ADAuL, 0xD5C43B7277544EEDuL), (+1, -8, 0xEBFF687D03AD6EE0uL, 0xA9EC96AF7928117FuL)),
                ((+1, -62, 0xB71A35415C3B8D2FuL, 0x4B394361E0D15FB4uL), (+1, -9, 0xF0B44A20AA9239CFuL, 0xE67B6267A86039ACuL)),
                ((+1, -4, 0x929C8886FFFFDEAFuL, 0x19DB45D25E5BD333uL), (+1, -10, 0xF585E28CD86D9F38uL, 0x17FE863F55F2163FuL)),
                ((-1, -4, 0x9004A8D8B54889B2uL, 0x26E45068612909B3uL), (+1, -11, 0xDAAA01EF6FB67CFEuL, 0xF04B797F1C591C8BuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0xD85D39411296581BuL, 0x02A71EDADBF38B83uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xD6842157E103B3E1uL, 0x7AA85C2FD2ADF376uL), (-1, 0, 0xEFBE369AA00BC686uL, 0xA0D05656ADF98647uL)),
                ((+1, -18, 0xB09B7FE3D6F9273AuL, 0x5BEF55A96E4D0240uL), (+1, -1, 0xD194C0353E7EEA55uL, 0xD3C37F2F2AA38A37uL)),
                ((+1, -13, 0x9A1C1398AAC30C17uL, 0x91131F1787129BF7uL), (+1, -7, 0xB063DD653015AE4BuL, 0xCE8921E11CAE7BEFuL)),
                ((+1, -9, 0x955189C0D4A6A8CFuL, 0xF69C4DB535B05A7FuL), (+1, -8, 0xC9D50D2194B33DCFuL, 0x7962A6EA68ABF28DuL)),
                ((+1, -6, 0x950D4ABCF7BE96F1uL, 0xA7CD4AD2722CA24DuL), (+1, -9, 0xF3853736624F4390uL, 0x4DF99010A66B630FuL)),
                ((+1, -5, 0xD277E75D2CD51C6CuL, 0x258A0BC82F4B2E84uL), (+1, -9, 0x90FA81E4DC19C047uL, 0xBCCC7E82B9EA893FuL)),
                ((-1, -4, 0xA622620B26780FC7uL, 0x809B8D03331A021CuL), (+1, -10, 0x9BD76FB12D6F2831uL, 0x860641AA4E9D48A8uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0xE097096B448FE8E4uL, 0x108A8C7DB03B65F8uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0xDC6BED2B40707FE2uL, 0x76FB78F0E7AED4E9uL), (-1, 1, 0x800B07DEA280E49CuL, 0x6FAEC22A32C89B45uL)),
                ((+1, -14, 0xB2D24F592FBF9FC1uL, 0x867C1F1A31DFD227uL), (+1, -1, 0xED22F943B67D17BEuL, 0xBB313CCBCE8C3D4AuL)),
                ((+1, -10, 0x9877E1B257636132uL, 0x84F9683C903F2B16uL), (+1, -7, 0xEE0D8838B8EE6611uL, 0x148F13C6EC52BCE9uL)),
                ((+1, -7, 0x8DA94C996A50805DuL, 0x2D24F2A81061BF8DuL), (+1, -7, 0x91FB0163B5182814uL, 0x108830A737F3ABF1uL)),
                ((+1, -5, 0x800CF17EB1B93B54uL, 0x83F610028B9E4078uL), (+1, -8, 0xC00BBC006EBD7616uL, 0xDF1C13E73EB54BFBuL)),
                ((+1, -6, 0xD15F585DE8EB3D7AuL, 0x006DA0F15C483642uL), (+1, -9, 0xF759CA997B917A6EuL, 0x76EE762F1AE6FFB9uL)),
                ((-1, -4, 0xBB5DCE48A3034423uL, 0xA00754525B2240F1uL), (+1, -9, 0xB0C35C3AC7550D39uL, 0x372ABAD24CE5CBCEuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA5Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -101, 0xAB1A63766C416F84uL, 0xA817821CF98C5E56uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -90, 0xC22EEFD247CFF56CuL, 0x64736DEC920A686CuL), (-1, 0, 0xCCBB0238905904C0uL, 0xE8EB8C40904B1331uL)),
                ((+1, -80, 0xADA78194F9417D8EuL, 0xBFC8DDBFA24D1A94uL), (+1, -1, 0x9B48312D6B2D19C5uL, 0x5A34F9BEEB87DEEEuL)),
                ((-1, -71, 0xA3FE658373D8518FuL, 0xBB05DB20ECACB6CAuL), (+1, -8, 0xA80A43C1C30AD9E8uL, 0xB327224AE6E93825uL)),
                ((+1, -63, 0xB9949AEE6040A790uL, 0xF624CA41BE23BADEuL), (+1, -9, 0x9D7D0883B3393C42uL, 0xC4083DAD71C8D241uL)),
                ((+1, -4, 0xA76CC0FF10ECA669uL, 0x016E52DDEA2D681CuL), (+1, -10, 0x92C225B1A4B0A438uL, 0x01CE0D476686D03CuL)),
                ((-1, -4, 0x959D85EF50994CC5uL, 0x549C79B2F6731840uL), (+1, -12, 0xEC35F3EA0EC8575AuL, 0xBDFC9EC060255373uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0xF68E1FBD4362070FuL, 0xCF718B8C049C773BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xF4A8F063A79502ACuL, 0x89FCA8F649FFA37EuL), (-1, 0, 0xDBB3716F50D0C563uL, 0x9FC4A112A1974D97uL)),
                ((+1, -18, 0xC9AC11152B33907FuL, 0x3D43E8A82F736513uL), (+1, -1, 0xB170F85E116E5640uL, 0x0CB311E6584D66E5uL)),
                ((+1, -13, 0xB050E1F934003EFAuL, 0xB46ED214AD8DC609uL), (+1, -8, 0xF48B8D65FF8EBFD5uL, 0xBE708A3DC0EA4EB5uL)),
                ((+1, -9, 0xAB66FEEAF54BE146uL, 0x7D2D63906E31D031uL), (+1, -9, 0xFFB005C5D4B3DEE7uL, 0x37CD22B5011E1DA8uL)),
                ((+1, -6, 0xAC58C5207FCD6F34uL, 0x0166AC84834FFF31uL), (+1, -9, 0x8C14D49535DD4726uL, 0xF6726574029F52AFuL)),
                ((+1, -5, 0xFA7CF76A2FBEE04EuL, 0xD87ADD7886C87C31uL), (+1, -10, 0x96A1EE5235831D58uL, 0x15D2EBDB0F6E735EuL)),
                ((-1, -4, 0xAA6165598122AD23uL, 0x31207C87C0012423uL), (+1, -11, 0x8FA78B87BE8AB705uL, 0x16746C1E747F3EFDuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0xFF569A896119B5C1uL, 0xE717E45589BAF3D2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0xFB1F233617886E11uL, 0x9BBB9D9753BBA9C0uL), (-1, 0, 0xE8BDF30D1658EF53uL, 0xC342572AE2D2FE6BuL)),
                ((+1, -14, 0xCC593CCBD7DE8B2BuL, 0x5DBE75F8B0E5134EuL), (+1, -1, 0xC5E77CC163550A99uL, 0xED9D8426EF68A665uL)),
                ((+1, -10, 0xAF157C6C5934CE3BuL, 0xE50DECD5106E3E13uL), (+1, -7, 0x9FD17BA071E6D8DAuL, 0xCBABCC98890FCD3FuL)),
                ((+1, -7, 0xA426DEC3611D4066uL, 0xE6FCF42859A20899uL), (+1, -8, 0xB1B980A22C04FF40uL, 0x60D4DBA33BAF2B75uL)),
                ((+1, -5, 0x97C603ABE323AB9EuL, 0x931B74573D4B6C16uL), (+1, -9, 0xD1FD1ED2D46E349BuL, 0xF456BB4877A83DA8uL)),
                ((+1, -5, 0x916FC61DAD7874A2uL, 0xE24ABAD9C607456FuL), (+1, -10, 0xF35963732A6C555AuL, 0xBFA57DF647D63D23uL)),
                ((-1, -4, 0xBD89300A358A6016uL, 0x063DEDAC2C633672uL), (+1, -10, 0x93C0FDEC875601E3uL, 0x237BA4DB5306ECFCuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA6Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0xE346AE2A12B0CC37uL, 0x1A0CD2B488803715uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -90, 0x80FCE3E22C77B415uL, 0x8AD5167E3A230FEDuL), (-1, 0, 0xC205275101930F3CuL, 0x130FE849A6E70452uL)),
                ((+1, -81, 0xE6C0619FA6A67782uL, 0x8CE22B319F8465A8uL), (+1, -1, 0x8C07B8616C5507B2uL, 0x9B7E4041BFA4D50BuL)),
                ((-1, -72, 0xD9F8E9C50B5FC380uL, 0x8786CACDD20FA6F8uL), (+1, -8, 0x844AF8EE7A35712FuL, 0xF514F1691A47A4CFuL)),
                ((+1, -64, 0xF6BE9DA5F564682FuL, 0xAA0DC30ACB44F9B3uL), (+1, -10, 0xE9C9D9FA414F0D94uL, 0x669346326CA7C168uL)),
                ((+1, -4, 0xC48D56739F13F8FAuL, 0x805B99D7F2621995uL), (+1, -11, 0xCC8F7F690BC3A731uL, 0x4365FED4ECFAB47AuL)),
                ((-1, -4, 0xA48C35559E345264uL, 0xDB0C835C01D844EEuL), (+1, -12, 0x99737995CB1B0BF3uL, 0xDA7736025612154BuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0x90885EA18B10468BuL, 0x63BB9BFF1BB1EFD0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0x90885EA23370FF8CuL, 0x1C87A78A40F344F6uL), (-1, -1, 0xB3FD54B57B60ACCFuL, 0x548EC6A98F0FD1C5uL)),
                ((+1, -18, 0xF0E34864F608CE13uL, 0xF8D23DA59BC308E8uL), (-1, -6, 0xC419092CF6C6764FuL, 0x798A1BD7B054851AuL)),
                ((+1, -13, 0xD61F5CCCE56BB092uL, 0x45BD5E0E74E1807BuL), (-1, -6, 0x842C35FC02370296uL, 0x253B0E8016F6D497uL)),
                ((+1, -9, 0xD61F5CCE92161D6DuL, 0x40A323E1ED429E50uL), (-1, -7, 0xC45638BDA0D74FC6uL, 0x4DEAFDD4070704E4uL)),
                ((+1, -6, 0xE465B8560780E2F6uL, 0x9BFABE61CD5BC6DFuL), (-1, -7, 0x954CDD8928A7911FuL, 0x93ABE4D6E0AFB55FuL)),
                ((+1, -4, 0xCB0515A4523F58CCuL, 0xA437CF8AA7D90AEDuL), (-1, -7, 0xA5DC6757A3E8D479uL, 0x9EE4DB9F87A069BBuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0x9577805095AC9060uL, 0xA61B802BBC8B8DF2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0x932FB6D455DCD92EuL, 0xC4FB1DDE221A5A22uL), (-1, 0, 0xDA5D4971B2A6600AuL, 0xE9F90C2D55E93624uL)),
                ((+1, -14, 0xEFFD5A9546482D12uL, 0x8A0711353BB35404uL), (+1, -1, 0xAF6089C74926B5F9uL, 0x9DC8431970DD0837uL)),
                ((+1, -10, 0xCE3AC13AECF6A48AuL, 0x46651FD228775ED5uL), (+1, -8, 0xF24C25C9376B89DBuL, 0x3F99A55260E43F6BuL)),
                ((+1, -7, 0xC267B5F8CA9538DDuL, 0xA156D60D516964E7uL), (+1, -9, 0xFBDB6503F90A8F18uL, 0xD53D9E74BA1E8546uL)),
                ((+1, -5, 0xB623DD48EA0E241AuL, 0x3924BE392076CA43uL), (+1, -9, 0x8A3FF3DB1AD9D0B7uL, 0x4B013A7D209FDD71uL)),
                ((+1, -5, 0xBD44F289B2EBA438uL, 0x74EC96776C0030E3uL), (+1, -10, 0x94BE987403CC3139uL, 0xE8CC89AEB6A58BBBuL)),
                ((-1, -4, 0xCD019341C5937B6BuL, 0xE7DF6802E3DA0274uL), (+1, -11, 0xA277896F7F5D83ADuL, 0x7026F3FAF7AEB442uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA7Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0xB0ED4A68991E4AB0uL, 0x9787DB703E345A20uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0xC8D9161189A2FE74uL, 0x9B786899769B93C6uL), (-1, 0, 0xBAB766C5936F32DAuL, 0x6DF0868F3CB23F43uL)),
                ((+1, -81, 0xB3ADB6657EF5A0E3uL, 0xF440782907236761uL), (+1, -1, 0x8210C17856CA1551uL, 0x62C2BC2CD74BC2F5uL)),
                ((-1, -72, 0xA9C2388FAC0A1003uL, 0xD3D7A9E3C490FEA5uL), (+1, -9, 0xDE0A6C784DE2BBFAuL, 0x25DC92A68D42BCA8uL)),
                ((+1, -64, 0xC035A7F05EACA184uL, 0xE9238AA6957238F8uL), (+1, -10, 0xBBF47EF190AF42C1uL, 0x1C17E11851BD8C82uL)),
                ((+1, -4, 0xE81684CCABD29C29uL, 0x651437557D6B2B2BuL), (+1, -11, 0x9D115BF02734574FuL, 0x0D9A633E3F5BC735uL)),
                ((-1, -4, 0xB94C0E6C063C63BAuL, 0x0FF866C6E350A810uL), (+1, -13, 0xDFE50E08FFEC2231uL, 0x00BB1B445C06AD53uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0xAA830D568CD367FFuL, 0x9A0469536DD3442DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0xAA830D571AAEF314uL, 0x9609EFB7D99A22C1uL), (-1, -1, 0xAEF28B6F2445789BuL, 0xE51C7717E2131C07uL)),
                ((+1, -17, 0x8E17E073CC5268EAuL, 0x84265ABADF702361uL), (-1, -6, 0xB0D906FC2900A13FuL, 0xE0F5466360620F58uL)),
                ((+1, -13, 0xFC9C39B293D985DEuL, 0xE0AAE1F5AF6B83F4uL), (-1, -7, 0xE4D533F9D5AD7A3AuL, 0x89C5B0EFE5944F61uL)),
                ((+1, -9, 0xFC9C39B3FD02F3BCuL, 0xA4C39DE7752CF8B2uL), (-1, -7, 0xA298192C786B40C7uL, 0x1859F47FA948ACBCuL)),
                ((+1, -5, 0x86B9B860EDE4CAFBuL, 0xD8BC9B41C7D816E9uL), (-1, -8, 0xED36B7A4938B7146uL, 0xE4C0E4B7566F2A0DuL)),
                ((+1, -4, 0xEF830EE7542E3824uL, 0xB41F5D5D8B4E487BuL), (-1, -8, 0xF75042F5E247DC74uL, 0xD21EDA43A7D762B4uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0xB029EAE799A9B28BuL, 0x568AE8DF0B1295F5uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0xAD9FE12AE5FB9E92uL, 0xF66DFD26D4D3F6E8uL), (-1, 0, 0xD0BB7EAD07B5CF79uL, 0x547E3DF60763D99EuL)),
                ((+1, -13, 0x8DB9859CEAD608BEuL, 0x1E69EE6B059F7CE7uL), (+1, -1, 0xA0FD021D4AA30DCEuL, 0x03BC501C2A00B49EuL)),
                ((+1, -10, 0xF40E2492EF58853BuL, 0xF25966BAC5D238BFuL), (+1, -8, 0xC619FBA8D67EA9FEuL, 0xDA5F7B25058FE2A6uL)),
                ((+1, -7, 0xE6E393450CC76ED3uL, 0x25E2830EE5DC5B49uL), (+1, -9, 0xC41494A1AB6C775FuL, 0xF4527260BA0F75A0uL)),
                ((+1, -5, 0xDA31893CFA1B1FA2uL, 0xF6E2EE6137B614D2uL), (+1, -10, 0xCC1D18E9C6814D96uL, 0xE6DC1B4E1DF16F96uL)),
                ((+1, -5, 0xEE18B79FB09054B1uL, 0xFE89E230173EB80CuL), (+1, -11, 0xCFF59E611818FE29uL, 0x2202586EBB11BFD7uL)),
                ((-1, -4, 0xE445704A266724FEuL, 0xDF58F229CA972D0AuL), (+1, -12, 0xD2AED3FCCB9B638BuL, 0x2DB077E492673927uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA8Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x97F8FA35740663E0uL, 0x10A1FB6C2907B02CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0xAC889C92CAE6FF1CuL, 0x48D6470292EB0ACDuL), (-1, 0, 0xB575759882624B4FuL, 0x9FA6429A3B95896EuL)),
                ((+1, -81, 0x9A5D5DBDE398FE1AuL, 0x35F29FA5FD27346DuL), (+1, -2, 0xF63741DE0B833831uL, 0x2275B2216C1A9855uL)),
                ((-1, -72, 0x91DC89F26542B15DuL, 0x70D8990C7C670D5EuL), (+1, -9, 0xC26AE22D66531C72uL, 0xEEB2809AA6E0EBC4uL)),
                ((+1, -64, 0xA52DB1929A49B94FuL, 0x8858E06158D5E69DuL), (+1, -10, 0x9F55723CF7B3EE15uL, 0x87ACBBE4F4154A36uL)),
                ((+1, -3, 0x889D4166E5FFFC3CuL, 0xCFBF78B9AEDA11BBuL), (+1, -11, 0x809B6ED2E14D036BuL, 0x3FB5783A0BA71F3CuL)),
                ((-1, -4, 0xD27575299283774AuL, 0x87E6CEDD99269D55uL), (+1, -13, 0xB062A2B3DF1C407BuL, 0x7F3F7A09EE9CF363uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0xC89C6D9D7FAAFCD0uL, 0x70C93F39FFBC2DF6uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0xC89C6D9E00044E71uL, 0x82CD98C563E2F5E4uL), (-1, -1, 0xAB61DD228EDECB6BuL, 0x7531526961BB95A6uL)),
                ((+1, -17, 0xA72D060428CCCE5FuL, 0x0C2835EF5CE85A76uL), (-1, -6, 0xA3A880CE88150039uL, 0xF136029A03FAE0D0uL)),
                ((+1, -12, 0x9499CC75FFBA550CuL, 0x081A9ED65C5F7C7CuL), (-1, -7, 0xCD52E28B67329177uL, 0x03DF2EBB28946C08uL)),
                ((+1, -8, 0x9499CC76A3001543uL, 0xB11207B673E3D5DDuL), (-1, -7, 0x8D18257F546C6B88uL, 0x104A0A4861C57AFDuL)),
                ((+1, -5, 0x9E81EB2A0EDB4898uL, 0x08D1BFAFB54FD3F4uL), (-1, -8, 0xC772F46BEDAC4556uL, 0x1DB4AD4A069E4A1AuL)),
                ((+1, -3, 0x8CE542D1027F84D9uL, 0x54F9F28990487555uL), (-1, -8, 0xC63A8DA14753B5F8uL, 0x582DCC2F3E271488uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0xCF1EBC1052CA3098uL, 0xA9A2ED7AFD590EECuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0xCC4253CC72168C5EuL, 0xD6FD55A4A3B2681EuL), (-1, 0, 0xC9E31B9F8A6486DDuL, 0x68B6120E0398F148uL)),
                ((+1, -13, 0xA6E0CC308115DA80uL, 0x1B82ACB9EC37D997uL), (+1, -1, 0x971AA675F18720E2uL, 0x06DA0CCB56175113uL)),
                ((+1, -9, 0x8FE2BDFA63BB0CD9uL, 0x97CA3402649029F6uL), (+1, -8, 0xAA3C9072CBCFBCFEuL, 0x135A40741AEC05B3uL)),
                ((+1, -6, 0x8877E88CB69B53F6uL, 0x210B016102FEE31EuL), (+1, -9, 0xA26B3A69B3762F8BuL, 0x6BD4EF994246581FuL)),
                ((+1, -4, 0x81BE1FAC120CEF2DuL, 0xFF93D1600AFB66FDuL), (+1, -10, 0xA273E66A1EEFEDE9uL, 0x606284E029EFC30DuL)),
                ((+1, -4, 0x9242D2B7F3B338D1uL, 0x3991A145A27C7B3EuL), (+1, -11, 0x9ED1EA53B8E63213uL, 0xA938C2FF2B213616uL)),
                ((-1, -3, 0x809927AB2A282994uL, 0x2D179EA018A8B057uL), (+1, -12, 0x9829CB927D59A018uL, 0x6D0FD92CA334B620uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA9Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x8B198EB399E1B371uL, 0x78558FE35BC875AFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x9DEDC7CA2A199F0CuL, 0x2E9CD3D1736D6757uL), (-1, 0, 0xB1849893D04FB7B1uL, 0xF2028C884E075CC6uL)),
                ((+1, -81, 0x8D4F18D6D09893C7uL, 0x1FAFBEC2EDF3DDF6uL), (+1, -2, 0xEC048C7B5ED233BAuL, 0x4F04702E580B258BuL)),
                ((-1, -72, 0x8589BC3E3270CC3BuL, 0xAEABDE7B4E26F4A0uL), (+1, -9, 0xAF4C3DEC8C22D7BAuL, 0xAAED70BB4A96AAEEuL)),
                ((+1, -64, 0x973DC029B2577A5EuL, 0xAD6A5B8878D507B2uL), (+1, -10, 0x8C1AECC9FFEB9E0CuL, 0xC0197EE79D214BD3uL)),
                ((+1, -3, 0x9FCA247672CC48C2uL, 0x4B782817D8B29110uL), (+1, -12, 0xDC28F318AE325993uL, 0x2D455D9415AC092CuL)),
                ((-1, -4, 0xEF6085C28EFB9469uL, 0xC27D8ECE7E2B18F8uL), (+1, -13, 0x9285F20BFBC8304EuL, 0x1462525F230912BFuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0xEA88AE2714AFE51EuL, 0xD7B318BE642EC517uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0xEA88AE27907A58A6uL, 0xC49DA9CF308D9C06uL), (-1, -1, 0xA8C1081E9B69CB9CuL, 0xA3C4BF1FEBC8622EuL)),
                ((+1, -17, 0xC371E676C76191BDuL, 0xF86245C9E77FE1ADuL), (-1, -6, 0x9A334858C367E37BuL, 0xEE8ECB07344E77AEuL)),
                ((+1, -12, 0xADBA93F84F0EFE35uL, 0xBCADB48D046B2ACEuL), (-1, -7, 0xBCE085F624AAE416uL, 0x1981F28204FA3688uL)),
                ((+1, -8, 0xADBA93F8EC9429B5uL, 0x21A0DCF690484481uL), (-1, -8, 0xFCF13A1AED799E65uL, 0xD3BC33C96514C523uL)),
                ((+1, -5, 0xB94F8CC6117B64F7uL, 0x4F7C80735DB16877uL), (-1, -8, 0xAE609AE190B69C07uL, 0x3DE61489D97BA150uL)),
                ((+1, -3, 0xA4B87D22C364EDCDuL, 0x41CD6E2BC7F434A6uL), (-1, -8, 0xA727B74EB2254284uL, 0x6201C2ABF4D5803AuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0xF205CD3729072FECuL, 0x607D9761C5822D28uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0xEEC9B6CC1E2555C6uL, 0x3152E0FA23F6084BuL), (-1, 0, 0xC4CDBF6DF4DBD542uL, 0x080345319CC30A8EuL)),
                ((+1, -13, 0xC33753828A49A257uL, 0x9C36BAFAD78D6DFFuL), (+1, -1, 0x8FF21A00761DAA6BuL, 0x8934D2327075A955uL)),
                ((+1, -9, 0xA87E603F47BBC97CuL, 0x715CC24842F762FEuL), (+1, -8, 0x975E59641ADE275AuL, 0x5E652DA2AE0120C2uL)),
                ((+1, -6, 0xA01B7B758E94B783uL, 0x623072AAA795B185uL), (+1, -9, 0x8C5FF9613B110216uL, 0x7FC11DF322380E72uL)),
                ((+1, -4, 0x98E3F0F124CFB8F9uL, 0xEF96C62E8B454958uL), (+1, -10, 0x882346F35A345743uL, 0xC3D295A95529D44DuL)),
                ((+1, -4, 0xB0633CF9653CCBE2uL, 0x6EDC8B84644624BEuL), (+1, -11, 0x80E43CE99FB3D4B3uL, 0xD564382D20E355D4uL)),
                ((-1, -3, 0x9165E95D47079B0BuL, 0xEA261376DC5F2049uL), (+1, -13, 0xECA24483D372046EuL, 0xB158E0CE32DF8397uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA10Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x84D2D53F13842E19uL, 0x2FB1C8D7A24DF70AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x96CF5DB25715380BuL, 0x4E78E59F3055DA22uL), (-1, 0, 0xAE78892A106CD03BuL, 0x8F6196FEFEC6256CuL)),
                ((+1, -81, 0x86F28FB6DD9A12C0uL, 0xD27D26376587BD76uL), (+1, -2, 0xE44415EA3A291B46uL, 0xDF6421ED82B1732FuL)),
                ((-1, -73, 0xFF1277768016E63EuL, 0x12A370CAE4C5C191uL), (+1, -9, 0xA169698F56E8DA41uL, 0x74F1FFE73B526D65uL)),
                ((+1, -64, 0x9074FEF4D49AD5ABuL, 0x8471392B95405E56uL), (+1, -11, 0xFCEC9F3AC2510D11uL, 0x8052F9A58A73E752uL)),
                ((+1, -3, 0xB97657A4BA0E80DCuL, 0xAD94731F69AE98EDuL), (+1, -12, 0xC282F55E8D4D98E5uL, 0xE321BB4D49E40EE3uL)),
                ((-1, -3, 0x87DB1EDB0EEEDEE6uL, 0x7601376939342F4CuL), (+1, -14, 0xFCD397B99116FDEFuL, 0xDE2067051C3E6609uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0x880F3BA6509728C2uL, 0x4A33977C76856F9CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0x880F3BA68D602FA5uL, 0xC8920334063B3D62uL), (-1, -1, 0xA6C03FE8487AB2F0uL, 0x306DD3503ABDAB99uL)),
                ((+1, -17, 0xE2C40E160DBD93EFuL, 0x205C35475877F6A9uL), (-1, -6, 0x932C2898297A88F8uL, 0x627C7C3E7CEA950EuL)),
                ((+1, -12, 0xC991D3A2525809A8uL, 0x790939B7611EDCFBuL), (-1, -7, 0xB0E0FAA36E6973CAuL, 0x10C8F484109379C3uL)),
                ((+1, -8, 0xC991D3A2ECF198B7uL, 0x19CD81DE988AB843uL), (-1, -8, 0xE80B75B0D435C496uL, 0xD4BE1FF978736D2EuL)),
                ((+1, -5, 0xD701F2D0B89A46F4uL, 0x526FA629D15E1197uL), (-1, -8, 0x9CDAC69979D06CADuL, 0x938D20B0364756C9uL)),
                ((+1, -3, 0xBF1E2D2C36F3165DuL, 0xA1C0CFCD02CB47D9uL), (-1, -8, 0x91F610875D27DD74uL, 0x2BA23F717D9A2C5FuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0x8C59BC591F65D8BCuL, 0xC251F51F99D5B87AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0x8A85EBAAA3BE891FuL, 0xD55C3677593027E5uL), (-1, 0, 0xC0E636E55227B2EDuL, 0xE5846DD3D07DFCFCuL)),
                ((+1, -13, 0xE29BA1DA991D5547uL, 0xE63B15ACDBC89D80uL), (+1, -1, 0x8A8D24ADE0880EBEuL, 0x7B9F9713D2C059B9uL)),
                ((+1, -9, 0xC3BE786A905CB868uL, 0x74066FB274346207uL), (+1, -8, 0x89E40195D73A53DAuL, 0x2FE955D928305829uL)),
                ((+1, -6, 0xBA44C31AAC8C8790uL, 0x468B181E3A4EC66EuL), (+1, -10, 0xFA123E4A0C74175DuL, 0xDF8CFA89C57A2135uL)),
                ((+1, -4, 0xB278E6E9734C210FuL, 0x9EC11EC6E5CB7D38uL), (+1, -11, 0xECACA63113B3CA29uL, 0x2BDE7BD1EC3133EBuL)),
                ((+1, -4, 0xD1798B94872E8A2FuL, 0x31897CC596B5F954uL), (+1, -12, 0xDA707027643C5E24uL, 0x70B2E66B4E273D96uL)),
                ((-1, -3, 0xA447E092344AA7BFuL, 0xDACCEDE740E0C79AuL), (+1, -13, 0xC1E24D0F7A2EB040uL, 0x63F90FC51F7B9FF3uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA11Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x828DEDF96DD4A32BuL, 0x21FB25E518F43E30uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x943D3385D6023FF9uL, 0xD89570351F9D3EA8uL), (-1, 0, 0xAC0E6C820692E1E8uL, 0x947A8CDD753D894DuL)),
                ((+1, -81, 0x84A74126547D997DuL, 0x6E1719A354B5D86DuL), (+1, -2, 0xDE345020118AD42FuL, 0x1E9F202A110FF946uL)),
                ((-1, -73, 0xFAC03846B9306430uL, 0x670693EAB7D0E6E5uL), (+1, -9, 0x96F269FED00B3077uL, 0xFDE7EA610A62E651uL)),
                ((+1, -64, 0x8E052AA64AD6646BuL, 0x5C956C75B81876F2uL), (+1, -11, 0xE8BD37B53FD96B8EuL, 0xAC2F44381E37027BuL)),
                ((+1, -3, 0xD591916BAB462FBBuL, 0xA33F9F68E54910B4uL), (+1, -12, 0xAFE8ACE69AFF0ED8uL, 0x479FEC6FBA64A98AuL)),
                ((-1, -3, 0x99A300E635BE4E53uL, 0x24D8E839C805CE35uL), (+1, -14, 0xE049D9C9A95D1AA8uL, 0x57C254B57B7EBE93uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0x9CA2B21B575D934FuL, 0x8AC89A325E555313uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0x9CA2B21B94780280uL, 0xD876359FE68C959BuL), (-1, -1, 0xA52EB673F9FA66EEuL, 0x7F6B32B051D12F79uL)),
                ((+1, -16, 0x8287946C8D15AB51uL, 0xFCCF4CBAC648FEA4uL), (-1, -6, 0x8DCC3E89C24E10A1uL, 0xDFEC3A3DFF3BE7A5uL)),
                ((+1, -12, 0xE80D79A508AE4FA4uL, 0x2A36F628D98C2FAEuL), (-1, -7, 0xA7D4B3ED9B647EBEuL, 0x367E247A2BC65F00uL)),
                ((+1, -8, 0xE80D79A5A4011F6FuL, 0x33BF439031B2DAC0uL), (-1, -8, 0xD88A95F8A2BEEA3DuL, 0x4FBEF9C247AA25D4uL)),
                ((+1, -5, 0xF785D717E32B9036uL, 0x99D784AA5097FC9BuL), (-1, -8, 0x900DBA424B15DBF3uL, 0x188FA07D5741DA75uL)),
                ((+1, -3, 0xDC0530F9B30FE79AuL, 0xC925140B70629224uL), (-1, -8, 0x82DE638DF7A9E310uL, 0x0E2DA492870C4E29uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xA1870222D7E4B819uL, 0x4C10D91EB819A5A5uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0x9F77E4FD71C4BED6uL, 0x075E0EA998585DFAuL), (-1, 0, 0xBDD1ECC0969633D1uL, 0xFEB68A079B137D80uL)),
                ((+1, -12, 0x827CF227916AE7DEuL, 0x98175EE608F91042uL), (+1, -1, 0x865C0E3CB923B459uL, 0x448D55C6E5C1D50DuL)),
                ((+1, -9, 0xE192A9274E112A75uL, 0x653DB3049AF0E432uL), (+1, -9, 0xFFB84CB065B944C1uL, 0x29810B7BD0BFDEC1uL)),
                ((+1, -6, 0xD6E57A525F67DF3BuL, 0xD96E1299CCFE7546uL), (+1, -10, 0xE3B64D6205343DDCuL, 0x441036FCA24784B8uL)),
                ((+1, -4, 0xCE7240B3B51708B9uL, 0x33301BEB89E79E44uL), (+1, -11, 0xD34EB7A940E0744BuL, 0xA04D2754E00186A0uL)),
                ((+1, -4, 0xF58A74F04208181FuL, 0x5018C801EBC41175uL), (+1, -12, 0xBF0B82F777F95CC1uL, 0x373FF3E5D6AC72C3uL)),
                ((-1, -3, 0xB91ABD6CB2C06CDEuL, 0x080F80E3A9AF5B5CuL), (+1, -13, 0xA50C5EBD1902CD56uL, 0x03F0A3B1A7B81406uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA12Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x82F0B0DC2DE4DEC8uL, 0x8CAD14966C82A6B6uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x94AE7A426DEBE802uL, 0x3CA5FB6FED2D50B7uL), (-1, 0, 0xAA1AD2A59681BBCDuL, 0x3A95383E44AC1BB7uL)),
                ((+1, -81, 0x850DF178ACA890DEuL, 0x5517DEF64E8A1EE8uL), (+1, -2, 0xD95B28416CD58816uL, 0x08A80797800FBD2AuL)),
                ((-1, -73, 0xFB8574D736C5E372uL, 0xFA2A6B6E260ECDF5uL), (+1, -9, 0x8ED3F5F707604DD8uL, 0x95D4DA450DC52886uL)),
                ((+1, -64, 0x8E770D0A3A9A3D67uL, 0x6DB0F14EAE9C435DuL), (+1, -11, 0xD94FB37FEB144AADuL, 0x48190B6D299E9C5CuL)),
                ((+1, -3, 0xF4119984FB425B91uL, 0x7F530368DBA5BCE3uL), (+1, -12, 0xA1EA8BC6468B4A40uL, 0x21812089D7CA8A84uL)),
                ((-1, -3, 0xACF987395847541BuL, 0x23677DB496D0A5D7uL), (+1, -14, 0xCB338C19D3DF4CABuL, 0x75D2AF1241653F26uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xB2F714A400E455C6uL, 0x6F0A8331CFC7336EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0xB2F714A440772025uL, 0xC2BD22A21A5B0974uL), (-1, -1, 0xA3ED23BE3076F473uL, 0x0099D9606318E008uL)),
                ((+1, -16, 0x95233BDE742E9ED2uL, 0xCBEDA7CEE5EAEFA2uL), (-1, -6, 0x899698C79A74671CuL, 0x59104FA4DF42DD7FuL)),
                ((+1, -11, 0x849118C5FF060E39uL, 0xBFEC0AC87E9B0BC5uL), (-1, -7, 0xA0D246E26DD18751uL, 0x467533DC7DF311E6uL)),
                ((+1, -7, 0x849118C64FDBDA48uL, 0x2AED0629294F1D52uL), (-1, -8, 0xCCB13320D1A70AFDuL, 0xF47958355144FAEEuL)),
                ((+1, -4, 0x8D6791E50498040BuL, 0xA75A6C264374FCFFuL), (-1, -8, 0x8658F57FBCB29320uL, 0xD6B4F9D8DE73E057uL)),
                ((+1, -3, 0xFB62CA7BA59CCA9CuL, 0x420ACA1EADE6ACE8uL), (-1, -9, 0xEFAD9A9656062537uL, 0x6F5CCC0082B27833uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xB882A8D086927791uL, 0x5CA784138DBD5F6BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0xB632F54B8F6A60E3uL, 0x6B443EBBB59B057DuL), (-1, 0, 0xBB56E1E87B24A530uL, 0x034D9C8359564210uL)),
                ((+1, -12, 0x9522D04E80F2DA1AuL, 0x1BB126D81090E4DAuL), (+1, -1, 0x8305AD695B00325CuL, 0x8CB9AD3FF32F5956uL)),
                ((+1, -8, 0x80F84C936188EA4CuL, 0xFA7BE18224AF1E90uL), (+1, -9, 0xF04D70F84535926CuL, 0x982A5545565948FEuL)),
                ((+1, -6, 0xF5F484883A1F9EADuL, 0xC590276D62834E08uL), (+1, -10, 0xD2D148E9B58D1400uL, 0x3456664122B17C68uL)),
                ((+1, -4, 0xECC8E9E9BBEE5510uL, 0x519E4FD2FA652F26uL), (+1, -11, 0xC07D1A95CFEB97E6uL, 0x6FEC61F00159E31FuL)),
                ((+1, -3, 0x8E4BBB5515D5819BuL, 0x21DBCFCD5B5132E3uL), (+1, -12, 0xAB19E8C17A772C53uL, 0xCD77225C162F7D38uL)),
                ((-1, -3, 0xCFC90CA2BD5481D3uL, 0x93B43823CC21436CuL), (+1, -13, 0x909660EE8AA04D45uL, 0x8A2958800E9D2C43uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA13Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x8537B993BA8D433AuL, 0xFF04AF3B7C14859FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x9745759BDFA778FDuL, 0x6FA6D627BDD6E64DuL), (-1, 0, 0xA880505D64742607uL, 0x13872A50D8491149uL)),
                ((+1, -81, 0x8760595E68FDD7B5uL, 0xD19B71A042EDEEA2uL), (+1, -2, 0xD567EC4D095EC0D1uL, 0x88C6312C7465FB34uL)),
                ((-1, -73, 0xFFEBB75788A6AC97uL, 0xB570D6F7F89CAFAFuL), (+1, -9, 0x886160B3F750F339uL, 0x3017C0B6C86DD5ECuL)),
                ((+1, -64, 0x90F6CC703929546DuL, 0xCB149BF1A8A62C3EuL), (+1, -11, 0xCD353B5A867529EBuL, 0x2DDD2208EBEFF039uL)),
                ((+1, -2, 0x8A77DAAD77403A8FuL, 0x9E8F54B2871B3E12uL), (+1, -12, 0x9714E479A95A9420uL, 0x4F05E81FCD951982uL)),
                ((-1, -3, 0xC1D5C665F84067D0uL, 0x373F437A0E33F803uL), (+1, -14, 0xBB1C57FD2BCA16A4uL, 0x756D37B6EC7B5B68uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xCB075AFAEC340B5EuL, 0x1A3FF0BF4356B49DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0xCB075AFB2E991497uL, 0xA19C4F3112791EDAuL), (-1, -1, 0xA2E6AFC5828349C6uL, 0xC5E2311A739DFBC2uL)),
                ((+1, -16, 0xA930CBD192BB9442uL, 0x339F8700D973A06BuL), (-1, -6, 0x8639698150125EDDuL, 0x6C77277F32D44ACDuL)),
                ((+1, -11, 0x9664436539934668uL, 0x8F5D6338CE5DE602uL), (-1, -7, 0x9B44DC942D1D7520uL, 0x74DFFE4419EE8F99uL)),
                ((+1, -7, 0x966443658E0154C9uL, 0xDB06BDDE0E39D84FuL), (-1, -8, 0xC366EEB3889EAFE6uL, 0x051ABD6DC99F77CDuL)),
                ((+1, -4, 0xA06AF28EE540D61AuL, 0x311BAB796AF5442BuL), (-1, -9, 0xFDA7BB77735D3F01uL, 0xDE5211CBE236603BuL)),
                ((+1, -2, 0x8E97F40DBC5C23B3uL, 0xB624FDCFB2932EA5uL), (-1, -9, 0xDEC20DB0C0678F75uL, 0xAFA4CEEAD16377B2uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xD14763B0B7CA66E8uL, 0x728136816D9F46A4uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0xCEB1F5A311780DAEuL, 0x5D0FA29BB9EA2DBDuL), (-1, 0, 0xB94E4B96DDBB384BuL, 0x9D7CF166277307E0uL)),
                ((+1, -12, 0xA93B4C4D4BA4F1DFuL, 0x902DBAAC0E4BEAB2uL), (+1, -1, 0x804FE3C278515596uL, 0x387C330184400248uL)),
                ((+1, -8, 0x9268B5130542169BuL, 0x2B676B1CC5A74E46uL), (+1, -9, 0xE4257FEACFCD54CFuL, 0xE03F88AE36BFC623uL)),
                ((+1, -5, 0x8BB5E39A4693CB79uL, 0xAFFED6001A282ED4uL), (+1, -10, 0xC5AE2BA7F275DA52uL, 0x5B9A5C4E9F3C7545uL)),
                ((+1, -3, 0x86BC00B4059725C0uL, 0xA23C9B259EDDB50CuL), (+1, -11, 0xB21304C106E15A0FuL, 0xF90C438A1EA35E50uL)),
                ((+1, -3, 0xA3504B870ACA3216uL, 0x39FAD156EC6E5F7CuL), (+1, -12, 0x9C0F960FBF65F8F3uL, 0xA0ADD0214157EF26uL)),
                ((-1, -3, 0xE8458CB348CD984FuL, 0xA5AC6434B9AAA75EuL), (+1, -13, 0x817AA82540BFBD54uL, 0x263C314D33855029uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA14Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x88EDB47CF35B5BEDuL, 0xDC3ABECCB1458F73uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0x9B7CFF23F09D8485uL, 0x730D215ABEECC297uL), (-1, 0, 0xA72A48660FEEC5B5uL, 0xC4C5D6A0CAC5BF6DuL)),
                ((+1, -81, 0x8B2766E5A661F82DuL, 0xC68D2F7DDE89A078uL), (+1, -2, 0xD2232FD3497376C0uL, 0xA5B2ACDCE5AAB11CuL)),
                ((-1, -72, 0x83890EBD29C8638DuL, 0x397EDB11335E8465uL), (+1, -9, 0x832946D55C323E86uL, 0xC20636999B6CE3F9uL)),
                ((+1, -64, 0x95052C2422C62409uL, 0x0EE883588C410FF3uL), (+1, -11, 0xC38225923CE702A9uL, 0xAEAFD78D807B7A67uL)),
                ((+1, -2, 0x9C13A4BC9B51FE9CuL, 0x627E9C3C1E9246CCuL), (+1, -12, 0x8E7E1DE70B4E253BuL, 0x189DCB76B4E2A35EuL)),
                ((-1, -3, 0xD831FC899910A0EEuL, 0xD5E58C97B73A89A0uL), (+1, -14, 0xAE825FBFBA6CB619uL, 0x54AFCF47424E44B0uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xE4D0137C422EA55AuL, 0x079B7208E6C9ED00uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0xE4D0137C87CC326CuL, 0x141196717A7E30A5uL), (-1, -1, 0xA20D008506FBC761uL, 0x88E62EA445787BF8uL)),
                ((+1, -16, 0xBEAD6592B58F6E73uL, 0xBE9DF1BE99B6CD97uL), (-1, -6, 0x837D478BD8139162uL, 0x3633BF736FB9E522uL)),
                ((+1, -11, 0xA97DAF9F23005484uL, 0x3852D8ECD5292BAFuL), (-1, -7, 0x96C97F8B4419CD9EuL, 0x97D8A020ED1E5567uL)),
                ((+1, -7, 0xA97DAF9F7B82A097uL, 0x7DE0899307329B4FuL), (-1, -8, 0xBBF7884B83CC3BC5uL, 0xF9456F80904D5206uL)),
                ((+1, -4, 0xB4CA54EED6EB8DC5uL, 0x7D7FEFCEBBD70091uL), (-1, -9, 0xF1BA61BCE721FCEDuL, 0x0FE9FE1FB84CB35CuL)),
                ((+1, -2, 0xA0B3D9B860612389uL, 0x4ADE9BEF10DF895DuL), (-1, -9, 0xD17DCB5FA19074A9uL, 0x987F71CAAC08BECCuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xEBD192CF4DCE735FuL, 0x21BDB114104A9BF0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0xE8F15E462267936AuL, 0x3E7393457A20BE27uL), (-1, 0, 0xB79D424662DAB368uL, 0xD176A60F507F00F8uL)),
                ((+1, -12, 0xBEC3914513D3EF0BuL, 0x83033164294CBD98uL), (+1, -2, 0xFC26799FE232C050uL, 0x2799A09089947D02uL)),
                ((+1, -8, 0xA5182F68049F76CBuL, 0xA3DFFD952FB3B8E4uL), (+1, -9, 0xDA5C2BD1D5AC02D7uL, 0x227621E96851B953uL)),
                ((+1, -5, 0x9DA38146BD7E9059uL, 0x2C883255423066E5uL), (+1, -10, 0xBB3987DAFF05C1C7uL, 0x9F06CE93131D3C23uL)),
                ((+1, -3, 0x983E0559C7BC261FuL, 0x88DC1EED75C31B81uL), (+1, -11, 0xA6BEB71D2CBF8636uL, 0xDCF2096C9AE17B3DuL)),
                ((+1, -3, 0xB9D29BF19D4D1F07uL, 0xA792124EC11E6A04uL), (+1, -12, 0x9064616904B7D9C6uL, 0x0A660D200503B8D9uL)),
                ((-1, -2, 0x8143DE7F0EBC5453uL, 0x97B13293372F52F0uL), (+1, -14, 0xEBEC421D830EA7FAuL, 0xA3BD024363ADBA1DuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA15Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x8DC88A97CFA42CDBuL, 0x4DC2E91F27A7869BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0xA1010134CF2DC840uL, 0x4CED1E3B3A3DB923uL), (-1, 0, 0xA609DF481E8974C5uL, 0x44B44A4BE282EFF1uL)),
                ((+1, -81, 0x9017E7E78188DE56uL, 0xDF41CB7B11E89429uL), (+1, -2, 0xCF65AA1348CBF251uL, 0xD4EAAA1B197F23B5uL)),
                ((-1, -72, 0x883550299F9C250EuL, 0xE897B853FE2A5999uL), (+1, -10, 0xFDBCA3A786E6ADB2uL, 0xBC86F6EE4CF2A935uL)),
                ((+1, -64, 0x9A51CF68AF24356DuL, 0xF306D1AD66CD47C0uL), (+1, -11, 0xBB98BC3D0A3F9678uL, 0x3F3F3D4EC4A5116EuL)),
                ((+1, -2, 0xAEDA89D2EEA0499EuL, 0xC7BE0B7C9AC1BBC7uL), (+1, -12, 0x878CD45C5D116BDDuL, 0x5368328F2841A919uL)),
                ((-1, -3, 0xF00A504EDA2174E3uL, 0x6129C8971898297FuL), (+1, -14, 0xA46D49B609A5B5C2uL, 0xFA4E0ACD10DF4D46uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -28, 0x8027676B0E5F2977uL, 0x33D53F20B5029C94uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -21, 0x8027676B3373838FuL, 0xCBC35EE32BDFD78BuL), (-1, -1, 0xA155EC611834D785uL, 0xB5AEB54053BCF580uL)),
                ((+1, -16, 0xD59701B2F3F49C4EuL, 0xCF7F0BE43F532EA4uL), (-1, -6, 0x813B8F21CA3357EDuL, 0xD46E01A6B7E40F06uL)),
                ((+1, -11, 0xBDDB8FBBD10357DFuL, 0x12CEA9E4A00F563FuL), (-1, -7, 0x931C3F6A12A335C0uL, 0xDF952BE123D705B5uL)),
                ((+1, -7, 0xBDDB8FBC2F599439uL, 0x203DD84A2584E5D2uL), (-1, -8, 0xB5EA0F4CFB679BAEuL, 0xCA49D3A71B2F02D5uL)),
                ((+1, -4, 0xCA83CC84F3D7729EuL, 0x7FC960B5C48D2393uL), (-1, -9, 0xE80D1953D9632E6AuL, 0x502B12C1D0BA9675uL)),
                ((+1, -2, 0xB4036076BBD15EB5uL, 0x71D648B8F96E9586uL), (-1, -9, 0xC6FE9EF69F7F295BuL, 0xD58B4EF54F6D5E3FuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -22, 0x840F53351BBFCC7BuL, 0x05937BEB59DE3EA7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -16, 0x827757BDE9CFA328uL, 0x92135C5A65A05AACuL), (-1, 0, 0xB6308A86B44C3156uL, 0x1934A8245608D6DAuL)),
                ((+1, -12, 0xD5B99CD11046D7C9uL, 0x9C3DD28A02718D4DuL), (+1, -2, 0xF86809DD91D36BA0uL, 0x6CFD042C597DB4EBuL)),
                ((+1, -8, 0xB9050B46FEEACBDDuL, 0x312D1A80395F6924uL), (+1, -9, 0xD25815AC4EB39327uL, 0xA4E6C13440ABD0CCuL)),
                ((+1, -5, 0xB0C1949112537E81uL, 0x2801C79BB35D0413uL), (+1, -10, 0xB2BE079D462A5ACDuL, 0xE0A75AB7C8D0790EuL)),
                ((+1, -3, 0xAAE93AD25AC6B5B5uL, 0xDD7027C8485C2900uL), (+1, -11, 0x9DA65C785EB6B90EuL, 0xE8E379DA752B4EA6uL)),
                ((+1, -3, 0xD1D23E5A3673873BuL, 0x7EC63527E20A7C53uL), (+1, -12, 0x87205CF9B6CEAAA5uL, 0xEDA7FC3A81FB3C90uL)),
                ((-1, -2, 0x8F44FDF6E61A1FC3uL, 0x18BF82C72DBAA7EAuL), (+1, -14, 0xD9E633475BBB7C6CuL, 0x7824FE3C59A07B51uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeA16Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -102, 0x939772E33D28FD1FuL, 0x8A76FDEEFEC74A82uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -91, 0xA79A1DB04E360164uL, 0x9E32FBA58BD08D30uL), (-1, 0, 0xA5141E65C513D625uL, 0xE3512D7926FA2F23uL)),
                ((+1, -81, 0x9600583A25789970uL, 0x5A4302593C892F12uL), (+1, -2, 0xCD12C56356D608EDuL, 0xECEC25B1A1DDD3FEuL)),
                ((-1, -72, 0x8DCBDC5899E9ED95uL, 0xE1BE6B2A6477C6A4uL), (+1, -10, 0xF6941DFCAD9C636EuL, 0x76F4BCDE4F511927uL)),
                ((+1, -64, 0xA0A7C9F387BC6384uL, 0xCDA9D50B0E5668ADuL), (+1, -11, 0xB50BC971798AE0E7uL, 0x58B900A5A74B840CuL)),
                ((+1, -2, 0xC2CB5ABB112BFE2BuL, 0x4E31D8347D6D295BuL), (+1, -12, 0x81D88E5EF2CEA8F4uL, 0x484900D0D2E1AB09uL)),
                ((-1, -2, 0x84AE0CF67F153D62uL, 0x6DD6E383EFD0CD4CuL), (+1, -14, 0x9C36DC2311FE477CuL, 0xCD75F03A9A7BA105uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -28, 0x8EC0E40BD12E8AFAuL, 0x28BF27C081DB3824uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -21, 0x8EC0E40BF81A8E60uL, 0xC8300584511A7FAEuL), (-1, -1, 0xA0BA13E62640EA1FuL, 0xAD13F179BD66ADD8uL)),
                ((+1, -16, 0xEDEC26BEE9FD0D2DuL, 0x43A451F9F42BAC75uL), (-1, -7, 0xFEB13B337B7A149DuL, 0x9BBFE42A112312E9uL)),
                ((+1, -11, 0xD37C94383DC2F661uL, 0x64A3BCC3A9DCCAF4uL), (-1, -7, 0x900D560832367416uL, 0xEC2EC7ADE57B1B4CuL)),
                ((+1, -7, 0xD37C9438A0BE8D4FuL, 0xBD2E74ADCE00ABF6uL), (-1, -8, 0xB0E7ED289957265DuL, 0xC7F8D26038E24C06uL)),
                ((+1, -4, 0xE195F3701D9807B3uL, 0xBD2B4A0E139DEA1BuL), (-1, -9, 0xE026C4FFAD78014DuL, 0x7117A2CBCB68A7D1uL)),
                ((+1, -2, 0xC8854A2B599DEFB0uL, 0xCF37F07905A8620EuL), (-1, -9, 0xBE4398E2DBC773C8uL, 0xD635D5A453ED1FA8uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -22, 0x931661177CC6A0E6uL, 0xEA256F18D887D0FAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -16, 0x91540BEF9B9F036FuL, 0xC6390FC531399730uL), (-1, 0, 0xB4FA0A658FF0C7ECuL, 0xA931732771A050BDuL)),
                ((+1, -12, 0xEE1BF7DCF519FC50uL, 0xB1857480E4F9C37AuL), (+1, -2, 0xF53C75BF7035E0BEuL, 0x77EDF173FA19330AuL)),
                ((+1, -8, 0xCE2E0C4853CFAC1BuL, 0xC606D6DF8327E3C6uL), (+1, -9, 0xCBAEA213205CF0DFuL, 0x6403B72DB5493D98uL)),
                ((+1, -5, 0xC50EFD668EB37BCEuL, 0xBF9646E1B93CDE6CuL), (+1, -10, 0xABBFD3EBAFF1BE35uL, 0x68CCBFB7A1376BA9uL)),
                ((+1, -3, 0xBEBCAA4777D6D62AuL, 0xED7149FBA1EAABEAuL), (+1, -11, 0x9637D84857A7E70AuL, 0xA71BE4EB81EE8E74uL)),
                ((+1, -3, 0xEB4EBE489C22BF02uL, 0x798F0B48884B2679uL), (+1, -13, 0xFF403CEB91461288uL, 0x247C1344B3D2A316uL)),
                ((-1, -2, 0x9E24398D4A70765EuL, 0x7EC8604642AE358CuL), (+1, -14, 0xCB7D6796D59AD607uL, 0x5A62C78753AB24C4uL)),
            }),
        });
    }
}
