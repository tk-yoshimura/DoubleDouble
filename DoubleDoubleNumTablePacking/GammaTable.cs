using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class GammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(SterlingTable), SterlingTable },
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX5Table), PadeX5Table },
                { nameof(PadeX6Table), PadeX6Table },
                { nameof(PadeX7Table), PadeX7Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX9Table), PadeX9Table },
                { nameof(PadeX10Table), PadeX10Table },
                { nameof(PadeX11Table), PadeX11Table },
                { nameof(PadeX12Table), PadeX12Table },
                { nameof(PadeX13Table), PadeX13Table },
                { nameof(PadeX14Table), PadeX14Table },
                { nameof(PadeX15Table), PadeX15Table },
                { nameof(PadeX16Table), PadeX16Table },
                { nameof(PadeX17Table), PadeX17Table },
                { nameof(PadeX18Table), PadeX18Table },
                { nameof(PadeX19Table), PadeX19Table },
                { nameof(PadeX20Table), PadeX20Table },
                { nameof(PadeX21Table), PadeX21Table },
                { nameof(PadeX22Table), PadeX22Table },
                { nameof(PadeX23Table), PadeX23Table },
                { nameof(PadeX24Table), PadeX24Table },
                { nameof(PadeX25Table), PadeX25Table },
                { nameof(PadeX26Table), PadeX26Table },
                { nameof(PadeX27Table), PadeX27Table },
                { nameof(PadeX28Table), PadeX28Table },
                { nameof(PadeX29Table), PadeX29Table },
                { nameof(PadeX30Table), PadeX30Table },
                { nameof(PadeX31Table), PadeX31Table },
                { nameof(PadeX32Table), PadeX32Table },
                { nameof(PadeX33Table), PadeX33Table },
                { nameof(PadeX34Table), PadeX34Table },
                { nameof(PadeX35Table), PadeX35Table },
                { nameof(PadeX36Table), PadeX36Table },
                { nameof(PadeX36to44Table), PadeX36to44Table},
                { nameof(PadeX44to52Table), PadeX44to52Table},
                { nameof(PadeX52to60Table), PadeX52to60Table},
                { nameof(PadeX60to68Table), PadeX60to68Table},
                { nameof(PadeX68to76Table), PadeX68to76Table},
                { nameof(PadeX76to84Table), PadeX76to84Table},
                { nameof(PadeX84to92Table), PadeX84to92Table},
                { nameof(PadeX92to100Table), PadeX92to100Table},
                { nameof(PadeX100to108Table), PadeX100to108Table},
                { nameof(PadeX108to116Table), PadeX108to116Table},
                { nameof(PadeX116to124Table), PadeX116to124Table},
                { nameof(PadeX124to132Table), PadeX124to132Table},
                { nameof(PadeX132to140Table), PadeX132to140Table},
                { nameof(PadeX140to148Table), PadeX140to148Table},
                { nameof(PadeX148to156Table), PadeX148to156Table},
                { nameof(PadeX156to164Table), PadeX156to164Table},
                { nameof(PadeX164to172Table), PadeX164to172Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode s, Hexcode r)> SterlingTable
            = new(new (Hexcode s, Hexcode r)[]{
                ((+1, -4, 0xAAAAAAAAAAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL), (+1, -5, 0x8888888888888888uL, 0x8888888888888888uL)),
                ((+1, -11, 0xD00D00D00D00D00DuL, 0x00D00D00D00D00D0uL), (+1, -1, 0xC000000000000000uL, 0x0000000000000000uL)),
                ((+1, -11, 0xDCA8F158C7F91AB8uL, 0x7539C0372A3C5631uL), (+1, 1, 0x91CB1CB1CB1CB1CBuL, 0x1CB1CB1CB1CB1CB1uL)),
                ((+1, -8, 0xD20D20D20D20D20DuL, 0x20D20D20D20D20D2uL), (+1, 2, 0x9384511DEAB78451uL, 0x1DEAB784511DEAB7uL)),
                ((+1, -3, 0xB7F4B1C0F033FFD0uL, 0xC3B7F4B1C0F033FFuL), (+1, 2, 0xF808968F383D5119uL, 0x244D3527089A63B2uL)),
                ((+1, 3, 0xD672219167002D3AuL, 0x7A9C886459C00B4EuL), (+1, 3, 0xBB3DD3DA9AC17B58uL, 0xADC81A9890CA341EuL)),
                ((+1, 11, 0x8911A740DA740DA7uL, 0x40DA740DA740DA74uL), (+1, 4, 0x83B7B085A5F7689EuL, 0xCD9552B83C7309DCuL)),
                ((+1, 19, 0xA8D1044D3708D1C2uL, 0x19EE4FDC4469CCAEuL), (+1, 4, 0xB04C820CF37B0F22uL, 0x50D78B1D73F478F5uL)),
                ((+1, 28, 0xB694D07B219DBCC4uL, 0x8676F31219DBCC48uL), (+1, 4, 0xE35D5F580E37ECB4uL, 0xE1B9AA804FE50FA7uL)),
                ((+1, 38, 0xA1BBCDE4EA012735uL, 0x0B88127350B88127uL), (+1, 5, 0x8E75243CF95640BAuL, 0xB1AC741F13538518uL)),
                ((+1, 48, 0xDE466B7C78FBAAE3uL, 0xC3A9E6DAEAE46D98uL), (+1, 5, 0xAE799EBA1DCEB485uL, 0xFC9877597F7685B3uL)),
                ((+1, 59, 0xE2E1337F5AF0BED9uL, 0x0B6B0A352D4F335CuL), (+1, 5, 0xD1BC1F238533A53CuL, 0x065E1F08A600A21BuL))
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xF7BE827D214A59FFuL, 0x253A787D2C0DF3D7uL), (+1, 0, 0xC5C175304F7D90D1uL, 0xFB7C5BFF16B05F97uL)),
                ((+1, -1, 0x823CCA21D4494010uL, 0x197F82BE2A6A0BC3uL), (+1, -2, 0xD2AB42C418E84EE7uL, 0x2FA2D0E4CC39AADBuL)),
                ((+1, -3, 0xBD06D4B46DB68FAAuL, 0x5A530BEBBA9AE0CBuL), (-1, -3, 0xCB3E5655FC81313FuL, 0x101C38EC0C6742C6uL)),
                ((+1, -5, 0xD1B4E87FCC561FAFuL, 0x708198ACE68468D6uL), (-1, -5, 0xCCED6735745CEF82uL, 0x0D6E047387174762uL)),
                ((+1, -7, 0xBAD2A2460EE4FCF5uL, 0xC6FF088D0C87730FuL), (+1, -6, 0x8F3A939FDC3D8527uL, 0xBC026B22B10412EEuL)),
                ((+1, -9, 0x89B1381D2A2B1BE2uL, 0x74130FD27D1DEC2FuL), (+1, -10, 0xD3C78B54B55135E0uL, 0xAF80534B8583F54EuL)),
                ((+1, -12, 0xAA8CB4917AC14FD6uL, 0xC5C904E0C8C8861BuL), (-1, -11, 0xEE581953A64506C7uL, 0xD9D0EAF56209C335uL)),
                ((+1, -15, 0xB2F7B18DD497DEDBuL, 0x0AB4FC76521F41B8uL), (+1, -15, 0x9808DECDAC86EA97uL, 0xF30773FE15770A8AuL)),
                ((+1, -18, 0x9EF60CE274511D3BuL, 0x2567FCDD1014F0BBuL), (+1, -16, 0xA6BEB19C9E05C00FuL, 0x6934679FC60FAE13uL)),
                ((+1, -22, 0xED4061BC3A046F30uL, 0xD3B43EAB4770B3D4uL), (-1, -19, 0xBB87F131549ECFE9uL, 0xA8CE8F4579E360ACuL)),
                ((+1, -25, 0x9192D851D23D4EB1uL, 0xA02104F57BE10EEEuL), (-1, -26, 0x9A863DE26F9E20ACuL, 0x81D507052A75ED10uL)),
                ((+1, -29, 0x8DA7319ED8537A1FuL, 0x96E0B356A79AA5C7uL), (+1, -25, 0x8EFBF036AB734827uL, 0xB8BD8B42B46993B0uL)),
                ((+1, -34, 0xC79A6A110796BB9FuL, 0x42C7DF4D4B4A31B0uL), (-1, -29, 0xCAD8579BDBEDF543uL, 0x52CA65D80FEDC326uL)),
                ((+1, -39, 0xA94F151B4C2C820DuL, 0xF47C064B8918A5DFuL), (+1, -34, 0xC408D937BF8BB468uL, 0xE51B363FECD4A28CuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xE8B221B670F0E1D2uL, 0x2A4CE6637E906CF0uL), (+1, -2, 0xF8ED1333DD4352EDuL, 0xF8164BC8FFC6708DuL)),
                ((+1, -2, 0xE6CAED60B2C1F57AuL, 0xAC549A5D79384419uL), (-1, -3, 0xAA9F8B439B1571E8uL, 0xE3DB387BF8343E4DuL)),
                ((+1, -3, 0x9E018A85F7DE8BCFuL, 0x3F99523BFF3A01C9uL), (-1, -5, 0xE9B5C66452D14498uL, 0x24A49A6D0C78EA52uL)),
                ((+1, -5, 0xA54C673E731E8C66uL, 0x212CC1FDBEFDB293uL), (+1, -6, 0x9D37961B456195CCuL, 0xC618C9E260F91915uL)),
                ((+1, -7, 0x8AAD22A6966B1A76uL, 0x72BFEFA5FC1E0125uL), (+1, -10, 0xD309C1BD31F5BFD7uL, 0x07F9D863EE255DFDuL)),
                ((+1, -10, 0xC028E7579FEF9C4BuL, 0x37FE315F07CE672CuL), (-1, -10, 0x9255A89765FA721CuL, 0x2B74425F5F4FB753uL)),
                ((+1, -13, 0xDF3685AEB42F58AAuL, 0x17427A8800A2765CuL), (+1, -14, 0xA37A96F18DB4CAB3uL, 0x98387F0D630BB509uL)),
                ((+1, -16, 0xDB0A15229DAC0227uL, 0x52A917208074F05CuL), (+1, -16, 0xC057BFA2E129341CuL, 0xBCC3EDB172A83C74uL)),
                ((+1, -19, 0xB54B6088990E952AuL, 0x8289A928BF095C1EuL), (-1, -18, 0x9C5CCA32EE353AB0uL, 0x8694AF17C803DF88uL)),
                ((+1, -23, 0xFB15125CBB894A6AuL, 0x1E47FBCF6304EB28uL), (+1, -23, 0xA7BBE229FEF27841uL, 0x7B3EFC582F749E68uL)),
                ((+1, -26, 0x8E368FE40D60E4B5uL, 0xD5E8E4A3F37D4B0CuL), (+1, -25, 0xC801AA16B728FDB9uL, 0x67DC55F2900A4558uL)),
                ((+1, -31, 0xFDCDAC696E0CDD09uL, 0xD7E866DE135FB1C1uL), (-1, -28, 0xF00A5010AB173F96uL, 0xFB9B988C6366C50BuL)),
                ((+1, -35, 0xA29EB8BD5600848AuL, 0x461FB7036FAA0886uL), (+1, -32, 0xE59E7BCF4F6E45D1uL, 0xEF5D8EFE14C86B64uL)),
                ((+1, -41, 0xF720E3C8812332F9uL, 0x4B174D75B7D4209BuL), (-1, -37, 0xAEF64C28AC938920uL, 0x51FAB2BDF51089EAuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xE617FEDEC027AB6EuL, 0x1EB041FA07B91400uL), (-1, -6, 0xC47327B844F19DA1uL, 0xF22FD09EDE841516uL)),
                ((+1, -1, 0xE2421A50627E1224uL, 0xE8CC78427C7A7835uL), (-1, -3, 0xA30377D562A7C7E4uL, 0x65E164D199C43885uL)),
                ((+1, -2, 0x99B2536E445D2105uL, 0xD30BD39C3D1F23A2uL), (+1, -6, 0xC83DC39E99212ACDuL, 0x66C82AACC5948ABFuL)),
                ((+1, -4, 0x9FAB0B9BBECA6127uL, 0x2945A486E894F6A9uL), (+1, -8, 0xF5A52D145464BCC0uL, 0x166AC19E596AE79EuL)),
                ((+1, -6, 0x8515DE1D86053474uL, 0x55D0DA9A63A75A9EuL), (-1, -9, 0x9AABE25B0C605AFAuL, 0x6D61A33E651705DBuL)),
                ((+1, -9, 0xB751FB19DCD94880uL, 0x41D19AC50E3BB16BuL), (+1, -15, 0xE02EFBA5FD5BE9D7uL, 0x3790C6341EA4D932uL)),
                ((+1, -12, 0xD3C73133CC6F1998uL, 0xAE4C745D542D2DC8uL), (+1, -14, 0x85B3C0D125C7BD0FuL, 0xDB763C411B7138A1uL)),
                ((+1, -15, 0xCECB4F26656E48FEuL, 0xB4EC867D33517582uL), (-1, -17, 0xAA6F7E3556D3AA4DuL, 0x1A51A052992E23C4uL)),
                ((+1, -18, 0xAA6715C5ACE79C8AuL, 0x0053575D3E0B16D5uL), (+1, -23, 0xC9C84C95C4A42EF9uL, 0x3C4337FD5B10C565uL)),
                ((+1, -22, 0xEB219CD6742A8A71uL, 0xAB5BB13EA6DC2522uL), (+1, -23, 0x8292A83A3A745AD7uL, 0x1FD652DBBFDF7636uL)),
                ((+1, -25, 0x84C949FCCA030C29uL, 0xF2616D7768B31E50uL), (-1, -26, 0x93DB73C99E10231BuL, 0x044BFD44EF947E0FuL)),
                ((+1, -30, 0xECA0A5402DA6B6DDuL, 0xEA475E0D2D12188BuL), (+1, -30, 0x96247FCC3B8E30DAuL, 0x5E59415274E16661uL)),
                ((+1, -34, 0x979527403BD494EAuL, 0x575A7B7524B25FDAuL), (-1, -35, 0x91F7378AE43FAF25uL, 0xD9E88073B6D60AF3uL)),
                ((+1, -40, 0xE7C35BECE2528733uL, 0xBB9552AD230F11DBuL), (+1, -42, 0xB97A4E52938778BEuL, 0xF8A7A9352BA13E19uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xC000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xB4ED1C0662D44C4BuL, 0x6ACCB95E5C594182uL), (-1, -2, 0xA0A99027FD12FA97uL, 0xEA6192AD07170FF7uL)),
                ((+1, 1, 0xB538E464AA614F41uL, 0x33AFAB75BAA757AAuL), (-1, -4, 0x84928779675C6E8EuL, 0x16FA3D5C44437229uL)),
                ((+1, -1, 0xF807D526E7F6F812uL, 0xDCA83CEC8EF1C9F9uL), (+1, -5, 0xA259DB5CA996CF28uL, 0x2002B181E31935F0uL)),
                ((+1, -2, 0x8074ED66F54368B4uL, 0xF017C12A54CA8E22uL), (-1, -9, 0xD0ACA4ED0FDF8C32uL, 0xF70EA6B9B1006A99uL)),
                ((+1, -5, 0xD3E5AAC81B405109uL, 0x6D58B573D694315EuL), (-1, -10, 0xA3A2B75AC130C085uL, 0xBD9C9EC03BF43997uL)),
                ((+1, -7, 0x8F4C5C402F8DEED3uL, 0xF70B198D1FF778FAuL), (+1, -12, 0x9E74F55CE2F6449CuL, 0x40607BC0DF6C3B59uL)),
                ((+1, -10, 0xA16BB0E9C7F6155DuL, 0xF90AD8378A027994uL), (-1, -17, 0xA66272713A94F5C4uL, 0x6E6D6C11333DDD83uL)),
                ((+1, -13, 0x9881ACFC9C5BB598uL, 0xFEFFB54E257D5637uL), (-1, -18, 0xAC990F4284C48F53uL, 0xF05A61F79BA43677uL)),
                ((+1, -17, 0xF14F5F45829071B6uL, 0xD175BCFEC190BA4EuL), (+1, -21, 0xDDE2E065B3FB511FuL, 0x73510040F1B5E936uL)),
                ((+1, -20, 0x9E4DB6A64494CA2BuL, 0xBFCDF4C060E795B3uL), (-1, -26, 0xFF82D2C3868A9595uL, 0xB45170D2A19571F2uL)),
                ((+1, -24, 0xA849DD5A79ECCDF8uL, 0x547B49A2CD7861EFuL), (-1, -28, 0xB638148220B293A4uL, 0x53A94DDB0047A44AuL)),
                ((+1, -28, 0x8AE9EC296E686220uL, 0x93470307FD774E91uL), (+1, -31, 0xD677FD593D7FE4A0uL, 0xA349C3138DD5F5D3uL)),
                ((+1, -33, 0xA236F9CF71332B06uL, 0xB580CCC654F9F21CuL), (-1, -35, 0xC22E52AAA2DD2D7FuL, 0x89EE663EBCBF2C77uL)),
                ((+1, -39, 0xD639CDA3601CEB38uL, 0x2D2A66F29AF37FDBuL), (+1, -40, 0x8C6E280D648C7E49uL, 0xFE2C807D3E1D7B21uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xC000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 4, 0xB185FC4A4282EA71uL, 0xB7BF32D2F9C31C05uL), (-1, -1, 0x94DE47B97EF5FFC3uL, 0x8E982765B1A90F4CuL)),
                ((+1, 3, 0xAC7A4E567E55BE79uL, 0xCDB06992DF61915CuL), (+1, -4, 0xA41EBC8B177E97D2uL, 0x93C13C7E36C1DDCAuL)),
                ((+1, 1, 0xE3612D949A1D1A63uL, 0x57D3067775C28B1AuL), (+1, -6, 0xBED5728A670321B0uL, 0xD86C531F77B15940uL)),
                ((+1, -1, 0xE1156BA4A40A4441uL, 0xED1EB114D011C7C6uL), (-1, -7, 0x9CE252BEDDB66A38uL, 0x6EA0397C495750F6uL)),
                ((+1, -3, 0xAFEAC206AB941D78uL, 0xD391B3F5D75436F5uL), (+1, -11, 0xF826BF57FDB3C21FuL, 0x4594F3D4A56BB30CuL)),
                ((+1, -6, 0xDF1C133C08E87DA4uL, 0xAC20ED865CCE65ECuL), (+1, -13, 0x8A91BC530F1E326AuL, 0x41D52C01D0F92260uL)),
                ((+1, -9, 0xE89FAA1A4FD64E5AuL, 0x7433D9015E18FE2BuL), (-1, -15, 0xBD4AAA628F01CA2BuL, 0xE0D949828F7DE353uL)),
                ((+1, -12, 0xC7E9B0C6D9C3A593uL, 0x7655714776632831uL), (+1, -18, 0x8E3F36572BD94D3DuL, 0x89377AD3B22450B0uL)),
                ((+1, -15, 0x8C7C968DA48BCF2BuL, 0xC0B1D63F63D218D0uL), (+1, -24, 0xE63C4FE5E73D1AF1uL, 0xB64C50DD91A8D641uL)),
                ((+1, -19, 0x9E02251FA1DF027DuL, 0xE0A56D4525F13812uL), (-1, -24, 0x8DE13EA321357C20uL, 0xA0E478C6DCFEF16EuL)),
                ((+1, -23, 0x881F9CDAD99BE980uL, 0xCC2655DF1982EE17uL), (+1, -28, 0xF502AADC5654F12BuL, 0xAFBA2E35796339F0uL)),
                ((+1, -28, 0xA3985121A4DA8DDAuL, 0xB9EAAD29AB87A26CuL), (-1, -32, 0xCC4968F75ACF8AC4uL, 0x6E8C7B4230F03E5EuL)),
                ((+1, -34, 0xD78DD8EE558E8B3AuL, 0x5A9B0B54FCAA7B13uL), (+1, -37, 0x9086E7BA19CC7FC3uL, 0x9539A5FCAE659DCFuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 6, 0xF000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 6, 0xC17B551303A0E44CuL, 0x310D9393D3A08638uL), (-1, -1, 0xE662B4D506F8EF81uL, 0x60556758C79B946DuL)),
                ((+1, 5, 0xA64C49A370E0EB86uL, 0x0298FCAA7AD50629uL), (+1, -2, 0xABEBD6B182B13B1EuL, 0x6A74CBD6C70BCBE4uL)),
                ((+1, 3, 0xC17228EB333E13C2uL, 0xF2D7D02958FB71CEuL), (-1, -5, 0xEC34FCC3E8EAB12CuL, 0x00719C961FF0DF3BuL)),
                ((+1, 1, 0xA81483DA68C174A3uL, 0xB2328D2740C6426DuL), (+1, -16, 0xE69B6BCC94DA4EEAuL, 0x0E9F87CFCE65307DuL)),
                ((+1, -2, 0xE41DC71EB9772C1DuL, 0xBE9388CC2C016F4DuL), (+1, -9, 0x8CE94D7F9FB257C0uL, 0xFBE82EB5201F9E0DuL)),
                ((+1, -5, 0xF76D021164733DAAuL, 0xF046DEE00C68ADF9uL), (-1, -12, 0xF5C377970835B47FuL, 0x5C584DB40BB7F7AFuL)),
                ((+1, -8, 0xD795D4B8300BBEBAuL, 0x03F9CD4F9520FAA9uL), (+1, -15, 0xB13C7AD0E96B3D2AuL, 0xEBF683BE2227A59CuL)),
                ((+1, -11, 0x95B0A56FBD23B70BuL, 0x3D09F24F2304C36AuL), (+1, -20, 0x8C48117B919839B7uL, 0x159131DE7C4EB45FuL)),
                ((+1, -15, 0xA0AD48CD4218ACFFuL, 0x10087688EC1BF78CuL), (-1, -21, 0xD17F61BD441C3266uL, 0x755E06BA596EFAA8uL)),
                ((+1, -20, 0xF98D3750B4863D6BuL, 0xA1AD393E8E83B5CFuL), (+1, -24, 0xE0EF539076690ECEuL, 0xF38E445C0C214C75uL)),
                ((+1, -25, 0xE627E18051C50F47uL, 0x58D58599A0E694F9uL), (-1, -27, 0x83FFB365D76F87E4uL, 0xA16256A13932C74EuL)),
                ((+1, -33, 0xCC23ECC1A1DCA7F0uL, 0x29CC8FE7FCA428E7uL), (+1, -32, 0xAFF90DA8259F290DuL, 0xD1F1D90E8CCABF76uL)),
                ((-1, -35, 0xC049011180952156uL, 0x015C0F7AF6BBEBC4uL), (-1, -38, 0xD4A13CA4B4B5D531uL, 0x00B2376F70CFFE55uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX7Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 9, 0xB400000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 9, 0xAEB5C5976849E410uL, 0xD407F48AD4B0967EuL), (-1, -1, 0xE6F4CEBCA40843A3uL, 0xF552E1DBAE0D14ABuL)),
                ((+1, 8, 0xAD296B361F30EA5BuL, 0x6031C96B1221ED11uL), (+1, -2, 0xAE27C64FBDAE31B7uL, 0x1760B963AD6B6942uL)),
                ((+1, 6, 0xE599581C66F6949BuL, 0xD4FDADBF58E2FC3BuL), (-1, -5, 0xF914AC0AE1DFB722uL, 0x200884BA7341A2E9uL)),
                ((+1, 4, 0xE2078DAF6B8808E0uL, 0x7FE3B7D0FA7A58C9uL), (+1, -10, 0xA2DA6E2FA6B6B7DEuL, 0x22B8C5085E0B941FuL)),
                ((+1, 2, 0xAE165240330E1EDCuL, 0xBBE52AEC8D54DD96uL), (+1, -10, 0xF51186D1CFFAE9CAuL, 0x07EBB3BEB9C5A4CDuL)),
                ((+1, -1, 0xD7BE39AE15E5E66EuL, 0xE9977DD4C0433A88uL), (-1, -12, 0xE2980B197075852BuL, 0x057323501475BEE2uL)),
                ((+1, -4, 0xDA079997F856198BuL, 0xD6270D58579EB40DuL), (+1, -15, 0xACBA463D511628A7uL, 0x11E2DCC03E08D9ADuL)),
                ((+1, -7, 0xB4195E43A8320613uL, 0xAF9C595D44225F4EuL), (+1, -22, 0xFCEE2D8E6BE60B3EuL, 0x59EE5BF2F4DAA617uL)),
                ((+1, -11, 0xF1236770E415CCECuL, 0xAB14FADF538F4F83uL), (-1, -21, 0xAEDFFDF56CCA5E4BuL, 0xA9D071BEF98423DDuL)),
                ((+1, -15, 0xFFC262FE3729C048uL, 0xF9DF19AA39566A46uL), (+1, -24, 0xC139542D85CAB84FuL, 0x0BCD4C5820C401DDuL)),
                ((+1, -19, 0xCD43EE4AB9FE9142uL, 0xCF24EA0201F0A6DAuL), (-1, -28, 0xE45E1EEE0BCF7716uL, 0x962D61EDD0126856uL)),
                ((+1, -24, 0xE2431BAAA0038F9DuL, 0xE6344F938E3A9827uL), (+1, -32, 0x9855CDDE624901EAuL, 0xFC323CAA64413EC0uL)),
                ((+1, -29, 0x85355D2EA437A680uL, 0x3FC5A7266AF246DDuL), (-1, -38, 0xB7B22D845D7FF162uL, 0x5AE1F0F1454A6BA1uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 12, 0x9D80000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 12, 0x85DAEF0613B9473EuL, 0xB47B469EA438F519uL), (-1, 0, 0x9537DB7A47E17DE8uL, 0xC02F47C5124181DEuL)),
                ((+1, 10, 0xEC6C74C133A570C1uL, 0x3FB660790C2AFADAuL), (+1, -1, 0xA087B02781914D06uL, 0x66B36FB54F444F9FuL)),
                ((+1, 9, 0x8C20A0D0544A83E3uL, 0x58BDC0A9CCA6F72EuL), (-1, -3, 0xCFF3A914033D49C6uL, 0x5C099B89E4A045F8uL)),
                ((+1, 6, 0xF6A2AEE6E5FD0F29uL, 0x0FEF5299B15C7A51uL), (+1, -5, 0xAF87DD94A7458268uL, 0x0E092EAADEF7D8C0uL)),
                ((+1, 4, 0xA932E154F7C9BC49uL, 0xC3CABE333C388160uL), (-1, -8, 0xBC93674F158BCF60uL, 0x07EF33C5221033C6uL)),
                ((+1, 1, 0xB9A241B76D4A2822uL, 0xB7A62CC69B621A87uL), (+1, -12, 0xBE1D2BEDDC0B59ADuL, 0x17BC59D61AA639F2uL)),
                ((+1, -2, 0xA4891B3185A7CC79uL, 0x61B2475CA6DC8333uL), (+1, -15, 0x84AB5EF7AA1A050EuL, 0x46E7E0E4388E1A5BuL)),
                ((+1, -6, 0xEB528F33791170D1uL, 0x51A4B1C4600606C9uL), (-1, -17, 0xBEBDA8C395B97796uL, 0xB5C7FD90FCD56AD9uL)),
                ((+1, -9, 0x85D9C4CB2EC6E49AuL, 0xBFD705AD046461EDuL), (+1, -20, 0xCFF02036580C0DDFuL, 0x18DF8DA8D96757B1uL)),
                ((+1, -14, 0xEACF6154949184C0uL, 0xDAC7FDDA633D67ECuL), (-1, -23, 0x8D6A07B227C28011uL, 0x971FFDF4166F19CFuL)),
                ((+1, -18, 0x9535BB2AD251FCE7uL, 0x724BC605AE9C4710uL), (+1, -28, 0xFBFABAF4C242C621uL, 0x4A6F162DDDD355EFuL)),
                ((+1, -24, 0xF1B4095FBE66A458uL, 0xCD68BA2156EBB994uL), (-1, -32, 0x894B74B1E2D3608BuL, 0xADBE175A31E717A5uL)),
                ((+1, -30, 0xABA469F889BF0194uL, 0xC3136060C0E38829uL), (+1, -38, 0x8D498C4D81FEC273uL, 0x51DBE1211E6C9669uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX9Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 15, 0x9D80000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 15, 0x995CFDC7370BB888uL, 0x9074069FD26E11C1uL), (-1, 0, 0x955D31D2C0B60F25uL, 0xD1463D33739C7045uL)),
                ((+1, 14, 0x96C101975919359FuL, 0x492E0D5F13A8BC32uL), (+1, -1, 0xA067C775FF923DAAuL, 0xBA2762CB2110B7A2uL)),
                ((+1, 12, 0xC482E98DCB9B8E58uL, 0x6E24F234412C52A4uL), (-1, -3, 0xCE5AD4A53AC6C992uL, 0x16020A0B158661D1uL)),
                ((+1, 10, 0xBCC0B1863E009CBEuL, 0xEC388DF39BC3A5A2uL), (+1, -5, 0xAAFCCE3B941A992BuL, 0x2B24F1E1D40D0AC6uL)),
                ((+1, 8, 0x8CD22E4D769532E3uL, 0x5914014782556FD7uL), (-1, -8, 0xAE117E83FC692D42uL, 0x4F55A03DA2C18F4DuL)),
                ((+1, 5, 0xA7D5F9FCB532DD5EuL, 0x97D32C870BD733F3uL), (+1, -12, 0x8024D45AD87ED3D9uL, 0xDF8B02A36DEABE02uL)),
                ((+1, 2, 0xA1E27772CC498354uL, 0x79BB11BFEA54DBF3uL), (+1, -15, 0xE39783DAE26F6661uL, 0xAA81B0B7EE285733uL)),
                ((+1, -2, 0xFD25CBF03D95F422uL, 0x3FE24CDB70CDB414uL), (-1, -17, 0xF4747DD1B03A0233uL, 0xCDC3E188008A38B5uL)),
                ((+1, -5, 0x9EE4689F23577D37uL, 0xF8A764EE242F6E43uL), (+1, -20, 0xFD1EC5B4C70F91A9uL, 0x31B75F5DA129BAE4uL)),
                ((+1, -9, 0x9C3CFB0D5CF95640uL, 0x1BC777CFC666F516uL), (-1, -23, 0xA9390835CCC527E9uL, 0xCEF3EC80FFF47E2DuL)),
                ((+1, -14, 0xE52D0EF0B043FCE7uL, 0x8E350A8A967BF180uL), (+1, -27, 0x95F1342D60E95669uL, 0xD53A1652DAE1279DuL)),
                ((+1, -19, 0xE28473E252691213uL, 0xA2D8110442F8540BuL), (-1, -32, 0xA363035F7BC8189DuL, 0xA7C7FB04D060CAB6uL)),
                ((+1, -25, 0xE7394BDE72D35446uL, 0x22CEA0F07B58C7C6uL), (+1, -38, 0xA8A35C77DCEEB50BuL, 0xF9DCBF13D8822788uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX10Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 18, 0xB130000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 18, 0x969D320C539BD7C7uL, 0xFF112C14AE821357uL), (-1, 0, 0xB36BC3E4D784028EuL, 0x36BAE4B4650E20B8uL)),
                ((+1, 17, 0x8285477E0557CB67uL, 0x54BE85F482D63A4FuL), (+1, -1, 0xEFD70700BA119746uL, 0x4B8A9735EDFEEBADuL)),
                ((+1, 15, 0x95FDBBFA3B239B6EuL, 0xE83231317E8B5E5AuL), (-1, -2, 0xCAB0C5507F01BFD2uL, 0x65E9DD8A7E759574uL)),
                ((+1, 12, 0xFD025FA8317CF3DFuL, 0x6304FF8045949FA4uL), (+1, -4, 0xF202E76FB7C44623uL, 0x62CD6CEC27D53CFCuL)),
                ((+1, 10, 0xA4730737DC8267F4uL, 0x13D183F9969051FCuL), (-1, -6, 0xD7E8A9A37B5A3C9CuL, 0xE0C3500DA6A2C4FCuL)),
                ((+1, 7, 0xA8C05C7102154425uL, 0x5957DB10DC3C3C6DuL), (+1, -8, 0x9456170CC807C28BuL, 0x4F736DA525CCABDBuL)),
                ((+1, 4, 0x89C5F6D3D07FF676uL, 0xC814CEEED072BF21uL), (-1, -11, 0x9F3CE24B432905E1uL, 0xDF56DA805872FA9EuL)),
                ((+1, 0, 0xB1F2CFBA2A2BB88AuL, 0xC07AA8063B785BA9uL), (+1, -14, 0x85D6BF3E34BEBACEuL, 0xC5DB780E1DF0CCACuL)),
                ((+1, -4, 0xB1D7604B4C27530FuL, 0xB98F814F5EE13D23uL), (-1, -18, 0xAE65E280B0C37C4EuL, 0x51566EA33176094FuL)),
                ((+1, -8, 0x83345DB63397CD1DuL, 0x4EC617F530476522uL), (+1, -22, 0xABAFBBCDA9B4030CuL, 0xE74CBD8A3520C680uL)),
                ((+1, -13, 0x814FB0DEAA5AD439uL, 0xE6317FBE0E6DC34DuL), (-1, -27, 0xF294942526C4B8DEuL, 0x1487FCA1F0E59974uL)),
                ((+1, -19, 0x83044561B568912CuL, 0x0FC1DDE992BC5044uL), (+1, -32, 0xDD3823F777CFDB0AuL, 0x4E4CC3D2FE64E224uL)),
                ((+1, -32, 0xA1196A7D7C0F1798uL, 0x65641FF7AAB49B21uL), (-1, -38, 0xC574EB6BEA539256uL, 0xBF853E1D5344E23FuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX11Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 21, 0xDD7C000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 21, 0xD266D7263C9D830DuL, 0x487EE4898C1275E7uL), (-1, 0, 0xB36DE07C48909F33uL, 0x4292FC94A415B338uL)),
                ((+1, 20, 0xC8C685651156DDCEuL, 0x948156B226ACCFACuL), (+1, -1, 0xEFDCB249D2190511uL, 0x0EC1F013EDD291C3uL)),
                ((+1, 18, 0xFCB0E1AB3B394805uL, 0xCEB0EB8ECB148450uL), (-1, -2, 0xCAB7FCEFAFD03F63uL, 0x8D424AC7860B8D86uL)),
                ((+1, 16, 0xE90C7243F566ED49uL, 0x64CD3559E2F5C839uL), (+1, -4, 0xF20E71D0D4539CBFuL, 0x9A41A74B0CB93FC4uL)),
                ((+1, 14, 0xA5F507EE0FCF19BAuL, 0x8F0B0C95ED0F2978uL), (-1, -6, 0xD7F5974927FC40B8uL, 0xBE5F1CBBF1427EFDuL)),
                ((+1, 11, 0xBB94597EFE524515uL, 0x74A8A81BF37FF058uL), (+1, -8, 0x9460CC746AB44E36uL, 0x64302B8DE31411A4uL)),
                ((+1, 8, 0xAA58A04F8320F7DEuL, 0xF9B72D85F013F319uL), (-1, -11, 0x9F4A5C4AD391CAC0uL, 0xB8B33EA68847DA1FuL)),
                ((+1, 4, 0xF8B98AB8DB9FF219uL, 0xB70F1C0F5FCF7491uL), (+1, -14, 0x85E3C1D011F7722CuL, 0xE2B09EC5B5B41CB5uL)),
                ((+1, 1, 0x9057A2D912A39B32uL, 0xD8E3764FF16072F1uL), (-1, -18, 0xAE790E3700EC4E52uL, 0xFCA8D6FA572C1C6FuL)),
                ((+1, -3, 0x81AA3117A5FE6263uL, 0x40BABC4C006FCCB5uL), (+1, -22, 0xABC4D0EF3C515F84uL, 0x5D54A43A480FB38CuL)),
                ((+1, -8, 0xAB1E5B4641AD96BFuL, 0xD5CBAA49A8D96E6DuL), (-1, -27, 0xF2B5876026BC40F6uL, 0x4192D9525BCDD489uL)),
                ((+1, -13, 0x951407795710610AuL, 0x69C847189ED1AED1uL), (+1, -32, 0xDD591C8AA234DE5DuL, 0x8CC0DB16EBF2A37DuL)),
                ((+1, -19, 0x81E2BEF21B6F8D0AuL, 0xB7BE9D3C077EF094uL), (-1, -38, 0xC594FEA8257172E0uL, 0x247137E10D8B27D9uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 25, 0x9845400000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 25, 0x9AEED2249E2B2B04uL, 0x39402D62111FD1ADuL), (-1, 0, 0xB66C3400E7187FAEuL, 0x2CC19C2B8271F8A8uL)),
                ((+1, 24, 0x9CA9471CF0059BC4uL, 0xC44C02FB2B78691BuL), (+1, -1, 0xF80970C2963C0B94uL, 0x52F80FC3569E5D46uL)),
                ((+1, 22, 0xCF8293BC2E227DE8uL, 0x5BAEE94CC1974365uL), (-1, -2, 0xD54F5DFFA76A74F3uL, 0xC71DF92D991D35ECuL)),
                ((+1, 20, 0xC868A85F7EBF2C65uL, 0xED41733F46971B3EuL), (+1, -3, 0x81A6621F545E200BuL, 0x892C388D5CB967EAuL)),
                ((+1, 18, 0x94DEBCCF6E543002uL, 0x13C2AE9DB03F3FCEuL), (-1, -6, 0xEBA3241F85A26F82uL, 0x33B2737AB8924D22uL)),
                ((+1, 15, 0xAEFB1D6DA96E6386uL, 0x5E9A9AE26B8111CCuL), (+1, -8, 0xA4FDB0228C0DA41CuL, 0x554BDF0C0C5E306CuL)),
                ((+1, 12, 0xA4D3FBC1F4AD2671uL, 0x6BAA77C79176257FuL), (-1, -11, 0xB49C96BC79A84691uL, 0xF9F74B639A55BF4CuL)),
                ((+1, 8, 0xF91D6FAA17409457uL, 0x7AF63B840E3F63F2uL), (+1, -14, 0x9AE4BE684EF3768FuL, 0xBA29DBA8E694D229uL)),
                ((+1, 5, 0x95625AA60D1F8F75uL, 0xDDE3E72B9904B8F9uL), (-1, -18, 0xCE137D03747ECE9DuL, 0xE00D0D7893BC81BBuL)),
                ((+1, 1, 0x8A781191ACE60D6EuL, 0x55EF2F5FEFB2D9ABuL), (+1, -22, 0xCF4846DD19172D54uL, 0x7BE6400C69F1F258uL)),
                ((+1, -4, 0xBC5BD76EAB4045EDuL, 0x91284FF05242E1C3uL), (-1, -26, 0x95BBEC7DE936814CuL, 0x2C2DD2BF3B2A01DAuL)),
                ((+1, -9, 0xA908E915D3769A13uL, 0x00279E300FBD302BuL), (+1, -31, 0x8BBCBE6434C4C48FuL, 0xA8B2331161017BECuL)),
                ((+1, -15, 0x97BA0DB6888EB13FuL, 0x6191B391F6258718uL), (-1, -38, 0xFF819B8E6EDFCFCFuL, 0x2F68289BF67E72D3uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX13Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 28, 0xE467E00000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 28, 0xF6248D62C9407F8BuL, 0x92852D45FFBEDE0EuL), (-1, 0, 0xB9632E5563B14789uL, 0x71E68267B9C8F632uL)),
                ((+1, 28, 0x82D7968CAAF1AA9AuL, 0x3171D8F527B33B8BuL), (+1, 0, 0x80222F06302CB641uL, 0x47272064EE7432D8uL)),
                ((+1, 26, 0xB548B29E3FCD8B5EuL, 0x4B42B228E2C0ABA7uL), (-1, -2, 0xE027612859F863E8uL, 0x2B2C5AF953E28886uL)),
                ((+1, 24, 0xB6692808656FA484uL, 0xE48172B58AF35445uL), (+1, -3, 0x8AA17524EF0EC5D8uL, 0x7BA9B535962110CAuL)),
                ((+1, 22, 0x8CB9DCDE350C6544uL, 0xE534B702524C3C3FuL), (-1, -5, 0x804019CB788006CAuL, 0x575DEDB1189D372EuL)),
                ((+1, 19, 0xAB56279F0EC4BBBCuL, 0x31FB7F521AF65441uL), (+1, -8, 0xB6ED9D05478D06ECuL, 0xDC11B6989A14FC88uL)),
                ((+1, 16, 0xA6CF03821329D2DFuL, 0xFB031C8C74991166uL), (-1, -11, 0xCC114C713570D77EuL, 0xE41F9E8F581EA5AAuL)),
                ((+1, 13, 0x8208AF809BCDC93CuL, 0x90F893B64A3EE933uL), (+1, -14, 0xB273350FAA665049uL, 0x4EA75D1FE5CE0716uL)),
                ((+1, 9, 0xA09BD83FE6020A4EuL, 0xA1880CD15D15776DuL), (-1, -18, 0xF23B4534EE2B100FuL, 0x46E8C33FDD095CE8uL)),
                ((+1, 5, 0x991834B27CE8CD04uL, 0xA39258D78D9F595FuL), (+1, -22, 0xF8C0C552A85D3A3BuL, 0x7EB5B6A907D0095AuL)),
                ((+1, 0, 0xD5E180B8782B428EuL, 0xCE20800307F1B6FEuL), (-1, -26, 0xB79575FFC6EF4F05uL, 0xB5B5649B53A97742uL)),
                ((+1, -5, 0xC4E58EDB29B0FAA7uL, 0xD40C826A3A7093B0uL), (+1, -31, 0xAF2BC6A7DC661C3EuL, 0x2A0F1711AFCA6567uL)),
                ((+1, -11, 0xB51D78A7B47A6F89uL, 0xFE6314778E11FE97uL), (-1, -37, 0xA3E005321DA137E1uL, 0x1A0D04EDAC97C90CuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX14Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 32, 0xB994660000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 32, 0xD21439C5F1D2C028uL, 0xE79E94875D68B0D3uL), (-1, 0, 0xBC468C5DF9B7BED9uL, 0x4869F36A8F9D4BC6uL)),
                ((+1, 31, 0xE9653FB5E45B20D6uL, 0x87C39634E49C4B92uL), (+1, 0, 0x8434A6B13C9D9D1FuL, 0x80D0A8E12BC73CAFuL)),
                ((+1, 30, 0xA84DC5574E8245FEuL, 0x79896C30C6503E01uL), (-1, -2, 0xEB0EE70F45F225EEuL, 0xD580DCAE5314AB40uL)),
                ((+1, 28, 0xAFBB3AFEF3759DACuL, 0xFFD12CBD1EFCC8C4uL), (+1, -3, 0x93CFC24749CE8A7DuL, 0x5FB6260EB04A4EDEuL)),
                ((+1, 26, 0x8C5208E31C789F9FuL, 0xA701B6EDC327D166uL), (-1, -5, 0x8B18A197BDE86FECuL, 0xF015235079745701uL)),
                ((+1, 23, 0xB0712F4DC7CEA455uL, 0xE2BF4E6F1AA57668uL), (+1, -8, 0xC9E74A25E3570FEBuL, 0x4076F32C92804AE6uL)),
                ((+1, 20, 0xB1144A2438B160D5uL, 0xBE968D8BFF3680E8uL), (-1, -11, 0xE553AB9576713EF5uL, 0x0EB49DF2A28BEC04uL)),
                ((+1, 17, 0x8E118F5D9A5247B2uL, 0x22E569529AB30A8EuL), (+1, -14, 0xCC4957EDB706F7A6uL, 0x1F611C1BC0D4310FuL)),
                ((+1, 13, 0xB455FBF6B476F580uL, 0x6DE44DE74CFD841AuL), (-1, -17, 0x8D5209F0944F54A2uL, 0xABF6DC7DD8521C25uL)),
                ((+1, 9, 0xB070192829E0DBA5uL, 0x2EBEA233573724A9uL), (+1, -21, 0x94018EA1B2913E1BuL, 0xDA4C217391A96D54uL)),
                ((+1, 4, 0xFCB69552C093B0ACuL, 0x4861DDB5B9D02296uL), (-1, -26, 0xDEF06272C7BF485AuL, 0x710B166B744FADFFuL)),
                ((+1, -1, 0xEE455B932288EF1CuL, 0x8CE2566637C5E213uL), (+1, -31, 0xD93AA7091D09AA0EuL, 0x6ED604C84D400931uL)),
                ((+1, -7, 0xE043529D42438094uL, 0xF29D820DE11CB099uL), (-1, -37, 0xCFAD6DA0C81970D9uL, 0x01309831D7B32BC2uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX15Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 36, 0xA261D94000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 36, 0xBFDA6FDAC16E1DAAuL, 0x85D61F452ECCA069uL), (-1, 0, 0xBF15DDE748E7BB0FuL, 0xF485EEF81A0F5595uL)),
                ((+1, 35, 0xDD9E683AADE9B6F2uL, 0x81C5241F7C6DC2DCuL), (+1, 0, 0x883A2F9545848AECuL, 0xB094E24B89AE7AD3uL)),
                ((+1, 34, 0xA5A9D65AEB3D7082uL, 0xB1E51087A5071424uL), (-1, -2, 0xF5FE74012E83942CuL, 0xB1A97387F0C86954uL)),
                ((+1, 32, 0xB2DD4E8A32010D60uL, 0x64AAFC601479628FuL), (+1, -3, 0x9D2A2AD13FE8F53FuL, 0x75D00269B70A7B4EuL)),
                ((+1, 30, 0x93608E3BD274A738uL, 0x0DBC41C200E4D06CuL), (-1, -5, 0x9653326938F48B76uL, 0x0DE36F5FC9A785F4uL)),
                ((+1, 27, 0xBEE1F8928225D045uL, 0x577ECCE3B80E26D9uL), (+1, -8, 0xDDE039AC925DB0F6uL, 0xECFA90BEB4D862DFuL)),
                ((+1, 24, 0xC504D945C6F54929uL, 0x415E91AB7D4D39E0uL), (-1, -10, 0x802F128547DFB46BuL, 0x61E8954F377D6289uL)),
                ((+1, 21, 0xA2561D28E6324508uL, 0x8A2044CC62A2A877uL), (+1, -14, 0xE86E4A8F7B5A5967uL, 0x2F80C91DA6F047B9uL)),
                ((+1, 17, 0xD35EE3B5F4532C32uL, 0x518298002DC8F79DuL), (-1, -17, 0xA3BA259B66CD6E34uL, 0xFC3FBECFB86D5D90uL)),
                ((+1, 13, 0xD3E52DB5ECC4EA0EuL, 0x067D205AE69C6F98uL), (+1, -21, 0xAEB28F5F8CF691DAuL, 0x25EF8EFFE078289AuL)),
                ((+1, 9, 0x9B551847B81747C4uL, 0xF912C3E8C47CE5CFuL), (-1, -25, 0x861F3CE87D1D286BuL, 0xAA1E28B06A0DAB3CuL)),
                ((+1, 4, 0x95C71660799C59C6uL, 0x32D4B46D6EA4491DuL), (+1, -30, 0x854CE7DCE24FD3E6uL, 0xBBA9B15ACB469E53uL)),
                ((+1, -2, 0x900D135FCA0AE9EFuL, 0xF1836B8B72F668C8uL), (-1, -36, 0x82126EDA34B7FF4DuL, 0x4A9C3CED415F0758uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX16Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 40, 0x983BBBAC00000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 40, 0xBAC33B40F0BC522BuL, 0xE6CF0BCCF2EF9A7DuL), (-1, 0, 0xC1D1255D1EFF5AC0uL, 0xEDD31C5FE0022C98uL)),
                ((+1, 39, 0xDF5FAFEF2FD7C9B5uL, 0xD65AEFAA5E7FC330uL), (+1, 0, 0x8C3183935A685764uL, 0xE4324E0593080BBFuL)),
                ((+1, 38, 0xAC7A565E79EFF90DuL, 0xA71CEFC795A63A21uL), (-1, -1, 0x807818FB04206D43uL, 0xE7F0990A516CD889uL)),
                ((+1, 36, 0xBFF9FAEC23C80EB8uL, 0x9D2365B48E420298uL), (+1, -3, 0xA6AAB1D961D75756uL, 0x4FF91F3B95C6CED2uL)),
                ((+1, 34, 0xA2CA506B56DD1F5AuL, 0x0B3BE4DF4837881FuL), (-1, -5, 0xA1E8BD6FD9958D19uL, 0xB1B197B000B34ED2uL)),
                ((+1, 31, 0xD8AA8E92E9C19153uL, 0xE21B6C0DC5E4F910uL), (+1, -8, 0xF2CEA1AEA168FBC8uL, 0x74D2621D8D3F11A9uL)),
                ((+1, 28, 0xE5809CB160B7EAD8uL, 0x2B8E9C2257DE09CCuL), (-1, -10, 0x8E9572C8761CC280uL, 0x015818E6719E56ECuL)),
                ((+1, 25, 0xC1D6AA3424D3FEA1uL, 0x963565D6BA1BAA44uL), (+1, -13, 0x8373EC86AE45DFF4uL, 0xE56871A7DB09DC1FuL)),
                ((+1, 22, 0x81380DB212502595uL, 0x478B2CAB6793BD1CuL), (-1, -17, 0xBC6790636F40408FuL, 0x2B145E72C0CA40B3uL)),
                ((+1, 18, 0x8484AFD221D3416CuL, 0x1D91921011E17413uL), (+1, -21, 0xCC9C68434014521FuL, 0xDEC667E054BD5466uL)),
                ((+1, 13, 0xC6955CA6B949DACDuL, 0xD64692FEE45E443BuL), (-1, -25, 0x9FF7E307BF321EA5uL, 0x43BBE46E66497F08uL)),
                ((+1, 8, 0xC38F4D4E41628DF3uL, 0xFC58062D1D6EC0F8uL), (+1, -30, 0xA1FDC4816400DA78uL, 0x489CA6C1035F61B3uL)),
                ((+1, 2, 0xBFF2A8061E8E9CBCuL, 0x10789FDB2D72EECDuL), (-1, -36, 0xA1258344D27D1C61uL, 0xC5E77FBE025FC176uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX17Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 44, 0x983BBBAC00000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 44, 0xC11EE6F9FFD275DEuL, 0x121A7B93156668D4uL), (-1, 0, 0xC47893A112CCDC82uL, 0xC36B2B375614BE58uL)),
                ((+1, 43, 0xEE50497F1D6D6544uL, 0x05C1549D2BE99068uL), (+1, 0, 0x9019AC4819E6DE20uL, 0x913E485AB0551742uL)),
                ((+1, 42, 0xBD809D1397627A3AuL, 0xF4D5B5E720C032D1uL), (-1, -1, 0x85EF8AABD279469BuL, 0x5F438FFA355E1E47uL)),
                ((+1, 40, 0xD8DDE782CCD78A42uL, 0x58F7EFFC9B75C3ABuL), (+1, -3, 0xB04BD750D7B8D269uL, 0x3848F7D7C90F35FCuL)),
                ((+1, 38, 0xBCCF50B0F4E9C7AFuL, 0x39F04516FE8D1C6CuL), (-1, -5, 0xADD26EB591CEE309uL, 0xC1FC2E27042EEB96uL)),
                ((+1, 36, 0x80D83DACBB2172A7uL, 0x7312E84B0202EA71uL), (+1, -7, 0x84542CE63406A4D7uL, 0xEE4A1105E48E0A74uL)),
                ((+1, 33, 0x8BCB380641055F40uL, 0x56BC5BCCFA187BE3uL), (-1, -10, 0x9DD93E74A9FB1DA0uL, 0xF6DA2276DACA6A78uL)),
                ((+1, 29, 0xF1A2BD93DB086239uL, 0xBBD6E2C171F5F398uL), (+1, -13, 0x93DC89FEE06725D6uL, 0x08FA08CC9B0F9358uL)),
                ((+1, 26, 0xA4AE4C4000E66D29uL, 0x2915F51FB692C67BuL), (-1, -17, 0xD7692001247A44A0uL, 0xBA417B4D44582054uL)),
                ((+1, 22, 0xAC84140CCE24F8CFuL, 0xC14FB507FC5C62BEuL), (+1, -21, 0xEDE49F505014C33FuL, 0x091F34BA72CB1FD4uL)),
                ((+1, 18, 0x83F06963FD16BF3EuL, 0x5219212FCDDDF936uL), (-1, -25, 0xBD37B43CE40B956AuL, 0x474A3EEE9707760CuL)),
                ((+1, 13, 0x8487ACA07F3147C0uL, 0x63D6A2B20E206618uL), (+1, -30, 0xC307F52EF5F61129uL, 0x0ADA91A6BCEA5523uL)),
                ((+1, 7, 0x84997911E26F4C43uL, 0x3CB7BD29B29A7835uL), (-1, -36, 0xC5944868812F7C9AuL, 0x93BA74F64875BD92uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX18Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 48, 0xA1BF7766C0000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 48, 0xD20A8454BAFC3134uL, 0xD8CFBD0889FCCE59uL), (-1, 0, 0xC8297E75F998DBD6uL, 0x639FC012786580E6uL)),
                ((+1, 48, 0x84E3B5FB3981608CuL, 0xE431D68C97AF4E68uL), (+1, 0, 0x961672D30B5AA3C1uL, 0x08456E1F7C3F539EuL)),
                ((+1, 46, 0xD94D343B8FCA1444uL, 0xACF80CDA5FA53ABBuL), (-1, -1, 0x8F3BCE0DD1CD6379uL, 0xC7F9046E9ECB7E84uL)),
                ((+1, 45, 0x8059A9832434B72AuL, 0x4E747F3760BB51DAuL), (+1, -3, 0xC2A0DDBB567711D5uL, 0xB8576ED31BE3476EuL)),
                ((+1, 42, 0xE7F922774C8CF0C4uL, 0xEA6958B2F162E2F8uL), (-1, -5, 0xC777B4E9AA470E8BuL, 0x252650F019B5966FuL)),
                ((+1, 40, 0xA591F093F9545CB1uL, 0x95E3CD1E8180F326uL), (+1, -7, 0x9F432FF34E1E454BuL, 0x2811D63DF53C2749uL)),
                ((+1, 37, 0xBDE86B9A8415AD6CuL, 0x69CB773AEE24D836uL), (-1, -10, 0xC9A2F21C8E7C2D09uL, 0x9AAC6B2F1D23640EuL)),
                ((+1, 34, 0xB02A37B2EF0D1F02uL, 0x4DA5D3E434816D9EuL), (+1, -13, 0xCBC89EF7473F5B8FuL, 0x6E25D14482786B59uL)),
                ((+1, 31, 0x83C4F0E3D8E0DFBAuL, 0x8A87731BA010EBB5uL), (-1, -16, 0xA3F4C5DAE454D445uL, 0xC7937722C6F22236uL)),
                ((+1, 27, 0x9CCD7A831127AD22uL, 0xF4AD736C5751477CuL), (+1, -20, 0xCF3BFD3503EA5222uL, 0xBE7ED213BD664245uL)),
                ((+1, 23, 0x9047F1E8FA544DDAuL, 0x3BF5734693227EA7uL), (-1, -24, 0xC80A74F9FF118305uL, 0xA5D7C233DFC20D3AuL)),
                ((+1, 18, 0xC2A07DE60AC04A99uL, 0xABC91A7C55D6574AuL), (+1, -28, 0x8BD045769B07F66BuL, 0xF5F77ADA63C2D2F8uL)),
                ((+1, 13, 0xACCF2DA63F1B10B3uL, 0xB296F1A7C5C5A2A8uL), (-1, -34, 0xFE2B19C016A3D342uL, 0xF66000BB8AA1BF25uL)),
                ((+1, 7, 0x98F461DFDC43F063uL, 0xDD955F9C372F3217uL), (+1, -40, 0xE387959E130AD4E1uL, 0x4CECB9BFFEC4AF72uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX19Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 52, 0xB5F7665398000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 52, 0xF2EF77E2F33E9694uL, 0x6D725B4B7629B7C2uL), (-1, 0, 0xCA9A5E6A04A70C34uL, 0xBC66379B77EE2695uL)),
                ((+1, 52, 0x9DC9B2FDEAE97230uL, 0x5121972C35BD207DuL), (+1, 0, 0x99CE2088A94139FBuL, 0x817FA4F86A5674D7uL)),
                ((+1, 51, 0x84447AE7D9DF305AuL, 0x605622BD60B19BBCuL), (-1, -1, 0x94A3BD34FC0BD185uL, 0x236B9DA3EC4B395DuL)),
                ((+1, 49, 0xA0039E8904AF3871uL, 0xCA12A7EEC852B785uL), (+1, -3, 0xCC94C81BA3DBFB94uL, 0x4AEC7E4FD68C8DA0uL)),
                ((+1, 47, 0x93EF057D6AA3776AuL, 0x7D0FC00BBE5C452BuL), (-1, -5, 0xD46DAD2B2B9D777FuL, 0xBD543948402AE572uL)),
                ((+1, 44, 0xD7D7DE0EE29F8977uL, 0x7B4AD332CD33EFC9uL), (+1, -7, 0xABE3CD1806F0E4EDuL, 0x129F2A5A948EF053uL)),
                ((+1, 41, 0xFCD533A53EEBCE2FuL, 0xA54EFF22BC04FD48uL), (-1, -10, 0xDC9BF879B907D22DuL, 0x544A941BF623ABE5uL)),
                ((+1, 38, 0xEF568AF3769059D5uL, 0x1446F407834A9F9EuL), (+1, -13, 0xE21556C65D778AC2uL, 0x761BE3B819E8BA44uL)),
                ((+1, 35, 0xB68F2A9C384E9E49uL, 0xB3A025C8C118E564uL), (-1, -16, 0xB880E458A190F8E9uL, 0x8040B746D2371975uL)),
                ((+1, 31, 0xDD6402B0E730F1FCuL, 0x8604108807ED0586uL), (+1, -20, 0xEC9F595F4336507FuL, 0x6B4D57D4EE7863DFuL)),
                ((+1, 27, 0xCF7A4A9588F3E29EuL, 0x7AE161BD36942A6AuL), (-1, -24, 0xE7D583A2CDD29393uL, 0x99093EC8E9CAC3E6uL)),
                ((+1, 23, 0x8E722266C9008FE6uL, 0xA6C9EA4E62128014uL), (+1, -28, 0xA485E65FC3A3CB97uL, 0x176D0D824820E672uL)),
                ((+1, 18, 0x80AD801EF4A6454EuL, 0x8BB129AA988C496CuL), (-1, -33, 0x97E5CAF53E630337uL, 0x836842FFB4D599D5uL)),
                ((+1, 11, 0xE7A3101FCEEC4B20uL, 0xAA916D4A2EB8D75DuL), (+1, -39, 0x8A2C2D4C9C8ADD8CuL, 0xD648086E81A610E8uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX20Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 56, 0xD815C98344800000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 57, 0x93ED04A1BDFFD273uL, 0xA886B448D3C9708AuL), (-1, 0, 0xCCFA0202C7C268BDuL, 0x3F3E0C31823C8B2EuL)),
                ((+1, 56, 0xC4D40E5AE81C2A93uL, 0x4CBDB564CEAC5E76uL), (+1, 0, 0x9D767B2707296B64uL, 0xDF230095E1DCF7ECuL)),
                ((+1, 55, 0xA8D3209466841F98uL, 0x5E8F746D3E93B47DuL), (-1, -1, 0x9A05C12B664D8465uL, 0x93F92F9D8467C855uL)),
                ((+1, 53, 0xD0C87C7174A5B754uL, 0x33038F10EE02F7C8uL), (+1, -3, 0xD69CDBCA0445BB36uL, 0x6FC93709EC567FF1uL)),
                ((+1, 51, 0xC524D32475E94233uL, 0xA790DB3833CDC44FuL), (-1, -5, 0xE1A79D9D7626EC2CuL, 0xEC119FE50FF08C73uL)),
                ((+1, 49, 0x92C746DBAB432468uL, 0x545F9DF892532819uL), (+1, -7, 0xB8F094DEF64DE922uL, 0x692EAEFD2BA33C6CuL)),
                ((+1, 46, 0xAF572C1B449CF037uL, 0x9028D9546A79B12AuL), (-1, -10, 0xF0789B5E8392DF4BuL, 0x33DEE54FE37CD54CuL)),
                ((+1, 43, 0xA9290204A8730D3CuL, 0xF396300551C3387EuL), (+1, -13, 0xF9BCA6B9342D056FuL, 0x012465A8EB5CEBC3uL)),
                ((+1, 40, 0x836B941FD7EC2F84uL, 0x6FFBF81D87AC8839uL), (-1, -16, 0xCE97BA4BD9AE2EABuL, 0xC10D69283604AB38uL)),
                ((+1, 36, 0xA23C0DADEF923DA0uL, 0x8F27AFFEDA61CFACuL), (+1, -19, 0x86536A28EFC82D22uL, 0x123097A5E32343D0uL)),
                ((+1, 32, 0x9AAFB86D4FA94B70uL, 0x5A68D186184C0309uL), (-1, -23, 0x857C897CF80A2FC7uL, 0xF8EAE91D76E9EFE9uL)),
                ((+1, 27, 0xD7FEA7C4E2297F73uL, 0x125D21265EAC4056uL), (+1, -28, 0xC039F9C390936920uL, 0xDDC32F4D6C6F8AB0uL)),
                ((+1, 22, 0xC6536A9E1E4F5FB4uL, 0x0339075A0E4C6706uL), (-1, -33, 0xB420BEE149142303uL, 0xA84C911BFF1D77EEuL)),
                ((+1, 16, 0xB55CE36E0017D59AuL, 0xA68D703F93750B83uL), (+1, -39, 0xA65C505BC6B20238uL, 0x342F0C199F888949uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX21Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 61, 0x870D9DF20AD00000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 61, 0xBD3985DCC21AD8CDuL, 0xC39851D69E978337uL), (-1, 0, 0xCF48E12C434AA275uL, 0x975AF5892EBA4AD9uL)),
                ((+1, 61, 0x80B3D7B646A9564AuL, 0x34C2B5FEAB27B546uL), (+1, 0, 0xA10F522699693A26uL, 0xA04D8999AA727B8AuL)),
                ((+1, 59, 0xE183D0E0611723B2uL, 0x30528619FFF9BEBBuL), (-1, -1, 0x9F609224096A42DFuL, 0xF309EBE91353DBECuL)),
                ((+1, 58, 0x8E51CBDA19DEA56EuL, 0x77D405B97D10D12BuL), (+1, -3, 0xE0B582E4B7B1298AuL, 0x2F1D6844B4AE247AuL)),
                ((+1, 56, 0x890DE2A968D03954uL, 0x29C33FCF1C0D97C3uL), (-1, -5, 0xEF2024C34E031A61uL, 0x130D5C3A902C09E7uL)),
                ((+1, 53, 0xCFFE2D58CA9F376BuL, 0x90E00B599A4D92A6uL), (+1, -7, 0xC6648A6F70635D60uL, 0x3F1A1FE0B7089AE4uL)),
                ((+1, 50, 0xFD12991DF540A592uL, 0x419D01EC8B5FBA99uL), (-1, -9, 0x8299A7381DC2D1FDuL, 0x7F6356B59B62FD3FuL)),
                ((+1, 47, 0xF888F5CDC91EA4DCuL, 0xFF3BBB262885EEC1uL), (+1, -12, 0x895E2BA4C0E7E99CuL, 0x7E7A067E66AEC589uL)),
                ((+1, 44, 0xC47275ABF5E7783FuL, 0xA90ED01462EEFF99uL), (-1, -16, 0xE63D3F0B46766B0BuL, 0xC5C0751D0AB75D39uL)),
                ((+1, 40, 0xF69B37E4188D9DFDuL, 0x284E1A034D55CCB5uL), (+1, -19, 0x97B1F49A0623F499uL, 0x7F9FBA0B7ADCE0C3uL)),
                ((+1, 36, 0xEEFE8FF689C3A239uL, 0x2357B9A4AF68DD72uL), (-1, -23, 0x98CC5382FC0B9CB1uL, 0x7C7BBC4AC5EF03A4uL)),
                ((+1, 32, 0xA986629C53786A5BuL, 0x8B53F64F146703F1uL), (+1, -28, 0xDF18497CDF4D3233uL, 0x365EF2125D491812uL)),
                ((+1, 27, 0x9E146786AA6D5E25uL, 0x347D7A23D1B88D69uL), (-1, -33, 0xD40645F5917CC946uL, 0xBBE489CF5BF9EC02uL)),
                ((+1, 21, 0x92C07496D88F127BuL, 0xA41E9D092AE214CBuL), (+1, -39, 0xC6AA8BD03BD695B7uL, 0x4B536DB42A9B08BCuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX22Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 65, 0xB141DF4DAE310000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 65, 0xFDB09B9823111D59uL, 0xBF39CA5E5D891E2CuL), (-1, 0, 0xD1877F026A48AEAFuL, 0xD1CB5304EA74804BuL)),
                ((+1, 65, 0xB01BD1CBA731392EuL, 0x3293830FE1C70ACAuL), (+1, 0, 0xA49895F544BA2A3BuL, 0x5BD1E24FC4491E5AuL)),
                ((+1, 64, 0x9D5AFF5D4C81681EuL, 0xF0C5614A2519A6CFuL), (-1, -1, 0xA4B32178221C420BuL, 0x5DCA56942910D767uL)),
                ((+1, 62, 0xCA6A9B795B33B1F6uL, 0x9EDA69BF600DB9BFuL), (+1, -3, 0xEADB8AD85130D302uL, 0xBC21A2A383FE291EuL)),
                ((+1, 60, 0xC689CD8EAD2F7112uL, 0x2C8DD7506B26C9B1uL), (-1, -5, 0xFCD2417066F5FB4AuL, 0x4DEB3D093B610551uL)),
                ((+1, 58, 0x9959EC1D2E46AC7CuL, 0xA93020D911AC8AFFuL), (+1, -7, 0xD43ADB61D22139E9uL, 0x87CC81778E482D25uL)),
                ((+1, 55, 0xBDD49DAA069F2F87uL, 0x22157FA00797015CuL), (-1, -9, 0x8D633275DEF5FA0AuL, 0x234772119BE42AC1uL)),
                ((+1, 52, 0xBD9222ABEA8EDFC6uL, 0xE5C0B62F523E5A60uL), (+1, -12, 0x9688C8E2D0EFF82AuL, 0x4BB771CB69C2A400uL)),
                ((+1, 49, 0x984BC42EC0DF687BuL, 0x2416C695E3356C83uL), (-1, -16, 0xFF74702BB69B2B5AuL, 0xE9510A31FFEAF8FFuL)),
                ((+1, 45, 0xC23AA7AA78A69202uL, 0x3762776AF1D960E0uL), (+1, -19, 0xAA7320FC44C278EEuL, 0x0687E2A3900AFC6AuL)),
                ((+1, 41, 0xBF27AA46F7C68122uL, 0x04FF1757B2448BB3uL), (-1, -23, 0xADEAD2FA2FAB2B67uL, 0xD81BCBDE29F75E78uL)),
                ((+1, 37, 0x89A445FB3D439244uL, 0x0D76782C586F9966uL), (+1, -27, 0x80A59D1E4AF5857EuL, 0xC17BECAC4D5DF458uL)),
                ((+1, 32, 0x823DFD50975598D4uL, 0x6429F755E074C97AuL), (-1, -33, 0xF7D59D3468C4A606uL, 0x39A45B1772B776E9uL)),
                ((+1, 25, 0xF54CB9A370D93D99uL, 0x06988F36072E51B4uL), (+1, -39, 0xEB6E0FAA9A36CBF2uL, 0xD3F5F7BA8B2096C3uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX23Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 69, 0xF3BA930ACF836000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 70, 0xB1DF5D799A6A2A29uL, 0xB114B61A5B4E0C16uL), (-1, 0, 0xD3B665E057080601uL, 0x3A25E1107B8903A1uL)),
                ((+1, 69, 0xFBADE6561A5C32A5uL, 0x7898DBE65244A95CuL), (+1, 0, 0xA81251DE33515C59uL, 0x9F338CD7CF159474uL)),
                ((+1, 68, 0xE509038275C8F740uL, 0x983E7D3C470181CDuL), (-1, -1, 0xA9FC9279A8FDE74AuL, 0x1250BA2810E75E1AuL)),
                ((+1, 67, 0x95F219532380A638uL, 0x0C945831074F0937uL), (+1, -3, 0xF50C1C863CFFA51EuL, 0x679E307CCC33E55EuL)),
                ((+1, 65, 0x959F0A3E75BDC45DuL, 0xD812F7DA2A0842EEuL), (-1, -4, 0x855CA887FFA8A065uL, 0x69F64BFCEE6D8D14uL)),
                ((+1, 62, 0xEB05614438EFE394uL, 0xE32E03B234C2574DuL), (+1, -7, 0xE26EE66D6435F92FuL, 0x79944AA8DABC495FuL)),
                ((+1, 60, 0x93D6E2FDF6363773uL, 0x12ACC2C11617F2A2uL), (-1, -9, 0x9896132C2D383C9AuL, 0x1137BD6102216759uL)),
                ((+1, 57, 0x95FB4CE02123E448uL, 0x0C3DDCAF38082370uL), (+1, -12, 0xA45C806157C0B683uL, 0x8BCD35116BDBD6C2uL)),
                ((+1, 53, 0xF4B51221B68A2D6FuL, 0x018513D895CAB55DuL), (-1, -15, 0x8D1FB889EF302E48uL, 0x0F4D39CB0880BD92uL)),
                ((+1, 50, 0x9E648890EA1C6ECAuL, 0x816B0E218C3E27E3uL), (+1, -19, 0xBE9DEE656EF31451uL, 0x53627D2AFDA4CE54uL)),
                ((+1, 46, 0x9E2CE120EECB6BC7uL, 0xE9BA2F3C0139E35EuL), (-1, -23, 0xC4E7B61CD7A84ABBuL, 0x7F68D3AF2E5A4605uL)),
                ((+1, 41, 0xE70DF205E36B057AuL, 0x25C1223B9B30FCE4uL), (+1, -27, 0x937DE126D7489370uL, 0x310630433EF083DAuL)),
                ((+1, 36, 0xDDB1B029803A6844uL, 0x6C150CF8404DF7BAuL), (-1, -32, 0x8FE69BDB790EDB7BuL, 0x965BACC1AC20E132uL)),
                ((+1, 30, 0xD3A0A742102C88B3uL, 0xF0B2773931A13B72uL), (+1, -38, 0x8A7F4BE5E44E0D38uL, 0x0D790BB4437310CFuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX24Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 74, 0xAF2E19AFC5266D00uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 75, 0x8233607CE62E4C13uL, 0x1331387F6FBBE4FEuL), (-1, 0, 0xD5D624295E5B1932uL, 0x08A30D2B6FA0221CuL)),
                ((+1, 74, 0xBB822C6CD85B8131uL, 0xB7103FEB3EDAFD12uL), (+1, 0, 0xAB7CA6B4A0BEF54AuL, 0x692C74D40191649BuL)),
                ((+1, 73, 0xAD952B3FE3789F27uL, 0x42F725300C270D8AuL), (-1, -1, 0xAF3C33B9A177C860uL, 0xBE3807C9AE0F467BuL)),
                ((+1, 71, 0xE7168D810EAEF58AuL, 0xD4FA37D2616A5B38uL), (+1, -3, 0xFF44B40176370E2BuL, 0x480CC928742FE858uL)),
                ((+1, 69, 0xEA5626DCAC24D92EuL, 0xB9BB5A0D9C663E22uL), (-1, -4, 0x8C6885FD0D884229uL, 0x5F33F78E009C65B2uL)),
                ((+1, 67, 0xBAF41D7FB3D7A077uL, 0x80433E995B53AB61uL), (+1, -7, 0xF0FC3F3F9332ED76uL, 0xFEABFC1D22B09F32uL)),
                ((+1, 64, 0xEED2CAC3AD1BC8AEuL, 0x73E0413764557826uL), (-1, -9, 0xA42F6F32F38443A8uL, 0x3D2EE785161DA54AuL)),
                ((+1, 61, 0xF5EA2C6D40A5D076uL, 0xBFEE0ED492867E05uL), (+1, -12, 0xB2D775AC274BAE45uL, 0xA7CFD820D39B60D9uL)),
                ((+1, 58, 0xCB8BD880F83F1B62uL, 0xB3D361F39143A53EuL), (-1, -15, 0x9B4FD39BB12C254EuL, 0x5B720260D5FD54ABuL)),
                ((+1, 55, 0x85A0F9600D877ACEuL, 0xA63DA2D2E213FAEBuL), (+1, -19, 0xD43898020E6236E4uL, 0xE9E49644D7C8FD9AuL)),
                ((+1, 51, 0x874DB924565556BDuL, 0x1BB9403CA786FAC4uL), (-1, -23, 0xDDD1B1C46636EB35uL, 0xCFB0F7374271CE48uL)),
                ((+1, 46, 0xC8559745C70E1433uL, 0x82B6ECB73A9135DBuL), (+1, -27, 0xA828B30B42765EBDuL, 0xAB45201F6488ABEBuL)),
                ((+1, 41, 0xC2C6D286E9924817uL, 0x830A9C5BBD90A50CuL), (-1, -32, 0xA6154EDD6383D4EDuL, 0x016E257F0F24B367uL)),
                ((+1, 35, 0xBC5A9478B75BB857uL, 0xEE2B3838B9A24A5AuL), (+1, -38, 0xA1DA14C09DB6177CuL, 0x2508C25737E9F51BuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX25Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 79, 0x83629343D3DCD1C0uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 79, 0xC6A75D9629B33483uL, 0x8A85AC5DCB6A4326uL), (-1, 0, 0xD7E749B921E6F369uL, 0x21D3927C5D774864uL)),
                ((+1, 79, 0x916D517A06EA18F8uL, 0xAF2D11798CE4AA12uL), (+1, 0, 0xAED7C640F22417EAuL, 0x6086EAEB673E516CuL)),
                ((+1, 78, 0x88CD826D1A88F80EuL, 0x22C02A1CE28E7A60uL), (-1, -1, 0xB47178E67FAD47B3uL, 0xE7013269D9A6A383uL)),
                ((+1, 76, 0xB8FC4730B54CA7DAuL, 0xB432F4A5956BB2A8uL), (+1, -2, 0x84C18C2BB1286F1DuL, 0x08DF87EA508D5B46uL)),
                ((+1, 74, 0xBE7452E56F0C4115uL, 0x8BA6CA18BE44F316uL), (-1, -4, 0x938AC04A255B2A67uL, 0x1D52DDD995BDA510uL)),
                ((+1, 72, 0x9A352D770AF2B275uL, 0x32C7AD0793D26B0DuL), (+1, -7, 0xFFDEB034A84E62B5uL, 0x21BCE384375AF0E6uL)),
                ((+1, 69, 0xC7DA658D705ED460uL, 0x0D519F287F8EFE3FuL), (-1, -9, 0xB02C746C90012F81uL, 0x445E71E0C4C07126uL)),
                ((+1, 66, 0xD0B41362D23941F0uL, 0x232932AD27CCB9F5uL), (+1, -12, 0xC1F7A5E3371188EDuL, 0xA718A4A0DF9DEE46uL)),
                ((+1, 63, 0xAF22F12636537274uL, 0xBD7F1288EA92B0FAuL), (-1, -15, 0xAA4AE98703DD13FCuL, 0x88EB3FB9EAACB189uL)),
                ((+1, 59, 0xE910A427CB08F0E0uL, 0xEE6269B7F6C9DE1BuL), (+1, -19, 0xEB48A602CCE0D0F1uL, 0x590BA61D2A5DB6A8uL)),
                ((+1, 55, 0xEF1B502F4C0B03D4uL, 0x9D54BB08B3D39371uL), (-1, -23, 0xF8B68D9F5BB6894AuL, 0x01AE702136C3C122uL)),
                ((+1, 51, 0xB34DF7F94B6CD2A0uL, 0x04B4905023A7673FuL), (+1, -27, 0xBEB91C762A520C8AuL, 0x765FDB77AFD44B39uL)),
                ((+1, 46, 0xB089F6B13460E239uL, 0xCB8C643A1051566CuL), (-1, -32, 0xBE952971F5ED845BuL, 0x1E471F94CD704F5CuL)),
                ((+1, 40, 0xACD61B1D56A07D30uL, 0xE22AD2A38842A786uL), (+1, -38, 0xBBF36CED0BBF5101uL, 0xDDE70CD78C30908FuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX26Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 83, 0xCD4A0619FB0907BCuL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 84, 0x9DB0C336641D73FDuL, 0xC3BC2B4073EE66FBuL), (-1, 0, 0xD9EA65E45EA74548uL, 0x99C592F38F5C971AuL)),
                ((+1, 83, 0xEA7B7BD56ADC39B7uL, 0x82D92135B834A088uL), (+1, 0, 0xB223EF6477976B9DuL, 0x670B3FA54675D135uL)),
                ((+1, 82, 0xDFED4D0FFFD77F1CuL, 0x4397B071ED3DC265uL), (-1, -1, 0xB99BF551B4DFA3ECuL, 0x1F6443E38B012D7FuL)),
                ((+1, 81, 0x99A3236203AB8150uL, 0xD914A77AAD8115EBuL), (+1, -2, 0x89E2A9D889074439uL, 0xA7D3754C311612D6uL)),
                ((+1, 79, 0xA075E950BABE7B34uL, 0x0D36C827B67613DBuL), (-1, -4, 0x9AC186E50014C3AFuL, 0xC91B1893E6A54920uL)),
                ((+1, 77, 0x83C01B07DEEE1EA5uL, 0xD3679D34128B7341uL), (+1, -6, 0x87891D439756FE95uL, 0xF7EC58D594CCA147uL)),
                ((+1, 74, 0xAD183590E856C819uL, 0x92D6170BA1E7C852uL), (-1, -9, 0xBC8A5D27C39CFE98uL, 0x865D194C1014E3DCuL)),
                ((+1, 71, 0xB72FDA75B439F3BDuL, 0xEC17D0C7927C959DuL), (+1, -12, 0xD1BAF114FA59FA3DuL, 0xDDF041EA6F84051EuL)),
                ((+1, 68, 0x9BBE065BBD436809uL, 0x200C5A3E5C9D8FEAuL), (-1, -15, 0xBA1112FF503BD635uL, 0x42176DC86DA9D7C1uL)),
                ((+1, 64, 0xD1EB27882D441170uL, 0xF2BB0CEED5E77146uL), (+1, -18, 0x81E97EAA9ECFFCFBuL, 0xA2458492D2697ECBuL)),
                ((+1, 60, 0xDA11B1E3117C13A1uL, 0x28FFFBAF4FAB5ADEuL), (-1, -22, 0x8AD19852A863C057uL, 0x2C98C55DA6FBA244uL)),
                ((+1, 56, 0xA58B2D8EC1E8C749uL, 0x9F3DDD2BC32647E3uL), (+1, -27, 0xD741708DED3A7765uL, 0x97C4F3CE21D0D276uL)),
                ((+1, 51, 0xA4F57626F7A2591FuL, 0x9F72390277084DE4uL), (-1, -32, 0xD983E13AE22A0042uL, 0x1BAD2926526D6521uL)),
                ((+1, 45, 0xA36976794D016F1DuL, 0x7C09071C359A2C4BuL), (+1, -38, 0xD8F74DE0CEA30ECFuL, 0xB65BC2B85C5DAF11uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX27Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 88, 0xA6CC24F51BF75648uL, 0xC000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 89, 0x820DF0E6A5A5DF3DuL, 0x13D208F6AAB1B5DBuL), (-1, 0, 0xDBE005F3C5499BBCuL, 0x37EE151DC08D2F00uL)),
                ((+1, 88, 0xC43A11D8DE355665uL, 0xD3BD1E8EB6847FE0uL), (+1, 0, 0xB5616AE24723D2AAuL, 0x8BC248AF2D0E5A6AuL)),
                ((+1, 87, 0xBE1334E2AA68DE29uL, 0x30246D57A475B4F7uL), (-1, -1, 0xBEBB571D46EAD286uL, 0x06B24F73EEAB84D0uL)),
                ((+1, 86, 0x843B66CAB2DE08F5uL, 0x935A88FC53F80959uL), (+1, -2, 0x8F04D5FCF97D494FuL, 0xABF88D5282DBD4F3uL)),
                ((+1, 84, 0x8BFCCB5FDE97FCA7uL, 0x7E92102369DE0F58uL), (-1, -4, 0xA20B2EA02651BE7EuL, 0x3A6191B73298D753uL)),
                ((+1, 81, 0xE8F178C08B8DC4B8uL, 0x730B2ECE60331278uL), (+1, -6, 0x8F498AB5804E3AB5uL, 0x03E5AA0A68C16895uL)),
                ((+1, 79, 0x9B03B9C476765A22uL, 0x4FFB9A5C0929DC2DuL), (-1, -9, 0xC9467342D0FC06F0uL, 0xA4395E705B569438uL)),
                ((+1, 76, 0xA624D28A3DB2E0A2uL, 0xA695DF1D22540C21uL), (+1, -12, 0xE21F21EE0F8D538BuL, 0x8081F629D2BB1BC9uL)),
                ((+1, 73, 0x8F03EE3C81B5165BuL, 0x666015B9431E69A5uL), (-1, -15, 0xCAA22AC2FA137BEEuL, 0xA3CBD22B9512EB62uL)),
                ((+1, 69, 0xC31F03E2816D91C3uL, 0x871D59F5EFBA8152uL), (+1, -18, 0x8EEDF70DDE558038uL, 0x145268B5C233E6F7uL)),
                ((+1, 65, 0xCD204A51177FB678uL, 0xE06C4EF8A5A89282uL), (-1, -22, 0x9A51D6BA68083BAAuL, 0x8876A504F8051A6CuL)),
                ((+1, 61, 0x9D8C53345065A6DAuL, 0xCA0F73633E422A7DuL), (+1, -27, 0xF1D34F250E0718A4uL, 0x990D5EEA8B08ABC1uL)),
                ((+1, 56, 0x9ECD3A8A13FE0270uL, 0x8880310BDCF66864uL), (-1, -32, 0xF6FE983C2E801D08uL, 0x0FDBF36E8C97B3C8uL)),
                ((+1, 50, 0x9F17CC8F006F46BAuL, 0x44EB136D4B3EB8ADuL), (+1, -38, 0xF9118A7815A5933EuL, 0x4939AA948083A3F2uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX28Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 93, 0x8CBC3F2ECF98B0CDuL, 0x6200000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 93, 0xDE949A9ACD12832BuL, 0x4B6C793284F7CB42uL), (-1, 0, 0xDDC8B4037FA92E12uL, 0x21EEF96BAB185AFEuL)),
                ((+1, 93, 0xAA3D56BE98627B2BuL, 0x8DB569116E3CCFA0uL), (+1, 0, 0xB89088B93398F54BuL, 0x80C78AC611220881uL)),
                ((+1, 92, 0xA721A3DB96E58A65uL, 0x839BA5F9764B4D47uL), (-1, -1, 0xC3CF63098FE40F03uL, 0xCBD9EF0E353D4019uL)),
                ((+1, 90, 0xEB9CCEF9FFD7E6E3uL, 0x39FD5400B6357FC6uL), (+1, -2, 0x94274E115F51BF28uL, 0x7558ED53E8E46195uL)),
                ((+1, 88, 0xFCA72446B12B7862uL, 0x0630BD8656C7C676uL), (-1, -4, 0xA9662EC4C002F6F5uL, 0x1F6C07E62693165AuL)),
                ((+1, 86, 0xD4DE1B54ECD25A90uL, 0xAE99E45A9D7A643EuL), (+1, -6, 0x972ED636B306FB2EuL, 0x296EB9D7BC56FE49uL)),
                ((+1, 84, 0x8F686A1D6C905A4BuL, 0x19A44871BF7FB873uL), (-1, -9, 0xD65E125641B2BC36uL, 0xF18F14CFD44E0BDAuL)),
                ((+1, 81, 0x9B912FB0D61D240DuL, 0x42751223AD9F9509uL), (+1, -12, 0xF321F404319EDAB4uL, 0xEBE3552628938183uL)),
                ((+1, 78, 0x87809032A102306EuL, 0xE5A619B89FA65A8AuL), (-1, -15, 0xDBFDD5F390057EAFuL, 0xCAC10E57EC5A4E3CuL)),
                ((+1, 74, 0xBB0665CDF536A9FEuL, 0xB2CAAAA31FCA3AF5uL), (+1, -18, 0x9CB3A07486B7A2F9uL, 0x5DE691BE011F4254uL)),
                ((+1, 70, 0xC6DCE45C28B61F0EuL, 0x20E8F2B67DE92518uL), (-1, -22, 0xAAE1A731BFF3A8F5uL, 0x5C32630E6000A464uL)),
                ((+1, 66, 0x9A73ACBA59832572uL, 0x7F2E310C5C4D84EEuL), (+1, -26, 0x873FD460DB8D4DD0uL, 0xFA2C0FB09092B603uL)),
                ((+1, 61, 0x9D658B86C09808A9uL, 0x3A0963E878CA4DEFuL), (-1, -31, 0x8B90EBBB04DBD261uL, 0x271D3F66DDB6548DuL)),
                ((+1, 55, 0x9F64940041FB51AFuL, 0x8E51001BE899CB8BuL), (+1, -37, 0x8E36DE370B0D9F77uL, 0xCDC86273E156FB26uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX29Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 97, 0xF6496E91EB4B3567uL, 0x6B80000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 98, 0xC55DB90975EA0FB8uL, 0x580D4D193CC5E5CDuL), (-1, 0, 0xDFA4F63447AAEF74uL, 0x36B2B4867418E31AuL)),
                ((+1, 98, 0x98EE17DA41A27BEEuL, 0x001584908651D879uL), (+1, 0, 0xBBB19DFAB21B91BCuL, 0x28808F2EA495AD9CuL)),
                ((+1, 97, 0x980F30F8D7BE7C90uL, 0xD4DB615B599827F9uL), (-1, -1, 0xC8D7F0D65E12F27AuL, 0x628B8D80B7B7DD8BuL)),
                ((+1, 95, 0xD90CA200D046C5CEuL, 0x274A3113CBB383E0uL), (+1, -2, 0x99496704287C3E98uL, 0x1D7A76265DC04063uL)),
                ((+1, 93, 0xEB99E4A9A8727BB1uL, 0x7AE5184A1B5A5949uL), (-1, -4, 0xB0D11E42C12D077DuL, 0x3D373116FAAF029CuL)),
                ((+1, 91, 0xC8E2BA9DC137DFD3uL, 0x6962AE6951FB3F23uL), (+1, -6, 0x9F374EAE930A8E6BuL, 0xEF96927479883A90uL)),
                ((+1, 89, 0x88EDED10CCEF002AuL, 0x4FFEC0CC3ED0A360uL), (-1, -9, 0xE3CEA9203B7514EAuL, 0x7B10E52659506B5CuL)),
                ((+1, 86, 0x96413F122590DF0CuL, 0x95D0510B3FA2BAC5uL), (+1, -11, 0x82608C7C92DC7E20uL, 0x464FD1D2C483EA36uL)),
                ((+1, 83, 0x845BB363DDB94E7EuL, 0x1DE6DF733DD11735uL), (-1, -15, 0xEE238B58AC9F4EC7uL, 0xB1218FDC49901C80uL)),
                ((+1, 79, 0xB8B7C1BDBD0456FDuL, 0xAD8B6C76E1FD5B26uL), (+1, -18, 0xAB3C21672DCFF338uL, 0x3B33E33D08962371uL)),
                ((+1, 75, 0xC68E311DA322DF23uL, 0xAE89B11AC313EAEEuL), (-1, -22, 0xBC86508ED279FA6FuL, 0xCB828B1192DA6BFEuL)),
                ((+1, 71, 0x9BDE4F4DF00D09B9uL, 0xBDA4343DDBAB56A9uL), (+1, -26, 0x96AB619DB152E644uL, 0x995D5635D7E20D90uL)),
                ((+1, 66, 0xA08418FE8B2A5C3DuL, 0xF0BFDFB46F567D81uL), (-1, -31, 0x9D04C594F31B6FE9uL, 0xF13AF4ADEDF04ED1uL)),
                ((+1, 60, 0xA43CEF12D51E0F00uL, 0x29C86CB6A242FBEFuL), (+1, -37, 0xA19B9A3B1B8507BDuL, 0x99032ECBFAC3836AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX30Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 102, 0xDF328C343D3C2865uL, 0xB96C000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 103, 0xB5213D272B0ADA19uL, 0x1F4932705359CF8AuL), (-1, 0, 0xE1754E1D8EF5926EuL, 0x6DF0E51C52582AF9uL)),
                ((+1, 103, 0x8E1707D8B9955E71uL, 0x288A752F77A71E77uL), (+1, 0, 0xBEC5030BA52AD1ECuL, 0xECE17E1E358630ABuL)),
                ((+1, 102, 0x8EFF2AFA23C21057uL, 0x9749DFF5924A6E7BuL), (-1, -1, 0xCDD4E8286F82E8F7uL, 0x1E7046A21AF6DC6DuL)),
                ((+1, 100, 0xCE8AC76397CF6811uL, 0x3770B66D167C4C9BuL), (+1, -2, 0x9E6A8A7E21426557uL, 0x5B2186DC69B501A4uL)),
                ((+1, 98, 0xE2CF97CC9B4C7417uL, 0x55125C6723397229uL), (-1, -4, 0xB84AB10542485009uL, 0xECA164ECFE1F0B53uL)),
                ((+1, 96, 0xC39A6541E92DE87DuL, 0x9413BBF3C39098A7uL), (+1, -6, 0xA7615AF5CEA3B9F1uL, 0x2A90C91B8CE8B323uL)),
                ((+1, 94, 0x86D34EAF58F0288DuL, 0xF5D8D24362425C4CuL), (-1, -9, 0xF195BA5DAAEE3B84uL, 0xD28846FE3DCEC70DuL)),
                ((+1, 91, 0x95939E7010E4E160uL, 0xD86707EDF4D46273uL), (+1, -11, 0x8B7D1E54A15DD9D4uL, 0x6D23E8CE154AB8F8uL)),
                ((+1, 88, 0x852FDC45B2CA159DuL, 0x2C859C4E9565874FuL), (-1, -14, 0x80894CD870FD3A7AuL, 0x81EE8BE1536E03F2uL)),
                ((+1, 84, 0xBBD9E9D0137B6F48uL, 0x7458A4F35410C5B4uL), (+1, -18, 0xBA88E827C69C5CFCuL, 0x6FCB6F92041DA2E3uL)),
                ((+1, 80, 0xCC08D341E5DD3BB3uL, 0x79A3E72986B4AC9DuL), (-1, -22, 0xCF44C0E0332CD692uL, 0xC675065923135F45uL)),
                ((+1, 76, 0xA1D0E1E1DE04E824uL, 0xAF878F1625E1EE35uL), (+1, -26, 0xA7341F5E909A2D4FuL, 0x2C0D9A19736CD3D8uL)),
                ((+1, 71, 0xA8536BFD9179D389uL, 0x22CE35B2E9415560uL), (-1, -31, 0xAFE8803F73B92CDBuL, 0x5F806E5EF7942324uL)),
                ((+1, 65, 0xADF14CBFCCBDB995uL, 0x607D5532170F75EFuL), (+1, -37, 0xB6CC765109531425uL, 0x4564793936AD0DE3uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX31Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 107, 0xD13F6370F96865DFuL, 0x5DD5400000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 108, 0xABD9C01052E7DAB9uL, 0x6FAB352F92F0998FuL), (-1, 0, 0xE33A3872D375C2B2uL, 0xEC2BDDD8C0B91F27uL)),
                ((+1, 108, 0x8866102793A77965uL, 0xDE695D343235274EuL), (+1, 0, 0xC1CB123DD76CE53DuL, 0xE4F2CF676720004FuL)),
                ((+1, 107, 0x8ADAB624A5B3C187uL, 0x7E56D3BCFD1125CFuL), (-1, -1, 0xD2C63DE3BF9644FCuL, 0xE616C58B900D567FuL)),
                ((+1, 105, 0xCAD4A560ACA5C366uL, 0xA967707645AC88B6uL), (+1, -2, 0xA38A3473981C69E3uL, 0xC5EB9E647F43A948uL)),
                ((+1, 103, 0xE1360CCE391CCEA4uL, 0xB5DC820F6CA1E48CuL), (-1, -4, 0xBFD1B572B64AC54CuL, 0x9983A4D2A23206E9uL)),
                ((+1, 101, 0xC457D5EFC824B93CuL, 0x2E6B6F25FF16E47CuL), (+1, -6, 0xAFAB789516FDD942uL, 0x84949F3DB5607AFBuL)),
                ((+1, 99, 0x88C944F0B405EAD0uL, 0x8493BE1410524B5FuL), (-1, -9, 0xFFB0DD34E0680866uL, 0x2A187C11290E8DD8uL)),
                ((+1, 96, 0x9959B2A8141497FEuL, 0xEF73279381BAC317uL), (+1, -11, 0x94E584486725BC1DuL, 0xF9BAE5122D4F3560uL)),
                ((+1, 93, 0x89F6060FCFB6EDBDuL, 0xB7AA4A67386CFEF9uL), (-1, -14, 0x8A6516984B9F9C63uL, 0x510744C79F24716EuL)),
                ((+1, 89, 0xC490E566308FEB3DuL, 0xE63FE1ECE3E5CBD5uL), (+1, -18, 0xCA9B2FAA0E217921uL, 0x4D699E2A12C1C93AuL)),
                ((+1, 85, 0xD7A374BF0F536A2AuL, 0x913E6E333974E047uL), (-1, -22, 0xE32192B21254A6FCuL, 0x6A3B1296F7E7C4AFuL)),
                ((+1, 81, 0xACB45D7CD85994F0uL, 0x37216A667B0F3E1DuL), (+1, -26, 0xB8E18D836B6F5C92uL, 0xD8F8FB882681541AuL)),
                ((+1, 76, 0xB56547D7075E05C7uL, 0xE36CAA17067B3F87uL), (-1, -31, 0xC44972236EF477CAuL, 0x9BFF7DE1B43F4B42uL)),
                ((+1, 70, 0xBD3D457287F07289uL, 0xF23872346451D6F4uL), (+1, -37, 0xCDDEBE65643ADF38uL, 0xF987B939B915FE6AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX32Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 112, 0xCAB56855719D22B0uL, 0x62E6960000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 113, 0xA861FB9DA4BC31B5uL, 0xAAEE987A53DEE499uL), (-1, 0, 0xE4F42CD0A8D0C0C0uL, 0xB07123FBF6A58515uL)),
                ((+1, 113, 0x8724F9DE52F37AE7uL, 0x41670C1DD069870BuL), (+1, 0, 0xC4C426B3098DC22DuL, 0xD723DBA53F80A755uL)),
                ((+1, 112, 0x8B175559E7900AA1uL, 0xB702B66E67D0E0A9uL), (-1, -1, 0xD7ABF1EBA3A66BDEuL, 0x9753B9380AE5A9B2uL)),
                ((+1, 110, 0xCD5F1450603968FEuL, 0x93055BE3A1C19BB3uL), (+1, -2, 0xA8A7F0FCAA443674uL, 0x837B3CC65CE691A8uL)),
                ((+1, 108, 0xE673B58FAACAC3B6uL, 0x12941DDC60244115uL), (-1, -4, 0xC765121C79329BD6uL, 0x0FA74E871CA304F3uL)),
                ((+1, 106, 0xCB01DC975F46D494uL, 0x62B42BB4F695ECB7uL), (+1, -6, 0xB8143A7E7CBB778FuL, 0xA6138715A02E69F0uL)),
                ((+1, 104, 0x8EE0F828DA7872E7uL, 0xFC023DBA19C0E597uL), (-1, -8, 0x870EDEA6B251B975uL, 0xE814B7E4CB6383B4uL)),
                ((+1, 101, 0xA1CBB07AECDF8F60uL, 0xED93E9FD7CBF55EEuL), (+1, -11, 0x9E98934605E24856uL, 0x8F8AD90DB4A817D8uL)),
                ((+1, 98, 0x9300A4DD32F742D5uL, 0x6A9B1BA67DF961AAuL), (-1, -14, 0x94A4AA25883DD911uL, 0x49D9914DC6198EF1uL)),
                ((+1, 94, 0xD37E217D55A4BC44uL, 0x8CCF2D2C65C55944uL), (+1, -18, 0xDB7404158C6CF076uL, 0x9A3A0B3B763FA7F1uL)),
                ((+1, 90, 0xEA3E3584F684C8C5uL, 0x958073C183186F51uL), (-1, -22, 0xF8211209776C4B09uL, 0x94DC2AA93C04FB55uL)),
                ((+1, 86, 0xBD6150EAE8546B50uL, 0x37AB4CCB3960064DuL), (+1, -26, 0xCBBADE68703F2AEDuL, 0xD4DA1081FFD0D971uL)),
                ((+1, 81, 0xC8C3B5F0C97161B5uL, 0x084866AD06EA6578uL), (-1, -31, 0xDA34A157F33C7AC3uL, 0xA24764AA062CADAFuL)),
                ((+1, 75, 0xD35E90F87BD2B9E9uL, 0xF3F8E88A6BF1CA43uL), (+1, -37, 0xE6E7885EA92B78D3uL, 0xF0B4C5182B69A18FuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX33Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 117, 0xCAB56855719D22B0uL, 0x62E6960000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 118, 0xAA37307A5581BF45uL, 0x0BEB10D63A806C88uL), (-1, 0, 0xE6A39DA82381C44FuL, 0x2DF3C39CC78390EBuL)),
                ((+1, 118, 0x8A1362CCF5BB457CuL, 0x98D249AD569EE470uL), (+1, 0, 0xC7B09B7C939C6EACuL, 0x43ABB7CE04210E96uL)),
                ((+1, 117, 0x8F99AA3A80214A56uL, 0x000E099DBDAD43EBuL), (-1, -1, 0xDC860D3ACEEABEB5uL, 0x179862676F198472uL)),
                ((+1, 115, 0xD637A2BB93AC0ACEuL, 0x7373F06704AAC991uL), (+1, -2, 0xADC35A6E4DB84102uL, 0x0A3AE48F54069E42uL)),
                ((+1, 113, 0xF2D1300C2127D0BDuL, 0xA5670AF3DBEA7F5AuL), (-1, -4, 0xCF03C39E5FFDF3FAuL, 0x1D5FC1753C553FE3uL)),
                ((+1, 111, 0xD808CE1FBD7A197FuL, 0xEFBA15A9E5D34168uL), (+1, -6, 0xC09A47CA08AC678EuL, 0xFCC5B5564416F5CEuL)),
                ((+1, 109, 0x998A4F8E1353B434uL, 0x4D0E807D9C328472uL), (-1, -8, 0x8E6D0D55460F538EuL, 0x7AA7DCCA0F949128uL)),
                ((+1, 106, 0xAF8C82709F606B0CuL, 0x3F18FB35DBA6B675uL), (+1, -11, 0xA8952187C5F3DFB4uL, 0x76D61ECB28AC83B5uL)),
                ((+1, 103, 0xA104044CC2079279uL, 0xC5A2A8A97701B02DuL), (-1, -14, 0x9F4781EF221D30E9uL, 0x394AD2CD8CF5837FuL)),
                ((+1, 99, 0xE9D2EEB99C6AA84CuL, 0x93DEA0D73409663BuL), (+1, -18, 0xED1446DC21D2BA9FuL, 0x06064AB466E4AA7CuL)),
                ((+1, 96, 0x82AEF41F84565CF0uL, 0x1612BD41432306A6uL), (-1, -21, 0x8723A08AE713C731uL, 0xA4BCCB68418C946CuL)),
                ((+1, 91, 0xD53B276EEFFB8E16uL, 0x6124CEB5B0FB47F8uL), (+1, -26, 0xDFC6F99E452647FCuL, 0x74EADB988658A555uL)),
                ((+1, 86, 0xE413632B810095A4uL, 0x96DCA685B95BA7C3uL), (-1, -31, 0xF1B6C3DBD40BD79AuL, 0xAE0C276BD424F26EuL)),
                ((+1, 80, 0xF23EE6651CCE6B66uL, 0xA78FF4F9F5C5FD22uL), (+1, -36, 0x80FDD7FC6AA9FB31uL, 0xAF7668008C529A87uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX34Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 122, 0xD10B13981D2A0BC5uL, 0xE5FDCAB000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 123, 0xB15BAE6D6C6D4350uL, 0x9D4E0747166D47B3uL), (-1, 0, 0xE848F841283CBB73uL, 0x45ADA4D29B262170uL)),
                ((+1, 123, 0x9156A59818642B49uL, 0xB51C4941F4EAAD64uL), (+1, 0, 0xCA90CAEC96D101BBuL, 0x67BC4F089065D351uL)),
                ((+1, 122, 0x98ABC47D061BEDEEuL, 0x432378F57C0ED1E5uL), (-1, -1, 0xE154A046B715EA48uL, 0xBE3DA99671E67E3EuL)),
                ((+1, 120, 0xE5FF5F31E40FBF72uL, 0x5FF1294F1F22156FuL), (+1, -2, 0xB2DC17AD84B69D61uL, 0x103C7C5CAF50130FuL)),
                ((+1, 119, 0x839E5C3FE99B6BE4uL, 0xE3659D4116F0F2A5uL), (-1, -4, 0xD6ACDAAD2223D2B3uL, 0xABBFE9192A73A6A0uL)),
                ((+1, 116, 0xEC71229D0874182BuL, 0xDF4E1BD08CFBDE9DuL), (+1, -6, 0xC93C5A7B4EC6FE90uL, 0x685C46A788A91ACCuL)),
                ((+1, 114, 0xA9A072213F296BE8uL, 0xC78F6CDB72420C58uL), (-1, -8, 0x95F1E4ACB08BE0E8uL, 0x455287A28CE49906uL)),
                ((+1, 111, 0xC3BD68AB5276484CuL, 0xAA484ACE6E031A30uL), (+1, -11, 0xB2DA07788128AFEEuL, 0xE61BECD10BDAAD41uL)),
                ((+1, 108, 0xB52CF487D6D23EC3uL, 0xFC6A32A744A74255uL), (-1, -14, 0xAA4D0D6B69C5E4F8uL, 0x795152F60082A5E1uL)),
                ((+1, 105, 0x84BC054245839B70uL, 0x8164C039FDC04198uL), (+1, -18, 0xFF7CB26F72F38C3DuL, 0xC1F220A3350C9149uL)),
                ((+1, 101, 0x95AFC76019EA96A5uL, 0xBE1694A31AF833DDuL), (-1, -21, 0x92CBEE4D3F76F7C1uL, 0xEA7D72995D89178AuL)),
                ((+1, 96, 0xF6601E7F568E6D8FuL, 0xAAAD6042564BDCB8uL), (+1, -26, 0xF50C7EA08CBD8D0DuL, 0x41390F680FE706A1uL)),
                ((+1, 92, 0x84E6AFD0E0983614uL, 0x33292980775C91F5uL), (-1, -30, 0x856E200F1E34F11CuL, 0xA368BA02ED24BD5EuL)),
                ((+1, 86, 0x8E5C297A214B6BA4uL, 0x7C0F6F399325FE96uL), (+1, -36, 0x8F97E9A6EA0B0885uL, 0x3F696FFF57586095uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX35Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 127, 0xDE1BC4D19EFCAC82uL, 0x445DA75B00000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 128, 0xBE50695915D50418uL, 0x1E2457812ED4BD81uL), (-1, 0, 0xE9E4A4CDAB7996C1uL, 0x6CEA86BA367BD485uL)),
                ((+1, 128, 0x9D7A8ECD579A58F8uL, 0x34044B565ED3A1A7uL), (+1, 0, 0xCD650E0F864F2BA8uL, 0x16CA03EF0CB5909FuL)),
                ((+1, 127, 0xA7038999FB1E40CFuL, 0x9458636DB06C3016uL), (-1, -1, 0xE617C1A348C47DC9uL, 0x8B4470D803AC4D95uL)),
                ((+1, 125, 0xFDFC554233062532uL, 0xB8599F2F1AD5A5FBuL), (+1, -2, 0xB7F1DAB65917C86AuL, 0x72F1E69EB8BC9636uL)),
                ((+1, 124, 0x92B34904E1739E14uL, 0x7CF5CBC857E2AF0CuL), (-1, -4, 0xDE5F7A5159035735uL, 0xBE5EEB878066245FuL)),
                ((+1, 122, 0x84FA13895A42268CuL, 0x39B556236B57CD2DuL), (+1, -6, 0xD1F93E53A777C27AuL, 0x20FA8C193BE93C4CuL)),
                ((+1, 119, 0xC086378837D6A3D4uL, 0x3362390E76DC0DBCuL), (-1, -8, 0x9D9C587F50BC6B5CuL, 0x70FB78A19C376393uL)),
                ((+1, 116, 0xE02472C7C920F8D1uL, 0x17C7F00917D2F43DuL), (+1, -11, 0xBD66206A41F691EFuL, 0xE7BCA413A719F1F1uL)),
                ((+1, 113, 0xD1499F9A9FED93EBuL, 0x84A2858B239AFA51uL), (-1, -14, 0xB5B4B2AF41D10C44uL, 0x23DFB67A0502F639uL)),
                ((+1, 110, 0x9AA895B4BC1B3D13uL, 0x59376EBE2E777562uL), (+1, -17, 0x8956EECF5DBE1720uL, 0x6699E2BD158A2DBCuL)),
                ((+1, 106, 0xAFE6B2782125D6FEuL, 0x9CFF203EB4347299uL), (-1, -21, 0x9F0B30099B01C00DuL, 0x23E198E39A26D6C2uL)),
                ((+1, 102, 0x91FB60D817041EF4uL, 0x4B30786C2119BD01uL), (+1, -25, 0x85C8E3C25167E031uL, 0x9FEBA482528F3D24uL)),
                ((+1, 97, 0x9ECD8987E9D77C46uL, 0xEEA25012F8FF98E7uL), (-1, -30, 0x92D896E3AD1BBBDAuL, 0xAD429A66FE515917uL)),
                ((+1, 91, 0xAB8083F29BB3DFD7uL, 0x5038890AD713421CuL), (+1, -36, 0x9F4C27FAA8179188uL, 0x4A42CEB9BC6B3104uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX36Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 132, 0xF2EE5F4545E45CAEuL, 0x7AC66F0B88000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 133, 0xD2228B3CD6F6DD15uL, 0xFC1D7E041AD30840uL), (-1, 0, 0xEB77068930ABC9B5uL, 0x03E9BDD9CB53AD24uL)),
                ((+1, 133, 0xAF81DAEE82A7C87EuL, 0x5ADB5DACC110C613uL), (+1, 0, 0xD02DBC465DB949E0uL, 0x1FCF7179E66DD6D8uL)),
                ((+1, 132, 0xBBD97D13CED1A201uL, 0x95B8D97D10D564ACuL), (-1, -1, 0xEACF8CDD4759EDE0uL, 0x06A7D7C39D6E91B3uL)),
                ((+1, 131, 0x9021FA86DFC8F79AuL, 0x1BE94FE6E166D24FuL), (+1, -2, 0xBD045F50A475FC5EuL, 0xCC85B9F308D654BFuL)),
                ((+1, 129, 0xA7FD651108C075DBuL, 0xA83DA61E5B55D179uL), (-1, -4, 0xE61AD64C3354303BuL, 0x466FBDD7DF492A39uL)),
                ((+1, 127, 0x999E20973AB07BC5uL, 0x39A6A751A7F9AFA4uL), (+1, -6, 0xDACFCFB33EDE2653uL, 0x2E9D1E700F363EBBuL)),
                ((+1, 124, 0xE0578969ACD5A767uL, 0x2FFF96A3B4ED7DD8uL), (-1, -8, 0xA56B6627470AAA3AuL, 0x1C78E6680B0439DDuL)),
                ((+1, 122, 0x83B6660E4C903B4EuL, 0xC93257E702417E43uL), (+1, -11, 0xC8384B273BAF2886uL, 0x95682F739785809EuL)),
                ((+1, 118, 0xF80C166EA1CE2ABCuL, 0x2A6CDFB22BA063EDuL), (-1, -14, 0xC17DCFD27FD96749uL, 0x40AD48634B292456uL)),
                ((+1, 115, 0xB8D4A5DFE3EFB62DuL, 0x42C20F533AF62C06uL), (+1, -17, 0x93541F52DC568914uL, 0x996D57B3F93661F2uL)),
                ((+1, 111, 0xD3F2E15CA1C5C63CuL, 0xC0B68C10FFC6D381uL), (-1, -21, 0xABE304CB03909ACAuL, 0xAE565EB7860BDFC9uL)),
                ((+1, 107, 0xB153FDB69FA11DA1uL, 0x74FE50EA15F9CC59uL), (+1, -25, 0x91AE75CE0A1EC910uL, 0x343F51CB2A10F778uL)),
                ((+1, 102, 0xC2734345A5FBBFB3uL, 0xB4269D8EF4CE166BuL), (-1, -30, 0xA120AB5A608A67C9uL, 0x57A424224000AA8AuL)),
                ((+1, 96, 0xD3AA16D572A3765DuL, 0x44E0F262CF1EC4B8uL), (+1, -36, 0xB024A0548FB55D05uL, 0x9D93CDA956A1E76DuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX36to44Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xEC4F5F7EE16512EFuL, 0x3BC7DD72EE995116uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0x80D21FB86E28DF3BuL, 0x33279645CE823132uL), (+1, -3, 0x8053AA482A7BE680uL, 0x399BA87F1BF4E4F4uL)),
                ((+1, -6, 0xEAEAAC35DD60E79BuL, 0xE1490BD60D18E38FuL), (+1, -8, 0xD66FC58F14C3206AuL, 0xC3CAA8C88B30E0F1uL)),
                ((+1, -11, 0xE84D96C0D902017DuL, 0xFAAD82B64E5E48FCuL), (+1, -13, 0xC17169889628796FuL, 0x9AFCBB9B46A978CAuL)),
                ((+1, -16, 0x871576DB635B3634uL, 0x7047CFD0C46DF25FuL), (+1, -19, 0xCC0369A5935E80C3uL, 0x8A008D6AA373D077uL)),
                ((+1, -23, 0xBB56899BD4193124uL, 0xE776ED6EFC8EEA60uL), (+1, -26, 0xFE7260E184556996uL, 0x963081297CE4E337uL)),
                ((+1, -30, 0x95D6978BC04288F1uL, 0x40A88FE84A68FA33uL), (+1, -33, 0xB4C802DD1673437DuL, 0x9A8C6F42F151FB99uL)),
                ((+1, -39, 0xFCD539335D4A5B76uL, 0x896B89AB4E79837BuL), (+1, -41, 0x84CD20379EB16C01uL, 0xED37DA85BE41671FuL)),
                ((+1, -48, 0xB989990ACCB42C4BuL, 0x1DC086688EA7F4AFuL), (+1, -51, 0xA361D04BA6F8AB09uL, 0xBB26FB48A531ECB6uL)),
                ((+1, -59, 0x90E8AFAB026225F2uL, 0x521DDC3D0E8EA0C9uL), (+1, -63, 0xC1314CCE58463669uL, 0x0EEEB161521FC550uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX44to52Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xFF087166D671F1A6uL, 0xE23146CFBA60A0F8uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xCF63740CEF53AD69uL, 0xF108F0BE716BB949uL), (+1, -4, 0xBF24CA61CE0CA55BuL, 0x6DC2130BFD737512uL)),
                ((+1, -6, 0x89CCD618CAA5829DuL, 0x8DAC5EF56F480490uL), (+1, -9, 0xE7F7D462E5486182uL, 0x491F431A1D9979EAuL)),
                ((+1, -12, 0xC06890551A8C0A94uL, 0x5716D01A6F5E5097uL), (+1, -14, 0x92E8F0B6B75ACF9FuL, 0x0F1294D32470426EuL)),
                ((+1, -18, 0x9709A0A1E453DCBBuL, 0xB33D4E0D06950952uL), (+1, -21, 0xCF62D3B02E31CB20uL, 0x105DB07FBE214BBCuL)),
                ((+1, -25, 0x842ACA3E969ADF62uL, 0xAC5E5138692DE698uL), (+1, -28, 0xA11C303D2E512F58uL, 0x38303AC0DD80A394uL)),
                ((+1, -34, 0xEF1654EAD7D1404AuL, 0x20254FB5DAEA0E19uL), (+1, -37, 0xFD8650F24DB7DDA7uL, 0x021624CEE1A47BEAuL)),
                ((+1, -43, 0xB9FD6BD72E311AC9uL, 0x8BD679CF246C6A6DuL), (+1, -46, 0xA51BCF33AAF7286DuL, 0x1364E37F6A5E9186uL)),
                ((+1, -54, 0x9950EB9C9D385063uL, 0xA20A8BFA2B4B3B6FuL), (+1, -58, 0xCDAC89D2A53DF30FuL, 0xB4FFF1882A535411uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX52to60Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x874FA54B5BA80E1DuL, 0x782C81754C520C10uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xBC285515A698A341uL, 0x444B714BEF673A98uL), (+1, -4, 0xA469191766528CEAuL, 0xA07DCE8D726EDF44uL)),
                ((+1, -7, 0xD5BD468C17CFB10FuL, 0xD94043F67B802E54uL), (+1, -9, 0xAB7C6FD507774D43uL, 0x5828D56AA884AE9FuL)),
                ((+1, -13, 0xFF14C16524D95E7EuL, 0x131BFD2CCE698B1CuL), (+1, -15, 0xBA97A6103C57B5A2uL, 0xEDA927A19D444C14uL)),
                ((+1, -19, 0xAB268593828B40C2uL, 0x774C39A5ACFC8E99uL), (+1, -22, 0xE23988828E0F95CBuL, 0x1F5AE72460E56D11uL)),
                ((+1, -26, 0x800B310A39DAF24DuL, 0x518F0EBB3EF45879uL), (+1, -29, 0x96F441F221F74525uL, 0x2F4E44640E99A68AuL)),
                ((+1, -35, 0xC61F12B38412A8EDuL, 0x7A47F18ADFE25D0CuL), (+1, -38, 0xCC21CF1E04DD561BuL, 0x019287DEB27A52ECuL)),
                ((+1, -44, 0x83E9F203A4B9A352uL, 0x93FD4CAC091E7655uL), (+1, -48, 0xE4B3E67214B6309EuL, 0xE3EB888FCB992C74uL)),
                ((+1, -56, 0xBA3BCF7862C04D62uL, 0x4839B618F0638509uL), (+1, -60, 0xF570368CEB2F4B33uL, 0x1BE55907CC0AC886uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX60to68Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x8DFCBA87886B2EBAuL, 0xE05D686914C9D727uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xAF5D106B6B4A912CuL, 0x91B44E3072A630D5uL), (+1, -4, 0x92DFDD33F1B151F6uL, 0x6143C941FA11A2E3uL)),
                ((+1, -7, 0xB08B1B5792BBD807uL, 0x31D9126D091D89CEuL), (+1, -9, 0x8869D88D1F409B9BuL, 0x7066B554EFB70174uL)),
                ((+1, -13, 0xBA602182983C63BEuL, 0x217B36B6596CC8A5uL), (+1, -15, 0x83D69F78B45C8238uL, 0xFBE6E3FDC5F88225uL)),
                ((+1, -20, 0xDCE785ADC07A07F5uL, 0xFE4570B6329B75D8uL), (+1, -22, 0x8DB3E1EDAFDB3091uL, 0xE2DB651DAF5E23B4uL)),
                ((+1, -27, 0x91CCE34C0E6F7A2BuL, 0xA229D3ECEF4C1F9FuL), (+1, -30, 0xA76B800A98284BAAuL, 0x5FC493CE24F8D12FuL)),
                ((+1, -36, 0xC6DAE76A5E7BE547uL, 0xB8C9DB81E2D746FBuL), (+1, -39, 0xC842BFC72773928EuL, 0x1E14E09901110D96uL)),
                ((+1, -46, 0xE9487E775BE354AFuL, 0x66949635EC0251A4uL), (+1, -49, 0xC6663EF4D9D43684uL, 0xF4D64817A64AD3CCuL)),
                ((+1, -57, 0x90FACBF1431CB7D5uL, 0xA8F554613CEEF0E2uL), (+1, -61, 0xBC5506A54CBBB052uL, 0x928FBDAEC026983DuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX68to76Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x93D32F3156C369D1uL, 0x981490FE541F2D46uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xAF1B487A93274061uL, 0x3EE36CB9E38446A9uL), (+1, -4, 0x8E1F2EE688D53693uL, 0x20FEF83559595831uL)),
                ((+1, -7, 0xA678A458D08D1D37uL, 0x07A0E76615DDD3B9uL), (+1, -10, 0xFA93CD5750D66EE9uL, 0x54F8A398476E20A3uL)),
                ((+1, -13, 0xA40CB3537B5DC04AuL, 0x8731B3AFA653889BuL), (+1, -16, 0xE2CCCE856B1CD767uL, 0x4B89FDC7A698D93FuL)),
                ((+1, -20, 0xB3EAE1FEA490F9B0uL, 0x13230632E6AC7AC7uL), (+1, -23, 0xE21A453F54BE38D2uL, 0xA1F66F71F0148855uL)),
                ((+1, -28, 0xDA47335C6EF1C609uL, 0x413D01E1074A00C6uL), (+1, -31, 0xF60732413C69AA93uL, 0xA29E3A1D47283F06uL)),
                ((+1, -36, 0x8818C37CA91CE8ACuL, 0x56B106E443614A7DuL), (+1, -39, 0x86CF920B73C00E7AuL, 0x87C6624E9262A6D8uL)),
                ((+1, -46, 0x9162CB453FD677C3uL, 0x76AC9902E9B3CDDDuL), (+1, -50, 0xF3CD702058A3DD27uL, 0x9F168F20DD37F19FuL)),
                ((+1, -58, 0xA3FE2234B44DDC78uL, 0x3F0754D4ECAE55AAuL), (+1, -62, 0xD2B0EE1100A190FBuL, 0x8EE92D4B97BE6013uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX76to84Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x9902CE635C0DB5F5uL, 0x33DD8EDBA73F8A3FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xE4EE3F4713D3EE9FuL, 0x3C1E2259CDA3FB78uL), (+1, -5, 0xAF16F599EF569518uL, 0xCACA8B7904984871uL)),
                ((+1, -8, 0x872EDDAAAD4F9DFEuL, 0xF0101BBF2319A341uL), (+1, -11, 0xBC2F9497654FC128uL, 0x8E2B2031DC176F5CuL)),
                ((+1, -15, 0x9FF5BC980287851DuL, 0x247F9598185FA7B8uL), (+1, -18, 0xC9394FEA0A111ADCuL, 0x0CBB3B3A87E5A9C2uL)),
                ((+1, -23, 0xC6791F1869D31712uL, 0xF81F173C2B8AC2FAuL), (+1, -26, 0xDF1E6917DB566402uL, 0x23A0A73AFCC71380uL)),
                ((+1, -32, 0xF569ED8A5D8147AAuL, 0xC3114CEE47B39704uL), (+1, -35, 0xF1F99F1F4A83680EuL, 0xE332BE919C3DCF68uL)),
                ((+1, -42, 0xFF168C439B798841uL, 0x09FF027C1A16A525uL), (+1, -45, 0xD4BE8227281C7BBEuL, 0xC1EDF6A68E207C27uL)),
                ((+1, -53, 0x8A5C0E14D880B599uL, 0xA180513A98A03862uL), (+1, -57, 0xB0E613DDAC02BE15uL, 0x4C3A0DE353AD24C3uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX84to92Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x9DAD095C09669849uL, 0x17D7BFB66A895442uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xD8FD513CDCDE88E4uL, 0x3D52FFFC8215F749uL), (+1, -5, 0xA1BCF7B77A72D5C3uL, 0xA811AA03B6E41006uL)),
                ((+1, -9, 0xEC69C5CF902F8366uL, 0xCE542036636810C8uL), (+1, -11, 0xA1017AEE295B108BuL, 0xBB772BD62BF94500uL)),
                ((+1, -15, 0x817BDE8D72BE20F3uL, 0x792C988A4DA005B2uL), (+1, -18, 0x9FF5DFEC9BFAA6E6uL, 0x2102B317952D8693uL)),
                ((+1, -23, 0x9555F03C59860C14uL, 0x7481833BD4A6DCE5uL), (+1, -26, 0xA56DB742709CF6BCuL, 0xBF779C3ED95590EDuL)),
                ((+1, -32, 0xAC7B83FF00F276EFuL, 0xB5D9800D69C25080uL), (+1, -35, 0xA81E8C93B6F7BDEBuL, 0x95F59A2762401AEBuL)),
                ((+1, -42, 0xA876BBE218C9E294uL, 0x5552010CF670D3A0uL), (+1, -45, 0x8B4FD73FA7FFD6BFuL, 0x9AF35F29728EDC17uL)),
                ((+1, -54, 0xACF921AC9B06DF94uL, 0x56D4D0A3BD104356uL), (+1, -58, 0xDBF136ACC9318A7DuL, 0x005A54ECB5A1617BuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX92to100Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xA1EA2FE0DEF50DD1uL, 0xA1B4A4B95B0E6234uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xCD2C6559E94C24DAuL, 0x9BF9AFE32CD4780EuL), (+1, -5, 0x95632B50D94D2BE2uL, 0xDC2F10827DF11A65uL)),
                ((+1, -9, 0xCE1BF90734A7466DuL, 0x0062FF74E79CC3EEuL), (+1, -11, 0x89820D49C9DF960BuL, 0x54E4A74DA2D0D982uL)),
                ((+1, -16, 0xD07992ECA7F480CAuL, 0x7EE8A87F263A3EA9uL), (+1, -19, 0xFCF879A6AB3B6836uL, 0xD70345AB53907357uL)),
                ((+1, -24, 0xDE60E820C242A000uL, 0xAA21F8D189D858E0uL), (+1, -27, 0xF2941BCD21F87A8EuL, 0x37B790A2447FD6B1uL)),
                ((+1, -33, 0xEDFD4C6F3321D0A2uL, 0x6548885621A67D3CuL), (+1, -36, 0xE4FA95FC91C45D0EuL, 0x9EC55D8DB4D5FDD0uL)),
                ((+1, -43, 0xD7D0E0CCA9D82A64uL, 0x667C4590AF125629uL), (+1, -46, 0xB0994E887A712066uL, 0xD5FF84DAA91E271BuL)),
                ((+1, -55, 0xCE2BFD53423AE066uL, 0xB7BFBBEA8C0FDD66uL), (+1, -58, 0x821066E080617BA3uL, 0xE37660D9B0FF4942uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX100to108Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xA5CC7BCA03DBA478uL, 0xBA063B69E90380BFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xC23F49AAC1A3956AuL, 0xF82043630E27F2A3uL), (+1, -5, 0x8A74FCDA466629C5uL, 0x595D4AFCE849ED51uL)),
                ((+1, -9, 0xB48CFE45659276E4uL, 0x7AE7BB6ACAD52FB2uL), (+1, -12, 0xEC62D5C24B84845EuL, 0xBC9F8F49D41CE458uL)),
                ((+1, -16, 0xA91CAF43600B7F92uL, 0xA054FBA947331DADuL), (+1, -19, 0xC9C9A2C580F4E402uL, 0x380E5BC22D4D3FD0uL)),
                ((+1, -24, 0xA730A822EE5F8563uL, 0x3A051D66EBD4A9EAuL), (+1, -27, 0xB3B6800F77E0854CuL, 0x278FD30D26E35296uL)),
                ((+1, -33, 0xA5FD3F1107DE8488uL, 0xF63072EAE3F6F4BAuL), (+1, -36, 0x9DB246AD7073819AuL, 0xCF72F66FF31EA0CFuL)),
                ((+1, -43, 0x8BC751562E715C21uL, 0x0F7227DAA0B658C4uL), (+1, -47, 0xE25DEE96ABC12481uL, 0x6CC6159C7D395DB2uL)),
                ((+1, -56, 0xF836E80517C58A28uL, 0xA4979CBF90B27FFCuL), (+1, -59, 0x9B5A1DCEABE9521EuL, 0xACA7545132CE4ED3uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX108to116Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xA961F0AE8319D078uL, 0xD23EDFEBF8AC5C2DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xB853003AF2191435uL, 0x0290F51A0C57080EuL), (+1, -5, 0x80DDBB1BFAC1E23CuL, 0x48EDEED8149A72F3uL)),
                ((+1, -9, 0x9F3694E9A989B854uL, 0xD2D311A9F4F42632uL), (+1, -12, 0xCCD97934FD4F0C8AuL, 0xCE0D892DEE938654uL)),
                ((+1, -16, 0x8AA728807A98E8CFuL, 0x9AD70CCA7AADBAE1uL), (+1, -19, 0xA2E2E5F6605267C3uL, 0x5CC5BF7CE142534BuL)),
                ((+1, -25, 0xFF09D9046CF93CCEuL, 0xF30D80D3F0D7E7EEuL), (+1, -27, 0x87321E49D015BAC4uL, 0xEC46CFFDD1A03886uL)),
                ((+1, -34, 0xEBAFD093493D440EuL, 0xBF8B3DF984DBA8B0uL), (+1, -37, 0xDD4017C1A41EDF3CuL, 0xF133B5C91A49F6ADuL)),
                ((+1, -44, 0xB8D86B851EA17279uL, 0x85DCC8CD9F150FD3uL), (+1, -47, 0x942EE9F2830351F4uL, 0xCD82BB942E43A750uL)),
                ((+1, -56, 0x98EAC51CBC05FBD3uL, 0x260441AFF801582DuL), (+1, -60, 0xBDF60A1F59F31650uL, 0xC6498F4C9A9A936EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX116to124Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xACB59034538D43E8uL, 0xF4033B37B892C7F4uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xAF5967222FCD6C4AuL, 0x86919B46A9F4B136uL), (+1, -6, 0xF0E153288B76681CuL, 0x2547E66DB7EB77E0uL)),
                ((+1, -9, 0x8D5BEB2D42FC0772uL, 0xDE54603A3667BCE5uL), (+1, -12, 0xB2FBEB69E8D0C54DuL, 0xED4CED46211BAE48uL)),
                ((+1, -17, 0xE5DE9533CBDF378CuL, 0xD21ECB844AFD4E09uL), (+1, -19, 0x8516D7B0836D8CEFuL, 0x87CD73BA25D436AAuL)),
                ((+1, -25, 0xC57468528075F0ADuL, 0xAF49091D18045E4BuL), (+1, -28, 0xCEAC48950BDA1696uL, 0xC3424076F8E0A19FuL)),
                ((+1, -34, 0xAA7E1FB6A75AFD62uL, 0x20C9C56EE2ED74E0uL), (+1, -37, 0x9E44470F117A99C4uL, 0xDB0D217423D05829uL)),
                ((+1, -45, 0xF9F78B0CE3725F41uL, 0x8FB8ED87C63C30E9uL), (+1, -48, 0xC6817BE97D36B205uL, 0x090B8677936E91F4uL)),
                ((+1, -57, 0xC1534904356461DAuL, 0xB8AC0EB438636F90uL), (+1, -61, 0xEE6DF8857D9F1273uL, 0x363580633AF469F6uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX124to132Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xAFD0279094FAB750uL, 0x523CC55E2B1B50FBuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xA7399CEAEA15B67FuL, 0xE2E3E2AE9108EA50uL), (+1, -6, 0xE2024358469ED317uL, 0xA5764D003EB26EF2uL)),
                ((+1, -10, 0xFCA6EDFA3F4ED8A3uL, 0x4DAE5D612BBDFA11uL), (+1, -12, 0x9D98E64DFA5C6175uL, 0x176E639D02BEECF0uL)),
                ((+1, -17, 0xC08BF51F605FA62BuL, 0xBC35B02ADCA67F37uL), (+1, -20, 0xDBFF24BBEEAE34D6uL, 0xBF57C654ED761E5CuL)),
                ((+1, -25, 0x9B11CF280FBC6B4BuL, 0xF3DC38279FE99B15uL), (+1, -28, 0xA0617A47D0DFD21DuL, 0xFB78DD12C9C4DEA1uL)),
                ((+1, -35, 0xFB24A120E6EF7B67uL, 0x16362133CD3EDA10uL), (+1, -38, 0xE6B41DC1288FE743uL, 0x5C6050AE3784A14BuL)),
                ((+1, -45, 0xACB4E8C3AEFFD186uL, 0x663F18C6A66233FEuL), (+1, -48, 0x87F0CD27528DF980uL, 0x08A9A1CECF6737F0uL)),
                ((+1, -58, 0xFA9F80E89F9BDC7EuL, 0x7A2E3ADD49300380uL), (+1, -61, 0x997F9476BB93C0B5uL, 0xE0A497A676B2C013uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX132to140Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xB2B8DCC781B4FE23uL, 0xE3BEFE973B2C8894uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0x9FD9D9C8C4224199uL, 0xA277753FCCD268CFuL), (+1, -6, 0xD4D066746EE97584uL, 0x528EF4E14AECC302uL)),
                ((+1, -10, 0xE325D5F2B46BB4A3uL, 0x2B49CA9D2D6F7B54uL), (+1, -12, 0x8BC11D2C1D3B7B67uL, 0x454B07846A98AA31uL)),
                ((+1, -17, 0xA2D8F219768A3C41uL, 0x098789E0A4462C74uL), (+1, -20, 0xB7C2B91402B6B750uL, 0x3E54B61FF0A2E16EuL)),
                ((+1, -26, 0xF6CDB1037A55994AuL, 0x32409BE7F00CDE09uL), (+1, -29, 0xFC6CA60D2E65ADE6uL, 0x1CF657168A18E102uL)),
                ((+1, -35, 0xBC1632477F25E90FuL, 0x5466374DD14DCD75uL), (+1, -38, 0xAB178B3902B4AB30uL, 0x8F59B5D22315F509uL)),
                ((+1, -46, 0xF38048C3AFFF5584uL, 0x386A1895CFA0EFFFuL), (+1, -49, 0xBE131CA087A39F2CuL, 0xC2A039965AD30B31uL)),
                ((+1, -58, 0xA64EC2DCEB529115uL, 0x53077822F03FE354uL), (+1, -62, 0xCA69800DFEEA285CuL, 0x6310B31774BF179AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX140to148Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xB575925ACE41815FuL, 0x9EA4420C6BD08326uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0x99227A08671F0FD5uL, 0x23F74888296CBF8BuL), (+1, -6, 0xC90A96EEB3D92E4BuL, 0x75A53D227D432E91uL)),
                ((+1, -10, 0xCD59374E60AE96FEuL, 0xA407A6103990B8ABuL), (+1, -13, 0xF978845B617367C4uL, 0x03305E8CE3CA2B8FuL)),
                ((+1, -17, 0x8AF328285E96622DuL, 0xBC2824B31C7EC917uL), (+1, -20, 0x9AFB40021EDE3093uL, 0x7FBF297E0C241B42uL)),
                ((+1, -26, 0xC6CA2AF511EBBE47uL, 0x4E40E6C642E854BFuL), (+1, -29, 0xC934647C70AF1F90uL, 0x516C4D07C011BF94uL)),
                ((+1, -35, 0x8F089B57F0E22FECuL, 0xD0947E2666A9C7EEuL), (+1, -38, 0x80EAC52724333E98uL, 0xD2FE4A31C9FB6A09uL)),
                ((+1, -46, 0xAEDB0B0FE01902C6uL, 0x7D3890DAEB40DA41uL), (+1, -49, 0x876CE5B977A161E9uL, 0x1209BBC8DD9060D9uL)),
                ((+1, -59, 0xE187BA28CD5F6F71uL, 0x86A1500294CEFAFDuL), (+1, -62, 0x886AB7593F1DF7F3uL, 0x655EE930E3CB6311uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX148to156Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xB80B2F42D3DF1637uL, 0x73432D173E89407EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0x92FEBEFA697E8C63uL, 0x6B814A4375092F2BuL), (+1, -6, 0xBE7B0B50B372EE1BuL, 0x8A813806D4957A7BuL)),
                ((+1, -10, 0xBA944466FF7BB032uL, 0x680BDDCCFF7B9419uL), (+1, -13, 0xDFF91110DACBF828uL, 0xA0A2BB67FFA72080uL)),
                ((+1, -18, 0xEF087BBE6715C5C5uL, 0xA01B2D34D29FD6A3uL), (+1, -20, 0x83DCA4CCA0A6A751uL, 0x1A86B13AB070DCA1uL)),
                ((+1, -26, 0xA1E3D9D26FFFFA25uL, 0x46BD040089558A19uL), (+1, -29, 0xA2420B094A9AE772uL, 0xF51ACE4FE26BEBCDuL)),
                ((+1, -36, 0xDC99DF8244C057CEuL, 0xB3B8B9ECFBF2A160uL), (+1, -39, 0xC51D33A49FF2D1CEuL, 0x21EAAA1513C153B6uL)),
                ((+1, -47, 0xFF6480C8B88D6259uL, 0xE089FACC68CD0D04uL), (+1, -50, 0xC4586608BBEFB75AuL, 0x3DEA05E56DC31616uL)),
                ((+1, -59, 0x9BF7BA34C48F5F41uL, 0x841B518F9A9927D0uL), (+1, -63, 0xBB9A8DE8049E8F4EuL, 0x25C221E1A599EB56uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX156to164Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xBA7DD3F3642DCC1DuL, 0xA1316421F8E3A195uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0x8D5CC4B948D1F0B2uL, 0xB02507B8C6E8C685uL), (+1, -6, 0xB4F572E088884524uL, 0x20A7E27B955DF4A9uL)),
                ((+1, -10, 0xAA4E919FFCCB583AuL, 0x0D21DA4088614F56uL), (+1, -13, 0xCA287F50A6219872uL, 0xDFB9139320784697uL)),
                ((+1, -18, 0xCF1D76090C016014uL, 0x73FF36EF675E6999uL), (+1, -21, 0xE22E8C97229B5028uL, 0x497450D0ED109928uL)),
                ((+1, -26, 0x852B741B1100ADDDuL, 0xBFDFA6F96A4D3DFFuL), (+1, -29, 0x843EFE7A71CA678DuL, 0x84C803778381EDA5uL)),
                ((+1, -36, 0xAC4B5915DED3B553uL, 0xE4FA31DC3C45C954uL), (+1, -39, 0x98B29F95CFB65E57uL, 0x2AA2919503170717uL)),
                ((+1, -47, 0xBD66DE70D6F03D9FuL, 0xD6DC12176751C88DuL), (+1, -50, 0x90994E796804F71AuL, 0x02771ABFF491AC3CuL)),
                ((+1, -60, 0xDBA47593D3BE38DEuL, 0xB3375AC7F3C585BEuL), (+1, -63, 0x8361F903FF994569uL, 0xA2E7C1709E64A428uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX164to172Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xBCD1021CA9E73F76uL, 0xEBA5F144E4DB3454uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -4, 0xEC73207373ED3A41uL, 0x2F74834666345B06uL), (+1, -6, 0x93FE590B822E48EFuL, 0x797F3641C8D0C6A9uL)),
                ((+1, -11, 0xE1CBD904F710F8CEuL, 0xFB7B6EC5C4777290uL), (+1, -13, 0x81731E9892150F06uL, 0x8230759C2F06375EuL)),
                ((+1, -19, 0xCC6DCC34BB7877E9uL, 0x81BFAE810B5A6586uL), (+1, -22, 0xD42ED656D74825F4uL, 0x7C45FD3AF2CB1D1AuL)),
                ((+1, -28, 0xB06C93427E11438DuL, 0xB9F110E71C5CD435uL), (+1, -31, 0xA2A010B43B1AE2F2uL, 0x36B72BFC09B62AAFuL)),
                ((+1, -39, 0xFBAE0A8F3C9CF8DEuL, 0x088BE90D5BF33011uL), (+1, -42, 0xC6BB9E517B8F3AA5uL, 0xC7AE5C686B8F30DCuL)),
                ((+1, -51, 0xBB5ABCD74AB05400uL, 0x4DACA3A5F2208D6CuL), (+1, -55, 0xE619944BE31BAE12uL, 0x08F3EE27C5949F8AuL)),
        });
    }
}
