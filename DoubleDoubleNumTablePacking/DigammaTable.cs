using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class DigammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(SterlingTable), SterlingTable },
                { nameof(PadeZeroPointTable), PadeZeroPointTable },
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX5Table), PadeX5Table },
                { nameof(PadeX6Table), PadeX6Table },
                { nameof(PadeX7Table), PadeX7Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX9Table), PadeX9Table },
                { nameof(PadeX10Table), PadeX10Table },
                { nameof(PadeX11Table), PadeX11Table },
                { nameof(PadeX12Table), PadeX12Table },
                { nameof(PadeX13Table), PadeX13Table },
                { nameof(PadeX14Table), PadeX14Table },
                { nameof(PadeX15Table), PadeX15Table },
                { nameof(PadeX16Table), PadeX16Table }
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        public static readonly ReadOnlyCollection<(Hexcode s, Hexcode r)> SterlingTable
            = new(new (Hexcode s, Hexcode r)[]{
                ((+1, -4, 0xAAAAAAAAAAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, -4, 0xCCCCCCCCCCCCCCCCuL, 0xCCCCCCCCCCCCCCCCuL)),
                ((+1, -8, 0x8208208208208208uL, 0x2082082082082082uL),  (+1, 0, 0x8666666666666666uL, 0x6666666666666666uL)),
                ((+1, -8, 0xF83E0F83E0F83E0FuL, 0x83E0F83E0F83E0F8uL),  (+1, 1, 0xB231231231231231uL, 0x2312312312312312uL)),
                ((+1, -4, 0xAAAAAAAAAAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, 2, 0xAA36363636363636uL, 0x3636363636363636uL)),
                ((+1, 1, 0xC373FCDCFF373FCDuL, 0xCFF373FCDCFF373FuL),   (+1, 3, 0x8A9B6331EAB8DA7EuL, 0xFDB2ACC2FD4737B6uL)),
                ((+1, 8, 0x8CBAE6076B981DAEuL, 0x6076B981DAE6076BuL),   (+1, 3, 0xCD12F438911D0D30uL, 0x5CCEF88EB6F5D78FuL)),
                ((+1, 15, 0xD62B955555555555uL, 0x5555555555555555uL),  (+1, 4, 0x8E4143C38A48A430uL, 0xA097076AD0A5339CuL)),
                ((+1, 24, 0x98FD6BE5F9DFFE17uL, 0xE77FF85F9DFFE17EuL),  (+1, 4, 0xBC751842CF4E9497uL, 0x70E668923E28A49CuL)),
                ((+1, 33, 0xBC4976FEFAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, 4, 0xF124F8842E1C48A0uL, 0xD06011ECEFE36DB1uL)),
                ((+1, 43, 0xBB012610AE915555uL, 0x5555555555555555uL),  (+1, 5, 0x9628724E1B92443AuL, 0x6840275F06887788uL)),
                ((+1, 54, 0x8E651CDBBD813979uL, 0xE958D7E43E7A5635uL),  (+1, 5, 0xB6FC6E4651367267uL, 0x0F2944F9F6122852uL)),
                ((+1, 65, 0x9F8658358BF14630uL, 0x9C07432D63DBB01DuL),  (+1, 5, 0xDB0E702AC9B318AAuL, 0xC812A8F246FAF8F4uL)),
                ((+1, 76, 0xFE23A5EEA9E101EAuL, 0x44D3364D9364D936uL),  (+1, 6, 0x812F3BFDC335A2BAuL, 0xBF33D1C77579DA39uL)),
                ((+1, 89, 0x8BE36E94549BC383uL, 0x3183A1C126A99EFFuL),  (+1, 6, 0x967642DC43BD1134uL, 0x32FDF1146F4122ACuL)),
                ((+1, 101, 0xCFBD9FD1BF989F60uL, 0xE2608D3CA7BC05C9uL), (+1, 6, 0xAD5C4CB0E670DCD6uL, 0x7D262473FFCAA985uL)),
                ((+1, 114, 0xCBC91757DAE8B62EuL, 0x38D01E72BE6542AAuL), (+1, 6, 0xC5E1597BAB5118EFuL, 0x82DA12535E50F793uL)),
        });

        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeZeroPointTable
            = new(new (Hexcode c, Hexcode d)[] {
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xF7B95E4771C55D8FuL, 0x0C28D0814E530F17uL), (+1, 1, 0x9071B2D69DC0C3C5uL, 0x9F1956AD31ECC033uL)),
                ((+1, 0, 0xDEE01F29692F76D6uL, 0x6B7DC54DA815009AuL), (+1, 1, 0x87C79215E6AABFBBuL, 0x8C07BF62FB1CFBFBuL)),
                ((+1, 0, 0xA7F589A732A26FDAuL, 0xAADFD0D5B7829EF2uL), (+1, 0, 0x8CF11214C0E98B1EuL, 0x94C19DF4EF8B1B2BuL)),
                ((+1, -1, 0x8BAF06C88EE26684uL, 0x6F0A367E1E932CB3uL), (+1, -2, 0xB3C32DA20CB8DDBFuL, 0xDD495E41E74E8972uL)),
                ((+1, -3, 0x8DC74E46C61290F3uL, 0x320A4CAF7E215551uL), (+1, -4, 0x93BE92DF360B81C9uL, 0x00C84BF104C9D3FEuL)),
                ((+1, -6, 0xB6EE02E8CF8F1F96uL, 0x473F50C25741A45BuL), (+1, -7, 0x9F20EC93C4F9AD6EuL, 0x8E4CF2E00D938B99uL)),
                ((+1, -9, 0x9729B0D37891FE91uL, 0xD14B7195D53E2011uL), (+1, -11, 0xDF3B07180A8882EDuL, 0x2F32D598CE21F557uL)),
                ((+1, -13, 0x9CF468E9085D6538uL, 0x488AB57A2B1AA35EuL), (+1, -15, 0xC61E1DCD49F325EFuL, 0x899DE438F0B34636uL)),
                ((+1, -18, 0xC2C1C50C1B406BF0uL, 0x8260B09D78069CB5uL), (+1, -20, 0xD1B4816959A7FF60uL, 0x8D2223206E8568A1uL)),
                ((+1, -23, 0x82E5CF3CBAC816CDuL, 0x63919B5C3D7EB911uL), (+1, -26, 0xED39CE5979999283uL, 0x616C1B47DA13DA38uL)),
                ((+1, -30, 0x9CA1528643DB65EBuL, 0x038619D2C7B7AD9BuL), (+1, -33, 0xE69171965561AB2DuL, 0xC4CADA872E2E49D5uL)),
                ((+1, -39, 0xCCCA6732A71884A6uL, 0x6EE973CF1D2C64E4uL), (+1, -42, 0xDC1E6AB7FDC1E294uL, 0x6064187B62AADFB5uL)),
        });

        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((-1, -1, 0x93C467E37DB0C7A4uL, 0xD1BE3F810152CB56uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -7, 0xE2A2276E4ED2636EuL, 0x7C98B59F3B96D073uL), (+1, 1, 0xB7EB5362DBD152F5uL, 0xAA4528106A5F3EDAuL)),
                ((+1, 0, 0xCABD88B932696C61uL, 0x6BDE16D253413F52uL), (+1, 1, 0xD73A77EF927B4377uL, 0xCB996AA0D15C1359uL)),
                ((+1, 0, 0xF578972D1742AB97uL, 0xA0EE9F59CDDB6D42uL), (+1, 1, 0x89B5B875E3225FACuL, 0x6EB63945E426DA96uL)),
                ((+1, 0, 0x8A8A2CDCD842ED4DuL, 0xB74F6DFE798A49DCuL), (+1, -1, 0xD871900CB04F595CuL, 0xC22B0D9C6466F884uL)),
                ((+1, -2, 0xB6C7E4493A0C2E94uL, 0x6877153BB1078909uL), (+1, -3, 0xDCF976B17303ECF3uL, 0xA4210B96FF062295uL)),
                ((+1, -4, 0x986719F27474EAF4uL, 0xC9E3C71FD241FC47uL), (+1, -5, 0x9657C2284570C3CFuL, 0x3D89484DE10F3853uL)),
                ((+1, -7, 0xA54D2F4A9DED543DuL, 0xB3956AD044E678BEuL), (+1, -8, 0x8905E3CA20B87574uL, 0x9F07A0D78D431DA0uL)),
                ((+1, -11, 0xE9547DFE800E3AD9uL, 0xC632318D81DE2122uL), (+1, -12, 0xA52128DF137E68E6uL, 0xD6B8D80B3D9ADEF2uL)),
                ((+1, -15, 0xD13E094F13B785C1uL, 0x9B08C74AD416068FuL), (+1, -17, 0xFE7B9A4DEF1CB259uL, 0xBA8DF7F256951DEDuL)),
                ((+1, -20, 0xE200B4CFB9F03A31uL, 0xB570B8C190047C1DuL), (+1, -22, 0xEBA0C5CDF31506C8uL, 0x13BC17BAD207DEA7uL)),
                ((+1, -25, 0x84EACEAC32D4F943uL, 0xE1B4D60185E9149BuL), (+1, -28, 0xEA5D5EBF987A4CBCuL, 0xB3E2F7382A317709uL)),
                ((+1, -32, 0x8B9950DE85700503uL, 0xB136D10DE12D6165uL), (+1, -35, 0xC8EF6ABE7B40E03CuL, 0xC7ADC48C15DFB2F0uL)),
                ((+1, -41, 0xA04E90FAE2AF920CuL, 0xDA3B6CF77ABC4C9CuL), (+1, -44, 0xA97E72839B9525ADuL, 0x2497114B291087CAuL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -2, 0xD8773039049E70B6uL, 0x5C8380FDFD5A6952uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xB81C7AD4255FF706uL, 0x4BC2674E2E2DC8C7uL), (+1, 0, 0xF0375F6F3C709682uL, 0x9355B63E8CFFC98AuL)),
                ((+1, 0, 0xD1F0201652CB3F9DuL, 0xA60CDDD7550E53A3uL), (+1, 0, 0xBF4C2AC29853EDD7uL, 0xD23C01552197C0E4uL)),
                ((+1, -1, 0xF2E2FA959FF757C0uL, 0x296C7E47FC177B2FuL), (+1, -1, 0xAAA045B500505535uL, 0x897F292233572583uL)),
                ((+1, -2, 0xA5A257450B327118uL, 0x651462F9A0E2B109uL), (+1, -3, 0xBD102371B6F6D49BuL, 0x6FDF42027A692577uL)),
                ((+1, -4, 0x8E669CF62B0B415DuL, 0x01F2240865FFB99FuL), (+1, -5, 0x8829E3832A0AA2A4uL, 0xD57CC2A5910F098EuL)),
                ((+1, -7, 0x9E9E0F3C5AC4C50FuL, 0x50257F6E2C5CCC0BuL), (+1, -8, 0x816306FE5692039BuL, 0x54BBBBC7EE823B0CuL)),
                ((+1, -11, 0xE51E129E0E6FE461uL, 0xC61E47C0EB0E126DuL), (+1, -12, 0xA0FE92F90AF4A43CuL, 0x588FFF119786C1E3uL)),
                ((+1, -15, 0xD1AE784A263D91EAuL, 0x1401FEDC8DF628F5uL), (+1, -17, 0xFE87B782D405620DuL, 0x6DF0C9768EF9A102uL)),
                ((+1, -20, 0xE6AC7C3DF5A77404uL, 0xBA59D619DF6EE463uL), (+1, -22, 0xF0BC39BF55F5586BuL, 0x1A2F19FF68FFE55CuL)),
                ((+1, -25, 0x8A016632B396E9E9uL, 0x83BE9E1E876FC338uL), (+1, -28, 0xF3E81868B3AC7056uL, 0x0F58617D6E6A2D96uL)),
                ((+1, -32, 0x935AD77C66AA92EAuL, 0x36265685C44FF733uL), (+1, -35, 0xD4A82EA237D46563uL, 0x97A417B9C33C6C24uL)),
                ((+1, -41, 0xAC09BEF3863F1496uL, 0xD6558AA81557A03DuL), (+1, -44, 0xB6480A6CEADD2D42uL, 0xEFCB3E07D2E33CF4uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -1, 0xEC3B981C824F385BuL, 0x2E41C07EFEAD34A9uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xD5E83FCD44111A39uL, 0x41714D3E695C0371uL), (+1, 0, 0xB10655C923808F1CuL, 0xCDE85623DC910B1CuL)),
                ((+1, 0, 0x9C3E2AF48B430F0DuL, 0x735ED7F48B4FB70EuL), (+1, -1, 0xD07BFB249EF6E77AuL, 0x44A1EA29F557BE86uL)),
                ((+1, -2, 0xF6D735D14B70BAE1uL, 0x3308A360C1CF88C4uL), (+1, -2, 0x892BFA667D6FB6F8uL, 0x8B92EFDA86288924uL)),
                ((+1, -4, 0xEB3D404BA64937DCuL, 0x49249B86786377DFuL), (+1, -5, 0xDE40E8317F432BBAuL, 0xE28BB3B61B9265FBuL)),
                ((+1, -6, 0x8D8619FD346D4C1BuL, 0xB464F3E9D7C2F810uL), (+1, -8, 0xE626AE9722E0ECA5uL, 0xF1956250F8119AFBuL)),
                ((+1, -10, 0xD93E6FB5056B1BF2uL, 0x83A59FA08FE53190uL), (+1, -11, 0x98F5E25C6EB6CFABuL, 0x66E0E536BE4DF3FDuL)),
                ((+1, -14, 0xD105A7FF879FCE56uL, 0xCF1E838CB1AC8726uL), (+1, -16, 0xFEFB290C540BD2C2uL, 0x51190924FB8D34FDuL)),
                ((+1, -19, 0xF00A460FA4DA1B1CuL, 0x16C49872B2DE5A11uL), (+1, -21, 0xFC14ADEF889CDBD4uL, 0x2379B06F0D87AD1AuL)),
                ((+1, -24, 0x953B703C4CAD29B8uL, 0xB1267D101877074DuL), (+1, -26, 0x84BB0C0366923F73uL, 0xA5A1331B9B009FBCuL)),
                ((+1, -31, 0xA528FEF9DF9A9A12uL, 0x4595A6F14E994EEFuL), (+1, -34, 0xEFC0C336DC933856uL, 0x5ABE7237606B9DFFuL)),
                ((+1, -40, 0xC7B7BA2251F92718uL, 0xFDF740DE7EFF7062uL), (+1, -43, 0xD48D595E152E62DDuL, 0xD5C4EB23009AF338uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xA0C876B8EBD246D8uL, 0x41CB8AEA2A0144FFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xCEB7949D38FC26FAuL, 0x707636B7E5140F24uL), (+1, 0, 0x87A576FEBB5188ABuL, 0x775E6126F8FE2999uL)),
                ((+1, -1, 0xDB4903FB0ADBECA3uL, 0xFE5C7AA7A01D93D6uL), (+1, -2, 0xF2DC809BDBE6AAE9uL, 0x389BF968629493B1uL)),
                ((+1, -3, 0xFCA84F27299B4486uL, 0xD13FDC1B83AEA002uL), (+1, -4, 0xEFBCEF54C765659CuL, 0x71E6D6625CFF5FDDuL)),
                ((+1, -5, 0xAE1411BF1B60DE5CuL, 0xAA753BFE4A8A15A7uL), (+1, -6, 0x8ECD9660A07668BEuL, 0xDC6945B18DD61AEAuL)),
                ((+1, -8, 0x94355F5CBB2391DEuL, 0xF5C8E3D159DF2F51uL), (+1, -10, 0xD310A3FD73D81DC4uL, 0x43F451B606809E1DuL)),
                ((+1, -12, 0x9B096C44C7383305uL, 0x20B04BF5DDDC6055uL), (+1, -14, 0xBF712A36E99CBC24uL, 0xDC07A7EDC5D4E7F8uL)),
                ((+1, -17, 0xBF139AEE214157F4uL, 0xF77A3C1C484647BAuL), (+1, -19, 0xCB18657F390B0F7BuL, 0x65F5FA984ACA3A7DuL)),
                ((+1, -23, 0xFCE29FFAD937CB5BuL, 0x721E05E112F724E2uL), (+1, -25, 0xE3716F8D2363E974uL, 0x0D866BB5E5785670uL)),
                ((+1, -29, 0x9440CD7963892C77uL, 0x719C59FC17AD022DuL), (+1, -32, 0xD9467A0F20C8E8AAuL, 0xAC3E12F2110E11C1uL)),
                ((+1, -38, 0xBD9E4BED82F013D6uL, 0xD0BF6CC37F1B9AE0uL), (+1, -41, 0xCB3EE5F4A8ECF8FCuL, 0xCD9DFA14B56D3988uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xC0C876B8EBD246D8uL, 0x41CB8AEA2A0144FFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xC7FDFBAA02EF7C4AuL, 0xE35114577F4B6C72uL), (+1, -1, 0xE3F43A2BF1375377uL, 0xC83AC8D2282ADAACuL)),
                ((+1, -1, 0xADC5646F602B1240uL, 0x2E4410905E39A9F5uL), (+1, -2, 0xAC0D1CF874890C7CuL, 0x3C2810FFBD52BAECuL)),
                ((+1, -3, 0xA5BB2E9A4B41619FuL, 0xD97016B461D41551uL), (+1, -4, 0x8FA0A99685351ECEuL, 0xA9EFDEC81795F5B9uL)),
                ((+1, -6, 0xBE8133B0A0D809B8uL, 0x4314024DA821B895uL), (+1, -7, 0x9115551E0A15E9A7uL, 0xAF2984CFD1936B45uL)),
                ((+1, -9, 0x8816A65CD5664A86uL, 0x83F4F6B481AB9494uL), (+1, -11, 0xB63C7C9EB6DB971AuL, 0x92B0362B288C8CA8uL)),
                ((+1, -14, 0xEFF3ED6C3B0B4E45uL, 0x4956E38784B3FDFFuL), (+1, -15, 0x8CBEAA6F39C77197uL, 0x0F813878B694DCDEuL)),
                ((+1, -19, 0xFA11ECC4F01A4AFDuL, 0xDA739CC9F6FDD2A7uL), (+1, -21, 0xFEADC23236B06520uL, 0x08DC520F47425622uL)),
                ((+1, -24, 0x8C43E3BDBE1B4131uL, 0x473EBDF2181F04C0uL), (+1, -27, 0xF38C34B537BEDAE4uL, 0x8B730A517F3482E5uL)),
                ((+1, -31, 0x8B992863FAE2C76AuL, 0x9F9743D8FEEE79B0uL), (+1, -34, 0xC6DCFCD962063ADFuL, 0x655B4572768F4CFAuL)),
                ((+1, -40, 0x978A63D19C13AA37uL, 0x1452F6EDFDF64D31uL), (+1, -43, 0x9F1AAA7228624EBBuL, 0xA74FC075239164DCuL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xDA621052856BE071uL, 0xDB652483C39ADE98uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xB16B78A9CCAB0EA2uL, 0xC1B2A626F92B2697uL), (+1, -1, 0xB4C6073399D0A16FuL, 0x74FE444EB6068ED1uL)),
                ((+1, -2, 0xEEB254638876C9DEuL, 0x4E6C08D907AC6027uL), (+1, -3, 0xD4CDB82DC3FD6B58uL, 0x9B512A59BDB61EC6uL)),
                ((+1, -4, 0xACFFAF47B3160B12uL, 0xC1C57B3BAE346207uL), (+1, -5, 0x8764EC9E7CB40067uL, 0x924935A78C196AFFuL)),
                ((+1, -7, 0x92F114666B40E016uL, 0x45CDDCCD854A2386uL), (+1, -9, 0xC9E51B983AFC8D8FuL, 0x7AC3B7652FD14F1AuL)),
                ((+1, -11, 0x94C0E78432B91EA2uL, 0xE1526595A156B004uL), (+1, -13, 0xB2B22055C2E8ED8DuL, 0xC2F5EDAE6FC1542DuL)),
                ((+1, -16, 0xAE2C7E7FDFCA5F8BuL, 0x31371284177C935FuL), (+1, -18, 0xB539479F4027E142uL, 0xF4BC4C9652F149F6uL)),
                ((+1, -22, 0xD88DA1EBA61E74B7uL, 0x37162085C40326FCuL), (+1, -24, 0xBF8FA87FACB54BFCuL, 0xC3722744B1DBE126uL)),
                ((+1, -29, 0xED02E22F307D663BuL, 0x4F0A634239F06598uL), (+1, -31, 0xAB78BC51A2E6B3C4uL, 0x631346D100D9F908uL)),
                ((+1, -37, 0x8D1073FDCFACDE3EuL, 0xACF83B754429C43EuL), (+1, -40, 0x95D39B41F8F56D65uL, 0x53792B7088BA2D19uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX7Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xEFB765A7DAC135C7uL, 0x30BA79D918F033EEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xA78AF55BB4204B8FuL, 0x1F863AC74FEE48E1uL), (+1, -1, 0x9DEF5706040F3785uL, 0x746C38A1DED6EC4CuL)),
                ((+1, -2, 0xC2BD598974244900uL, 0x3B64A086D5424911uL), (+1, -3, 0xA29B2EE30362D141uL, 0xE089F901A312DB44uL)),
                ((+1, -5, 0xF4AD50F2BED36928uL, 0xAE5E442037A78FA3uL), (+1, -6, 0xB52562C525770624uL, 0xA720BED62B5A49D7uL)),
                ((+1, -8, 0xB49ACA1734B714F1uL, 0x9B158737196851E8uL), (+1, -10, 0xECAFDCA0FECC92BFuL, 0xA0A17157AD1BD034uL)),
                ((+1, -12, 0x9F35491A133B9EA3uL, 0x9DCF1309C6E7C09FuL), (+1, -14, 0xB7B409FC680C936DuL, 0x07DC9883CC899D92uL)),
                ((+1, -17, 0xA294E1659C5DD581uL, 0x5C22570E4285318BuL), (+1, -19, 0xA37A51A3D92BB64EuL, 0x868C5E3F6BBF847AuL)),
                ((+1, -23, 0xB07E13217A3C7698uL, 0x91A72674F2D9A372uL), (+1, -25, 0x97B78C177893F1BEuL, 0x90B000778798EAF7uL)),
                ((+1, -30, 0xA8C15BAC2FEC32F2uL, 0x22D86152366B1C4CuL), (+1, -33, 0xEE93C10BB6073858uL, 0xE54F09B56171A8B4uL)),
                ((+1, -39, 0xAF6AC48CCBA9DD4AuL, 0xD82441DBCB8A7E77uL), (+1, -42, 0xB72BEA6070D51E64uL, 0x584E69989E38CF86uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x8100451D11F2E408uL, 0x2AA6617ED59CAC40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x9E2EBB05AD0D26C9uL, 0x0B076D0540DD36B4uL), (+1, -1, 0x8C0BB5C20AF5C432uL, 0x7AE5ECE38456F408uL)),
                ((+1, -2, 0xA1B4306949306C11uL, 0xEA7EFEA04446C6EAuL), (+1, -4, 0xFFE33902A70B956EuL, 0x43ED1CF3929AAB9CuL)),
                ((+1, -5, 0xB30EAC9ACB6D60E3uL, 0xAED8DF19AF88A97EuL), (+1, -7, 0xFD1B4F8EB11E75CFuL, 0x522C68BDB5D1B4DAuL)),
                ((+1, -9, 0xE95A4EA4BA903CBFuL, 0xFACA80C227E066C7uL), (+1, -10, 0x92E6DA6D8118EFCDuL, 0x3F1DF45AD08FB418uL)),
                ((+1, -13, 0xB5D600026AD35804uL, 0xDD2E3B4560EC0871uL), (+1, -15, 0xCAAFDB25D9A62E7FuL, 0x95A25D382C2C3544uL)),
                ((+1, -18, 0xA44EFD2AC4FE97EEuL, 0x21FB9CAFC7454960uL), (+1, -20, 0xA06490140993922EuL, 0x4481DF2D0607A24FuL)),
                ((+1, -24, 0x9DF171B4BB23FE55uL, 0x78AB043C7E66AC45uL), (+1, -26, 0x846A964AAFA6B294uL, 0x93ADEC6AC84E44C1uL)),
                ((+1, -31, 0x85C5117CD7FE397AuL, 0xF00E0C57EE67ED54uL), (+1, -34, 0xB94A8C3E723E91EAuL, 0xD6011A455004E173uL)),
                ((+1, -41, 0xF6353A797ED58EC3uL, 0x1EACAD4194D92243uL), (+1, -44, 0xFD3F0B1F68391DF1uL, 0xEF33881A9055B770uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX9Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x8900451D11F2E408uL, 0x2AA6617ED59CAC40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x8834CFC577C7F861uL, 0xCE20FABA16A7718CuL), (+1, -2, 0xE26887535014A552uL, 0xF3A4FCCF98976E4EuL)),
                ((+1, -3, 0xDCF061F33CBC47E0uL, 0x45E232CCA985EF63uL), (+1, -4, 0xA34E54D9DD6729FBuL, 0xB2D39B6793AF14CEuL)),
                ((+1, -6, 0xBC58EA270FF52A4AuL, 0xDD5C94E733F4D812uL), (+1, -8, 0xF6F0E24605BD565BuL, 0x99DD998C66550A39uL)),
                ((+1, -10, 0xB4FB5D4129617186uL, 0xD0AADBC019A2E1B2uL), (+1, -12, 0xD130B63FBA839946uL, 0xC26BF32D5D147081uL)),
                ((+1, -15, 0xC2CEFCF8940FCB3BuL, 0x7C7CF641ED1BC313uL), (+1, -17, 0xC45CA5D53E27A4AAuL, 0x7A20AD84F8B742D5uL)),
                ((+1, -21, 0xDA79807397A011BDuL, 0x68466422693162E9uL), (+1, -23, 0xBC4EF5402E49D882uL, 0xAA6F13E78E193FEFuL)),
                ((+1, -28, 0xD55C70D3A942D656uL, 0x3F4B6C4EBB81490BuL), (+1, -30, 0x97328B528EE2AE36uL, 0x60F97BBD4605DCF2uL)),
                ((+1, -37, 0xE16A1F29E8B0585BuL, 0xADAE07A757152862uL), (+1, -40, 0xEBD6BC53ACAD7E97uL, 0x907B87D45A554E97uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX10Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x901CB6E42E64AB24uL, 0x9C6D7DF09CB91E07uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x80BCF3EB317F2E5FuL, 0x116739FF3894FCE6uL), (+1, -2, 0xCCC6EBE954C359DEuL, 0x2029293898C29ABCuL)),
                ((+1, -3, 0xBBDD76C0CE02182AuL, 0x4A49E45B42275734uL), (+1, -4, 0x85A1625B04D97E31uL, 0xF02FC71F03B4A8C5uL)),
                ((+1, -6, 0x9038485BC509DFA3uL, 0x04709AEE4224420BuL), (+1, -8, 0xB6DD045EA16343EAuL, 0xA17CFD5EC46BCE7FuL)),
                ((+1, -11, 0xF9C891EB771043DEuL, 0x6CFB3E5AC22BC6D6uL), (+1, -12, 0x8C387A6EB844CD94uL, 0xC86F47618D5E774FuL)),
                ((+1, -16, 0xF2745B4AAC10AD9DuL, 0xE7C82056F0FF491DuL), (+1, -18, 0xEE563D5D87A579B8uL, 0x141235E5E7DC38E0uL)),
                ((+1, -22, 0xF54BE79F20322178uL, 0x22A14577ECD132B3uL), (+1, -24, 0xCEFA66D61617D659uL, 0x2692B08CA1A11DBFuL)),
                ((+1, -29, 0xD822B3A71996B567uL, 0x43AB8C070711F592uL), (+1, -31, 0x96856186E7799342uL, 0xE2FFBC9A11A3F0E2uL)),
                ((+1, -38, 0xCDE8B36F46AA2598uL, 0x34153EDAA556F8F2uL), (+1, -41, 0xD4AEF3C83D73165CuL, 0x42EBDAFE82567633uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX11Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x96831D4A94CB118BuL, 0x02D3E457031F846DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xF408DF1DC5817B3DuL, 0x2AE97ADB91B76669uL), (+1, -2, 0xBAD0CD3A2634B9A2uL, 0xA919CD3123638E87uL)),
                ((+1, -3, 0xA1BA3C473B8F552EuL, 0xF853AC705B9CE158uL), (+1, -5, 0xDE7A9E76AE7CF59EuL, 0x108179EEBDE65C28uL)),
                ((+1, -7, 0xE1B25E3C965BC281uL, 0x4C8618ADE659B0F5uL), (+1, -8, 0x8AED3E0B4064470BuL, 0x67DEB2E786785433uL)),
                ((+1, -11, 0xB1C06C4FC4A7831AuL, 0xB9FB8934F29C577FuL), (+1, -13, 0xC27BE9E43EAE0A68uL, 0x8A5B4935B1929EDAuL)),
                ((+1, -16, 0x9CFB252FF3820651uL, 0x5E19DB119C516AA0uL), (+1, -18, 0x96E63F03F5B0D9DFuL, 0x9C9A9E71B94FFE7DuL)),
                ((+1, -22, 0x908ACF52E1D22C6CuL, 0x844D070090E99ACDuL), (+1, -25, 0xEF50A041A03D90ECuL, 0x1A4527A2D2A61BFCuL)),
                ((+1, -30, 0xE7D3AD919A038B12uL, 0x0E7C87C715AA6D97uL), (+1, -32, 0x9EEF6AF8328FFBCCuL, 0x135E1C9C16AFFDF2uL)),
                ((+1, -39, 0xC8E6437B7B5B403CuL, 0x5261DF517717EE3AuL), (+1, -42, 0xCD1C1E753135B1DEuL, 0xDDBBAAD2190099C0uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x9C5491A7AC10E2FFuL, 0x5FEB2A28777C9BB3uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xE7EC6EB8B8AB46D0uL, 0x94D971BF427C232BuL), (+1, -2, 0xABADC9B3681FFC04uL, 0xF1B863EC0F295476uL)),
                ((+1, -3, 0x8CBA4B61875E2BE4uL, 0x2EBA0A47CCF0857AuL), (+1, -5, 0xBBEA596B98F2A6B3uL, 0x1CEB5585B59296B1uL)),
                ((+1, -7, 0xB3E8C22CD7C285D7uL, 0xC9BD5A6686556AC0uL), (+1, -9, 0xD7BC3E6F5BFFD8EBuL, 0x34382C420D1D4237uL)),
                ((+1, -11, 0x81DACE45F74236A1uL, 0xD0EC70C37321E342uL), (+1, -13, 0x8AD42A561EF789B0uL, 0x19D6ED5DEE129D7EuL)),
                ((+1, -17, 0xD244C560DB1BE8E5uL, 0x5CFE0C9D4CEA707DuL), (+1, -19, 0xC61661B419F8B726uL, 0x77E5607D2F7FD412uL)),
                ((+1, -23, 0xB1862F7B5E2594E6uL, 0x8525434196557E63uL), (+1, -25, 0x9071F03046F7D9A6uL, 0x86AAF4C59FB42070uL)),
                ((+1, -30, 0x8288F41772F3545AuL, 0x4A67FB0669CE7865uL), (+1, -33, 0xB07339EC9365FB11uL, 0xED410793002D5A3CuL)),
                ((+1, -40, 0xCF5546841B171E1BuL, 0xB5ABC9913E2D7D6BuL), (+1, -43, 0xD171B2524CEE15CDuL, 0xFB1F7FB22730AE68uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX13Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xA1A9E6FD01663854uL, 0xB5407F7DCCD1F108uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xDCFB796B698BC063uL, 0xC440AFD51D6B3E48uL), (+1, -2, 0x9EC281A462F1DF3DuL, 0xD2439BB288F1B63BuL)),
                ((+1, -4, 0xF7379E17C9E0F067uL, 0xC6CAC5E139E2C68BuL), (+1, -5, 0xA0B760B670E387F1uL, 0x33103A7D6F43FAACuL)),
                ((+1, -7, 0x91BB50B15836DC13uL, 0x2B5B0DDBD93E3F2EuL), (+1, -9, 0xAAA9CAADD32F84C5uL, 0x7BC888D9371376B3uL)),
                ((+1, -12, 0xC2120130C49C9C28uL, 0x85E799C23975FA3DuL), (+1, -14, 0xCB2FA21CCA1547BDuL, 0x8F576477905F8819uL)),
                ((+1, -17, 0x90FBCF8D5A311CBEuL, 0x5ED56F485D4B76EFuL), (+1, -19, 0x861B2CDFC678EBFEuL, 0xC28A0B2E8FF9E19EuL)),
                ((+1, -24, 0xE1EC6142329D753DuL, 0x38C8C84CA09098AEuL), (+1, -26, 0xB4F47AAC16CF4EC2uL, 0xC0ECBDEF05CFC5AFuL)),
                ((+1, -31, 0x994C931E881AA992uL, 0x083A05901637DE9CuL), (+1, -34, 0xCC8970FA4D70FB5FuL, 0x5E9E6F506595F202uL)),
                ((+1, -41, 0xE0938ABA86DE383FuL, 0xACD59D7AF26D2E9DuL), (+1, -44, 0xE0A9DE64A02F234DuL, 0xB75B1E1F081AD47EuL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX14Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xA69635C1EDB4FD41uL, 0x04056BCC91BE3FCDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xD310A8A2548F0AF7uL, 0x6D46BDF0D8CC603EuL), (+1, -2, 0x939CA18C5A562654uL, 0x3CF59ED7D1B924E8uL)),
                ((+1, -4, 0xDAF1BE0A542BC221uL, 0x097472733B87A2ECuL), (+1, -5, 0x8AF3549B3FAA1AC2uL, 0x95B629AD6C73C7EBuL)),
                ((+1, -8, 0xEF6CFADF7807C1C6uL, 0x8457AC9CFB990305uL), (+1, -9, 0x8936A13058DA4E92uL, 0x81AFD5B18E955DF6uL)),
                ((+1, -12, 0x93E7E4ABA24BDCF8uL, 0x1769FAB2C4266369uL), (+1, -14, 0x97EDE8B11AA9ED76uL, 0xCEF734DB5ECDF8DBuL)),
                ((+1, -18, 0xCD10A488847EB1BDuL, 0xFC5BD5045FAEF33BuL), (+1, -20, 0xBA87DF07C64F43F8uL, 0x78D088B564BACC48uL)),
                ((+1, -24, 0x94458267DB5D1409uL, 0x76181C1C4D5E092DuL), (+1, -27, 0xEA1D255D9E206646uL, 0xC5A7145ECC8086ECuL)),
                ((+1, -32, 0xBAB840BD25C70506uL, 0xBC43BF8B1C7795E3uL), (+1, -35, 0xF6281E4806BDC2DFuL, 0x9D4E96F8A70EA5D3uL)),
                ((+1, -42, 0xFDB32BCD9F45860FuL, 0x17821B28D2CE1A87uL), (+1, -45, 0xFB86A674F69607A8uL, 0xAB66F497A07A0E01uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX15Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xAB287EE67FFE21D3uL, 0x4D29FE15B65088F2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xCA0B2D92F587F693uL, 0x0C20EBE2413913EDuL), (+1, -2, 0x89E642E450C33EBFuL, 0x5209D295839C5D8CuL)),
                ((+1, -4, 0xC353FD5A60FC2B0AuL, 0xC738470FFD43CC38uL), (+1, -6, 0xF28D1E0FE35AB165uL, 0xE430C688DD4C3063uL)),
                ((+1, -8, 0xC71E49E9BBB2FAA7uL, 0x05A28892953BF6C4uL), (+1, -10, 0xDFCA4B28C8F99F6CuL, 0x360B46C2C6673456uL)),
                ((+1, -13, 0xE5606FD2980BDD90uL, 0x61876F0F59BEDC16uL), (+1, -15, 0xE788C2B47D26D742uL, 0x356224366A702362uL)),
                ((+1, -18, 0x94473FE1230491BBuL, 0xB5E9EE2568BFE476uL), (+1, -20, 0x84D0CFCA959FD61DuL, 0x3B19BAC473432A66uL)),
                ((+1, -25, 0xC7F6939943B4EB9DuL, 0x8F991405D0C9776AuL), (+1, -27, 0x9BC72C67150F824FuL, 0x54D6DAD411A950F3uL)),
                ((+1, -33, 0xEAD01FE19337CE1DuL, 0xDC8FD19B0B141689uL), (+1, -35, 0x99124D481BF42B2BuL, 0x4641FAAE32CC80C6uL)),
                ((+1, -42, 0x94AE0DB1B918049AuL, 0x19F404FEA80ADC2FuL), (+1, -45, 0x922E55D9491E34CDuL, 0xFF86D630785789F4uL)),
        });
        public static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX16Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xAF6CC32AC4426617uL, 0x916E4259FA94CD36uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xAC5E183FD300CB9EuL, 0xB043DD7EE0359477uL), (+1, -3, 0xE371CF4ADBF2C47EuL, 0xA0A6E07044E7ABA8uL)),
                ((+1, -4, 0x8699BBB2F8C110ACuL, 0x14A035E224900B73uL), (+1, -6, 0x9FD3451CFC4050F7uL, 0x7CCF3AB891583A7CuL)),
                ((+1, -9, 0xD464DBF53CFC4EB4uL, 0x300A0BA2D70CDC13uL), (+1, -11, 0xE13B5CEEC4357B37uL, 0xF03ECA57BDF4F7F2uL)),
                ((+1, -14, 0xB18E3567011E54B4uL, 0xFA98E96B6844A96BuL), (+1, -16, 0xA625B70CDC402899uL, 0x7BEC8D9431AEDF71uL)),
                ((+1, -20, 0x95E65E40CB113F7DuL, 0xFDE4293535DBA698uL), (+1, -23, 0xF297415CF5D40FBEuL, 0x2CC4809CD1A6D0A1uL)),
                ((+1, -28, 0xD88E18079A73C8B1uL, 0x6E67B87E1189CB47uL), (+1, -30, 0x91B7146C903D08A3uL, 0x6E5E4B15684B935CuL)),
                ((+1, -37, 0xA79702D41AB1D022uL, 0x21C82B67D057DF90uL), (+1, -40, 0xA8BE95226E1174FEuL, 0x3FCC2A662D60916AuL)),
        });
    }
}
