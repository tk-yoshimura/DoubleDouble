using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class DigammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(SterlingTable), SterlingTable },
                { nameof(PadeZeroPointTable), PadeZeroPointTable },
                { nameof(PadeX0p5Table), PadeX0p5Table },
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX5Table), PadeX5Table },
                { nameof(PadeX6Table), PadeX6Table },
                { nameof(PadeX7Table), PadeX7Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX9Table), PadeX9Table },
                { nameof(PadeX10Table), PadeX10Table },
                { nameof(PadeX11Table), PadeX11Table },
                { nameof(PadeX12Table), PadeX12Table },
                { nameof(PadeX13Table), PadeX13Table },
                { nameof(PadeX14Table), PadeX14Table },
                { nameof(PadeX15Table), PadeX15Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode s, Hexcode r)> SterlingTable
            = new(new (Hexcode s, Hexcode r)[]{
                ((+1, -4, 0xAAAAAAAAAAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, -4, 0xCCCCCCCCCCCCCCCCuL, 0xCCCCCCCCCCCCCCCCuL)),
                ((+1, -8, 0x8208208208208208uL, 0x2082082082082082uL),  (+1, 0, 0x8666666666666666uL, 0x6666666666666666uL)),
                ((+1, -8, 0xF83E0F83E0F83E0FuL, 0x83E0F83E0F83E0F8uL),  (+1, 1, 0xB231231231231231uL, 0x2312312312312312uL)),
                ((+1, -4, 0xAAAAAAAAAAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, 2, 0xAA36363636363636uL, 0x3636363636363636uL)),
                ((+1, 1, 0xC373FCDCFF373FCDuL, 0xCFF373FCDCFF373FuL),   (+1, 3, 0x8A9B6331EAB8DA7EuL, 0xFDB2ACC2FD4737B6uL)),
                ((+1, 8, 0x8CBAE6076B981DAEuL, 0x6076B981DAE6076BuL),   (+1, 3, 0xCD12F438911D0D30uL, 0x5CCEF88EB6F5D78FuL)),
                ((+1, 15, 0xD62B955555555555uL, 0x5555555555555555uL),  (+1, 4, 0x8E4143C38A48A430uL, 0xA097076AD0A5339CuL)),
                ((+1, 24, 0x98FD6BE5F9DFFE17uL, 0xE77FF85F9DFFE17EuL),  (+1, 4, 0xBC751842CF4E9497uL, 0x70E668923E28A49CuL)),
                ((+1, 33, 0xBC4976FEFAAAAAAAuL, 0xAAAAAAAAAAAAAAAAuL),  (+1, 4, 0xF124F8842E1C48A0uL, 0xD06011ECEFE36DB1uL)),
                ((+1, 43, 0xBB012610AE915555uL, 0x5555555555555555uL),  (+1, 5, 0x9628724E1B92443AuL, 0x6840275F06887788uL)),
                ((+1, 54, 0x8E651CDBBD813979uL, 0xE958D7E43E7A5635uL),  (+1, 5, 0xB6FC6E4651367267uL, 0x0F2944F9F6122852uL)),
                ((+1, 65, 0x9F8658358BF14630uL, 0x9C07432D63DBB01DuL),  (+1, 5, 0xDB0E702AC9B318AAuL, 0xC812A8F246FAF8F4uL)),
                ((+1, 76, 0xFE23A5EEA9E101EAuL, 0x44D3364D9364D936uL),  (+1, 6, 0x812F3BFDC335A2BAuL, 0xBF33D1C77579DA39uL)),
                ((+1, 89, 0x8BE36E94549BC383uL, 0x3183A1C126A99EFFuL),  (+1, 6, 0x967642DC43BD1134uL, 0x32FDF1146F4122ACuL)),
                ((+1, 101, 0xCFBD9FD1BF989F60uL, 0xE2608D3CA7BC05C9uL), (+1, 6, 0xAD5C4CB0E670DCD6uL, 0x7D262473FFCAA985uL)),
                ((+1, 114, 0xCBC91757DAE8B62EuL, 0x38D01E72BE6542AAuL), (+1, 6, 0xC5E1597BAB5118EFuL, 0x82DA12535E50F793uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeZeroPointTable
            = new(new (Hexcode c, Hexcode d)[] {
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xF7B95E4771C55D8FuL, 0x0C28D0814E530F17uL), (+1, 1, 0x9071B2D69DC0C3C5uL, 0x9F1956AD31ECC033uL)),
                ((+1, 0, 0xDEE01F29692F76D6uL, 0x6B7DC54DA815009AuL), (+1, 1, 0x87C79215E6AABFBBuL, 0x8C07BF62FB1CFBFBuL)),
                ((+1, 0, 0xA7F589A732A26FDAuL, 0xAADFD0D5B7829EF2uL), (+1, 0, 0x8CF11214C0E98B1EuL, 0x94C19DF4EF8B1B2BuL)),
                ((+1, -1, 0x8BAF06C88EE26684uL, 0x6F0A367E1E932CB3uL), (+1, -2, 0xB3C32DA20CB8DDBFuL, 0xDD495E41E74E8972uL)),
                ((+1, -3, 0x8DC74E46C61290F3uL, 0x320A4CAF7E215551uL), (+1, -4, 0x93BE92DF360B81C9uL, 0x00C84BF104C9D3FEuL)),
                ((+1, -6, 0xB6EE02E8CF8F1F96uL, 0x473F50C25741A45BuL), (+1, -7, 0x9F20EC93C4F9AD6EuL, 0x8E4CF2E00D938B99uL)),
                ((+1, -9, 0x9729B0D37891FE91uL, 0xD14B7195D53E2011uL), (+1, -11, 0xDF3B07180A8882EDuL, 0x2F32D598CE21F557uL)),
                ((+1, -13, 0x9CF468E9085D6538uL, 0x488AB57A2B1AA35EuL), (+1, -15, 0xC61E1DCD49F325EFuL, 0x899DE438F0B34636uL)),
                ((+1, -18, 0xC2C1C50C1B406BF0uL, 0x8260B09D78069CB5uL), (+1, -20, 0xD1B4816959A7FF60uL, 0x8D2223206E8568A1uL)),
                ((+1, -23, 0x82E5CF3CBAC816CDuL, 0x63919B5C3D7EB911uL), (+1, -26, 0xED39CE5979999283uL, 0x616C1B47DA13DA38uL)),
                ((+1, -30, 0x9CA1528643DB65EBuL, 0x038619D2C7B7AD9BuL), (+1, -33, 0xE69171965561AB2DuL, 0xC4CADA872E2E49D5uL)),
                ((+1, -39, 0xCCCA6732A71884A6uL, 0x6EE973CF1D2C64E4uL), (+1, -42, 0xDC1E6AB7FDC1E294uL, 0x6064187B62AADFB5uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0p5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((-1, 0, 0xFB544BE990A7DD7EuL, 0x32C2D358849C5C5AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 1, 0xA6C76A514225F6B2uL, 0xE8D50E0012603E09uL), (+1, 1, 0xF5C99C7B533073B7uL, 0xD7E4F780BE552818uL)),
                ((+1, -1, 0xBB76615FE4164D30uL, 0x5BD347EE52B65466uL), (+1, 2, 0x9FCC04B4EC7FAC89uL, 0xDD56324D635E4B64uL)),
                ((+1, 1, 0x9EF058CD90779264uL, 0x46B75BABF38D0FF3uL), (+1, 1, 0xC6267011ADE75B73uL, 0x381D6C58B08B2533uL)),
                ((+1, 0, 0xB7FD173A1ABCE03DuL, 0x6CE1060528D71600uL), (+1, 0, 0x841DD1C61D204E29uL, 0x30E7C1831CDE61FAuL)),
                ((+1, -2, 0xC234C5780C3791BDuL, 0xBF63D5DC477AA526uL), (+1, -3, 0xC45E7486E6871A8FuL, 0x266D23FD43A2D3BCuL)),
                ((+1, -5, 0xD022AA8277AC77C8uL, 0xB8326CB21D740F03uL), (+1, -6, 0x9F54D111D4844B51uL, 0x507CF96236C04516uL)),
                ((+1, -9, 0xDADC3013CAFEE479uL, 0xC435DC34A565DB9CuL), (+1, -10, 0x81ADACA97910C092uL, 0xFAC32DA858E7B786uL)),
                ((+1, -14, 0xC03F1D42C6B591A7uL, 0xE7D8661D3EC6755FuL), (+1, -16, 0xAD2A331217E87611uL, 0x239778BD93C77D03uL)),
                ((+1, -21, 0xB1C9E41AE4FC4BC6uL, 0x488103F6AFBF13BEuL), (+1, -24, 0xDB78FB1910317198uL, 0xC2E07472ACEF2C91uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((-1, -1, 0x93C467E37DB0C7A4uL, 0xD1BE3F810152CB56uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0x93804EC232C6637EuL, 0x9D3F2BE45A59D9B2uL), (+1, 1, 0xA66A113186B6A5ECuL, 0x64D6BFD126F59608uL)),
                ((+1, 0, 0xC7163EDFDDEF6DE3uL, 0xCFCAEBAABC1B55DFuL), (+1, 1, 0xA882115B925E483EuL, 0xB0A159A5C9DF24CBuL)),
                ((+1, 0, 0xBEB03EDB3F0EF916uL, 0x5CAA6210BF82CC1DuL), (+1, 0, 0xB0F3A29273CD3D2AuL, 0xFE4773D21DC27320uL)),
                ((+1, -1, 0xA5451B1ADF14F331uL, 0xFB6E6991C3B6327EuL), (+1, -2, 0xD5A171EA9427428EuL, 0xDCDE46986723EEFBuL)),
                ((+1, -3, 0x9BAFB38BC4AE48CAuL, 0x6436ADA37C06D583uL), (+1, -4, 0x99BD92283DCCB8FCuL, 0x0CAC8C0575674E0EuL)),
                ((+1, -6, 0xA6B11CA45F89F238uL, 0xABDEE5E004E110B6uL), (+1, -7, 0x8344384CA416E90DuL, 0xEB39E5F66A3210A6uL)),
                ((+1, -10, 0xC71168DFE26715FFuL, 0xB28D536630FAB7CAuL), (+1, -12, 0xFE66E337A66FF63DuL, 0x16B8B7AECFC6DF62uL)),
                ((+1, -15, 0xF4A07C994999B6B2uL, 0xABF9677D11D0A25FuL), (+1, -17, 0xFD084714C3A7168EuL, 0xCBB80F5183AA6A94uL)),
                ((+1, -20, 0x80715A7F97993AF2uL, 0x9133AB3C710E49DEuL), (+1, -23, 0xD0CACECC8DDAF2E1uL, 0x470F6D71741D7DF8uL)),
                ((+1, -28, 0x8E8C809AE0F72632uL, 0x247BAF4A873F8EEBuL), (+1, -31, 0xA3CB33485B10F3F1uL, 0xA0E58449BAA7EBF5uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -2, 0xD8773039049E70B6uL, 0x5C8380FDFD5A6952uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xABEC2158FE8BEDF2uL, 0x5A510AE5FDC86D77uL), (+1, 0, 0xD362E5A40FF093BEuL, 0x032AE580364CF996uL)),
                ((+1, 0, 0xAAA3C417358C7CB0uL, 0xC565D2A3E67FF0BEuL), (+1, 0, 0x8E532FA905290FEBuL, 0x35CA3D77A15A5497uL)),
                ((+1, -1, 0xA25BA6E3CFA22056uL, 0xD57F222690450489uL), (+1, -2, 0xCC039C6B9AD15AAAuL, 0xA7172B17EC81134BuL)),
                ((+1, -3, 0xAA6C4EEE69E14A71uL, 0xF33D46E61E33334DuL), (+1, -4, 0xA9F9F1EFD9B6130DuL, 0xAC5BEF38F2CE2B6BuL)),
                ((+1, -6, 0xCEDD88923ECF113EuL, 0x616A98033B016F3AuL), (+1, -7, 0xA84B3E33FCF34257uL, 0xDEBBAC663B76C391uL)),
                ((+1, -9, 0x9047C0E087BA95F2uL, 0xF60DF05D7AD42EDBuL), (+1, -11, 0xC1AEE5AE8E87EF99uL, 0xC0BD50D626F37ABEuL)),
                ((+1, -14, 0xDA6B36C3694AF7BCuL, 0x77407F0A560A6663uL), (+1, -16, 0xF140DA6290111741uL, 0x09F4D4F87E046D1EuL)),
                ((+1, -19, 0x9C95BAE684D2A3A5uL, 0xC5215E8E1E1C1074uL), (+1, -21, 0x8B1FA77EF029AEDAuL, 0x00B6B35591AD7D86uL)),
                ((+1, -26, 0x98C122DB0A9F776AuL, 0x9F26C279A2FA49E1uL), (+1, -29, 0xCA5182CA70B15C14uL, 0x1093FE34AD30CE48uL)),
                ((+1, -37, 0x8D8CAC2CFBAD657BuL, 0x8AAD2E103E6E9485uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -1, 0xEC3B981C824F385BuL, 0x2E41C07EFEAD34A9uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xC186D2E29A79A14CuL, 0xCD7AFF1D5A1DB31DuL), (+1, 0, 0x9AF05500819DE886uL, 0x0D7607935752CC93uL)),
                ((+1, -1, 0xF4C0F025571B3573uL, 0xD9B8DD5C2557ABEBuL), (+1, -1, 0x99FD49D0EA768BA0uL, 0xF2F853E2437C0E76uL)),
                ((+1, -2, 0x9F4586AFB9998B63uL, 0xE22B573313E6314FuL), (+1, -3, 0xA3165615FCADCF21uL, 0x43507190E99AE18AuL)),
                ((+1, -5, 0xEAE975757228BC8FuL, 0xBEEEEAEE681008F8uL), (+1, -6, 0xC79F2C8B287239D3uL, 0xB2C2C9D617FC5BF0uL)),
                ((+1, -8, 0xC906CD81CE56119FuL, 0x8D084B5FE7958531uL), (+1, -9, 0x8F0B09D1E29EB1AAuL, 0xE0A6182DEAD9A379uL)),
                ((+1, -12, 0xC276CD44B179043AuL, 0x772089FFB957BAE8uL), (+1, -14, 0xE7916708B15B7A36uL, 0x4CF439FAB2E5794EuL)),
                ((+1, -17, 0xC39535DCA3B2F502uL, 0xD8B20B98CE9CCE1CuL), (+1, -19, 0xC0629B5079E93A9FuL, 0x4055C92C99AB6EE0uL)),
                ((+1, -23, 0xA99CFA5782652F4CuL, 0x6DC5A27B68620386uL), (+1, -25, 0x8502494DAAC0F8C9uL, 0x8903E4C516DB9B44uL)),
                ((+1, -31, 0x9CB506F7BB515EB8uL, 0xD11A618986ECDAE0uL), (+1, -34, 0xAFD362F146DFAF2FuL, 0x8ADDDE1AD8723837uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xA0C876B8EBD246D8uL, 0x41CB8AEA2A0144FFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xBA21800C93AF4ABCuL, 0xF2DC421456F7FC00uL), (+1, -1, 0xEE83DE3C040466CEuL, 0xBD340D285E226468uL)),
                ((+1, -1, 0xAB717F25499A788AuL, 0xCBB56516C8DF3124uL), (+1, -2, 0xB57FDFACA7ED274AuL, 0x4F38B1F952FEA2D6uL)),
                ((+1, -3, 0xA3F5228C70E85F4DuL, 0x6191993156BA05A1uL), (+1, -4, 0x919D4E8E961E049AuL, 0x4E1E92E368FCC20EuL)),
                ((+1, -6, 0xB09C4F198AAC1FCAuL, 0x528F6E0F9A2981AEuL), (+1, -7, 0x8489704E4C8DD138uL, 0xD024FB213FB95178uL)),
                ((+1, -10, 0xD7F611FE02EBFDA1uL, 0xFD232C07474D3D81uL), (+1, -11, 0x88E1CDFB51AC6292uL, 0x7A0EEE57F2A1D5A8uL)),
                ((+1, -14, 0x8E958C64492EE866uL, 0x794630B5F5F0D500uL), (+1, -16, 0x97222817AD7A923EuL, 0x57A01718BD52A224uL)),
                ((+1, -20, 0xB2382FE9D4FD72BCuL, 0xAE1E49C2AEC88B83uL), (+1, -22, 0x99B89E389E56E4B8uL, 0x55121D1B6ECFC68EuL)),
                ((+1, -27, 0x97E968DCBADAC73FuL, 0x4FCBA9512862C3C3uL), (+1, -30, 0xC525E95A7CC7C2D2uL, 0x4E4EA101DA7FA171uL)),
                ((+1, -39, 0xF451E2B9605A7D74uL, 0x4115731325F97AC1uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xC0C876B8EBD246D8uL, 0x41CB8AEA2A0144FFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xAB68CCF414010984uL, 0x0E977B824ABA56B0uL), (+1, -1, 0xBDFF9CD57BC5F307uL, 0x34532149CDEBED12uL)),
                ((+1, -2, 0xF3A25D5F3F2B24F2uL, 0x783128EC89D79111uL), (+1, -3, 0xE46E76748C11178FuL, 0xEA100EED13C072B9uL)),
                ((+1, -4, 0xB2F5517ADA10D35BuL, 0x3D173459DF1C20E6uL), (+1, -5, 0x8EE5A43E66B55DF4uL, 0x5F3B5ED7667DCFD4uL)),
                ((+1, -7, 0x91FFF2C6557ADAA8uL, 0xCFE7E01F5C50633CuL), (+1, -9, 0xC6BBAD6C2AF9E7B5uL, 0xB7439BFE89FCEBA8uL)),
                ((+1, -11, 0x839B3C19ED0A19EDuL, 0x0F2C4AA92B4E9C0AuL), (+1, -13, 0x97C4B4382CC0FA24uL, 0x99516E15D75494DAuL)),
                ((+1, -17, 0xF3D928429797E0E1uL, 0x8A5797F296468A30uL), (+1, -19, 0xEA5B565C720C049BuL, 0x8A815C5B3CC34C66uL)),
                ((+1, -23, 0xC1ED602779FF78A1uL, 0x01FF5069CBED1EB5uL), (+1, -25, 0x9592160B7B093525uL, 0xE899A9C86E2D188FuL)),
                ((+1, -31, 0xA4647D075AD4A3D8uL, 0x10D4A812103E09E4uL), (+1, -34, 0xB66DDD490972BB83uL, 0x8FE7E5F7BD886050uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xDA621052856BE071uL, 0xDB652483C39ADE98uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xA1866327F6E6F980uL, 0xFF6B0E54F18871A3uL), (+1, -1, 0xA2240930B49C0A42uL, 0x453D4659D565AD41uL)),
                ((+1, -2, 0xC09CBB76D94836BFuL, 0x53BF2514DF4A277CuL), (+1, -3, 0xA6B3BE88F337FEBAuL, 0x041223E7CA6ACB67uL)),
                ((+1, -5, 0xEEE6008239025120uL, 0xA367FA8517C3F596uL), (+1, -6, 0xB2B55469D45689E9uL, 0xA320A0F1E00A377DuL)),
                ((+1, -8, 0xA55D6A91ACD40B1AuL, 0xC806A6B50D6808D3uL), (+1, -10, 0xD55F743CE719DEBFuL, 0x0FE6A22C4FBB28A1uL)),
                ((+1, -13, 0xFDF66203D3AB3EC8uL, 0xDB023E07A7DD46F3uL), (+1, -14, 0x8C2A27CF6890E18FuL, 0x842CDD173783C878uL)),
                ((+1, -18, 0xC91A39827412820DuL, 0x81FAF23ED6715E09uL), (+1, -20, 0xBA8CDF9910A563BDuL, 0x6D4ECC85612DCCB7uL)),
                ((+1, -24, 0x8917BCE18A3DC530uL, 0x5E14A217B44C9795uL), (+1, -27, 0xCDAFE251679BD5EEuL, 0xE87DE217568B2D5DuL)),
                ((+1, -33, 0xC7A4341909F5171BuL, 0xB264C41C01F74FE3uL), (+1, -36, 0xD9408F98B2A52C68uL, 0x3EB32B666E660395uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX7Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xEFB765A7DAC135C7uL, 0x30BA79D918F033EEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x90308CD574524598uL, 0xD2E61CA55BF7B96CuL), (+1, -1, 0x84FED39AD5DC8043uL, 0x77A07DF362E776A9uL)),
                ((+1, -2, 0x8A476CFDB0DB82E4uL, 0x220DCED5D8E3210AuL), (+1, -4, 0xDCFA7528CCAF8BD5uL, 0xE8242130A4A37269uL)),
                ((+1, -5, 0x8768D6A31A86255DuL, 0xABA1DBC79E1E0701uL), (+1, -7, 0xBB4096F2C3C6EA2BuL, 0x317CCE6F54474EE1uL)),
                ((+1, -9, 0x8FA13C757DC51B2DuL, 0x5AFA39731E5B05E9uL), (+1, -11, 0xAAD0BCC13FD7CD3CuL, 0x0CE62E3F8DAF361AuL)),
                ((+1, -14, 0xA0989917BA1975A9uL, 0x572E8B628865DA25uL), (+1, -16, 0xA1F9D7961155843AuL, 0x90FB828E5C4428DDuL)),
                ((+1, -20, 0xA80508C6169C8602uL, 0x35DE1FB607909578uL), (+1, -22, 0x8B83236EBF61A28DuL, 0x0DA73071BC442CCDuL)),
                ((+1, -28, 0xEED984E56940C6DEuL, 0x1B400A73D0BAB5D7uL), (+1, -30, 0x96CFAFBAE87126A6uL, 0xECF29184DBCE62ACuL)),
                ((+1, -39, 0x9DF9BB2B0AE332D4uL, 0x7F4222AC3B96E6F5uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x8100451D11F2E408uL, 0x2AA6617ED59CAC40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x876F81C92C0D509AuL, 0xC29353B1C879D616uL), (+1, -2, 0xEAF3598EB0E4B6B9uL, 0xF81764A0A4C6DB4DuL)),
                ((+1, -3, 0xE36A1240E3197245uL, 0x286736BC2F7F5ECAuL), (+1, -4, 0xAC90D11263D01A7EuL, 0xA1012E2A291A4F3AuL)),
                ((+1, -6, 0xC3749B414FAD7885uL, 0xD464CF5DD1232B7BuL), (+1, -7, 0x81656AD6C73C5932uL, 0x54928CC58384E0BAuL)),
                ((+1, -10, 0xB659B85B9891C8B0uL, 0xAA3BA580945C28DEuL), (+1, -12, 0xD119E7997158053DuL, 0x625B75FC270F19F3uL)),
                ((+1, -15, 0xB3A9D7180B1BFA6DuL, 0x2543A89798340F4EuL), (+1, -17, 0xAFCEF14322A8C031uL, 0xC1DED89D735C47A2uL)),
                ((+1, -21, 0xA5E5734AC73AB0D4uL, 0x2224058D10C2BB28uL), (+1, -23, 0x866CBE2FFCE33B34uL, 0x031AB89338AE24E0uL)),
                ((+1, -29, 0xD05DE245DA897D0FuL, 0x67FE26BEAFE16578uL), (+1, -31, 0x812E8657A6D936AEuL, 0x344C71747DA32259uL)),
                ((+1, -41, 0xF10851020EAE9D35uL, 0xC8B43691ED9225FFuL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX9Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x8900451D11F2E408uL, 0x2AA6617ED59CAC40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xFF1797E3C553D072uL, 0x8DE2BA1FE74894EDuL), (+1, -2, 0xD239D136FE98AC31uL, 0xD123D924FD396DACuL)),
                ((+1, -3, 0xBE4FE737408CCA2DuL, 0xBF919CEA1042FE02uL), (+1, -4, 0x8A3EA5031F33EC27uL, 0xBFE94A6662DCEE49uL)),
                ((+1, -6, 0x919A7DB3E6DF54D9uL, 0x91AAB5CB17972693uL), (+1, -8, 0xB9BEC86B70C5BAD5uL, 0xB0171B1855F5CED1uL)),
                ((+1, -11, 0xF23581CDC9849061uL, 0xBEC90488ED6F090DuL), (+1, -12, 0x868E7F9BCF8EC748uL, 0x2E2C92D46CAE8914uL)),
                ((+1, -16, 0xD5088A40E96CB43CuL, 0xA4C121E821490C9AuL), (+1, -18, 0xCB060CD56B2D3B14uL, 0xD53EFEB72DC1103CuL)),
                ((+1, -22, 0xAFCDD092CC1E7D33uL, 0xC1F0AE5A601F8836uL), (+1, -24, 0x8B6AF1B81A1A9F8DuL, 0xD4A26F59216CDC6DuL)),
                ((+1, -30, 0xC57D9326D70BE775uL, 0x92CCB9F084FE0D67uL), (+1, -33, 0xF0EE90A29625F91AuL, 0xB0F79DC6438758FFuL)),
                ((+1, -42, 0xCA64B526A611A2F8uL, 0xBFBFD6F41813F6A0uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX10Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x901CB6E42E64AB24uL, 0x9C6D7DF09CB91E07uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xE481C2841CC679FDuL, 0xFAF43B8F6BFC8C5CuL), (+1, -2, 0xB30BEC38CFC2894AuL, 0x7E327E752EDD98D2uL)),
                ((+1, -3, 0x8F331A8DBAA9EAD8uL, 0x55360EB4D2F96F16uL), (+1, -5, 0xC587F6A07B31A4D9uL, 0x69AFF739CB3C14EEuL)),
                ((+1, -7, 0xB45F7752D527466CuL, 0xDD8FAD7C85A00284uL), (+1, -9, 0xD9C8841364059320uL, 0x5813A615471821F6uL)),
                ((+1, -12, 0xEF6664220BE736C6uL, 0xBAF9813E9160C90DuL), (+1, -14, 0xFA5445418E45E200uL, 0x6EA211EC6D8BEFC2uL)),
                ((+1, -17, 0x9F7A7A4253B912FEuL, 0x498A19AB6E5297EEuL), (+1, -19, 0x8DA02C72DC52A938uL, 0xCA385B9810BCE154uL)),
                ((+1, -24, 0xB49025D768ED6B1FuL, 0x1D4A5451BC478C66uL), (+1, -26, 0x82EC2A43A6DB7EA6uL, 0xA3BDF50C9949BD1AuL)),
                ((+1, -33, 0xD97EC5E78B352CB4uL, 0xDBF817371E42D455uL), (+1, -36, 0xE711E5B382794AD5uL, 0x88362E3610479435uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX11Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x96831D4A94CB118BuL, 0x02D3E457031F846DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xD84749099BF17706uL, 0xDA05BF26D8304FF6uL), (+1, -2, 0xA33600372542E1C5uL, 0x6F08F5D00B58FFDAuL)),
                ((+1, -4, 0xF5EFCBAC681979A3uL, 0x8CA5693D2F4B8BDBuL), (+1, -5, 0xA43259A1C84D52D4uL, 0x81B46EBF5017A9D9uL)),
                ((+1, -7, 0x8CAA7920879B48CBuL, 0x9995DCA3DB0CEA13uL), (+1, -9, 0xA52663C25CD7359EuL, 0xAEC8C19BF8E77D5FuL)),
                ((+1, -12, 0xA9B3EFA7916DA9A1uL, 0x08B054031EEDF6E1uL), (+1, -14, 0xAD424BD7B9CA9430uL, 0xD91EE115348C7A32uL)),
                ((+1, -18, 0xCDADDAA69800B4BAuL, 0x7529AF8AC6A3ECCDuL), (+1, -20, 0xB3082F5616044643uL, 0xBC9D27661F8BB58EuL)),
                ((+1, -25, 0xD3FD0051308A863FuL, 0xB57E1525E394E08CuL), (+1, -27, 0x973EB68485EF16DAuL, 0xC848769782466121uL)),
                ((+1, -34, 0xE886B3E29B62DA44uL, 0x3DDD4EC058432B3BuL), (+1, -37, 0xF42A6E1D5BF6BF07uL, 0x17D0A38D41467D3AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x9C5491A7AC10E2FFuL, 0x5FEB2A28777C9BB3uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xCD531EABD79393E9uL, 0xB1AFDD017089D19CuL), (+1, -2, 0x95E677451472685DuL, 0x5A862C320404DC24uL)),
                ((+1, -4, 0xD597405204DF6339uL, 0xC8A66D330F5DDDABuL), (+1, -5, 0x8A8C3D29951DDB8CuL, 0x207AA19D3F8D0501uL)),
                ((+1, -8, 0xDFAFAA85CE1BC1FDuL, 0xEE31A488EB52FAD2uL), (+1, -9, 0x801164824309B4CAuL, 0x6E10F6D7E370E3A4uL)),
                ((+1, -13, 0xF73A501D3F5281C4uL, 0x45CF5223F4B7355BuL), (+1, -15, 0xF70C515FC82059F3uL, 0x2BFB2B442402876EuL)),
                ((+1, -18, 0x8956F6E4A5B11822uL, 0x7726E0E5D8A0F688uL), (+1, -21, 0xEACEA43B5910AE26uL, 0x8114F95C43BB22E3uL)),
                ((+1, -25, 0x81D4BB3C0F5B37B2uL, 0xB5D6425538A3D900uL), (+1, -28, 0xB68FC2E2CFC6132AuL, 0x2E3A7DC7DC1C4036uL)),
                ((+1, -34, 0x82A4B74C7129C1ADuL, 0xEC37086727427876uL), (+1, -37, 0x87B9E56D9E30D4EDuL, 0xD4567AB43177321DuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX13Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xA1A9E6FD01663854uL, 0xB5407F7DCCD1F108uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xC37939407E9B5BF1uL, 0xB0F90C9C9E30CC99uL), (+1, -2, 0x8A901171530BD31CuL, 0x6879A98B1A9EA6CAuL)),
                ((+1, -4, 0xBB53903944C9E7A2uL, 0x6617DC5AD4EBA8D4uL), (+1, -6, 0xECD28C29F1655239uL, 0x25AF4B13970A7A8BuL)),
                ((+1, -8, 0xB4D6020475AA4856uL, 0xC28F5CDBF9681452uL), (+1, -10, 0xCA74D22A1F6A32EEuL, 0x4D5A4805CBF57326uL)),
                ((+1, -13, 0xB855BA45C92A3D8FuL, 0xFCB6AD15B24ED722uL), (+1, -15, 0xB4A79229D0DF53F5uL, 0xDE1BC5421DA6EA29uL)),
                ((+1, -19, 0xBCFADBCB3F4A60E9uL, 0xE6DC351B70B07DD5uL), (+1, -21, 0x9EE930BF43B56448uL, 0x9C42DF8C81E54A93uL)),
                ((+1, -26, 0xA4EA223296CAB0FAuL, 0x71AC8A5AD8A4C466uL), (+1, -29, 0xE4CEA6DD8D4E4037uL, 0x9F33EE8B7594AF8FuL)),
                ((+1, -35, 0x9934E6B052D51DE5uL, 0x94A009781D24B892uL), (+1, -38, 0x9D9D316C24E57415uL, 0x29184F31FC77C60AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX14Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xA69635C1EDB4FD41uL, 0x04056BCC91BE3FCDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xBA936EABE9DE8364uL, 0x8AA517080ABBEE0DuL), (+1, -2, 0x80CB8E3B9E46D3D0uL, 0x83A6FA0634619120uL)),
                ((+1, -4, 0xA5B4C28E096D2578uL, 0x515557BA1C3E52F0uL), (+1, -6, 0xCCA6DB85E2AAE84BuL, 0xE69C04E3E3B94C35uL)),
                ((+1, -8, 0x945252BCB6BE6C67uL, 0x48D6BA661DE2E8DAuL), (+1, -10, 0xA2B0D619256034EFuL, 0xB4AC6E7FF2992708uL)),
                ((+1, -13, 0x8C3F846B96407A75uL, 0x62E7B40ED312BAE2uL), (+1, -15, 0x87082834B7154525uL, 0xE5FBFBF6E4B45E25uL)),
                ((+1, -19, 0x856DAD5F1C67F452uL, 0x5F6ED4917ACFFAA8uL), (+1, -22, 0xDD0A1695FA4A0F7BuL, 0xD2C17BB77C358D03uL)),
                ((+1, -27, 0xD82D2C9FC9248A6BuL, 0x5DFC3CDBAAFCEFE6uL), (+1, -29, 0x9420BB1AD998227FuL, 0x1828570DB7CA18C2uL)),
                ((+1, -36, 0xBA6FDCF0F335605BuL, 0x939DEA364631651DuL), (+1, -39, 0xBE122F4A38B0A3A6uL, 0x2E1BE11B3655A20FuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX15Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xAB287EE67FFE21D3uL, 0x4D29FE15B65088F2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xA67D51852739629AuL, 0x7772E36A11591671uL), (+1, -3, 0xDE9EF0B7DDBD463FuL, 0xBA14A3CF95DF3AD4uL)),
                ((+1, -5, 0xFB91AD52ED7D3CDEuL, 0x058C512D5D3EBD08uL), (+1, -6, 0x95807B9A16DD8ECBuL, 0x585F7842A96154AEuL)),
                ((+1, -9, 0xB99D2B1CCFCC43CCuL, 0xCFAAEF5177B1A15FuL), (+1, -11, 0xC239CDE1CA8CF06CuL, 0x816754F23DA7C2B4uL)),
                ((+1, -14, 0x895E7A0E77DE36B1uL, 0x43FC452E232DD78CuL), (+1, -17, 0xF9025F68006174D8uL, 0x7A400F6B2B2663B9uL)),
                ((+1, -21, 0xB998693E7A0C2E3AuL, 0x9DD8529FFAF55CD8uL), (+1, -23, 0x8D49B6D8A16AF27FuL, 0x885B2219EE388FF9uL)),
                ((+1, -29, 0xA8710FB53BE9D99EuL, 0xD9ECD0C00F635A77uL), (+1, -32, 0xC73FC58E2A893354uL, 0xF9384A31857D65C5uL)),
                ((+1, -41, 0x8876536CDDB00F49uL, 0x55D95276C2F5791AuL), Hexcode.Zero),
        });
    }
}
