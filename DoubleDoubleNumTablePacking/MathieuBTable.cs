using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    static class MathieuBTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>>> tables = new(){
                { nameof(PadeB1Tables), PadeB1Tables },
                { nameof(PadeB2Tables), PadeB2Tables },
                { nameof(PadeB3Tables), PadeB3Tables },
                { nameof(PadeB4Tables), PadeB4Tables },
                { nameof(PadeB5Tables), PadeB5Tables },
                { nameof(PadeB6Tables), PadeB6Tables },
                { nameof(PadeB7Tables), PadeB7Tables },
                { nameof(PadeB8Tables), PadeB8Tables },
                { nameof(PadeB9Tables), PadeB9Tables },
                { nameof(PadeB10Tables), PadeB10Tables },
                { nameof(PadeB11Tables), PadeB11Tables },
                { nameof(PadeB12Tables), PadeB12Tables },
                { nameof(PadeB13Tables), PadeB13Tables },
                { nameof(PadeB14Tables), PadeB14Tables },
                { nameof(PadeB15Tables), PadeB15Tables },
                { nameof(PadeB16Tables), PadeB16Tables },
            };

            foreach (var key in tables.Keys) {
                for (int i = 0; i < tables[key].Count; i++) {
                    stream.Write($"{key[..^1]}_{i}");

                    stream.Write((UInt32)tables[key][i].Count);
                    foreach ((Hexcode c, Hexcode d) in tables[key][i]) {
                        stream.Write((UInt64)c.Hi);
                        stream.Write((UInt64)c.Lo);
                        stream.Write((UInt64)d.Hi);
                        stream.Write((UInt64)d.Lo);
                    }
                    stream.Write((UInt32)0u);
                }
            }
        }

        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB1Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -95, 0x938467035D139DADuL, 0x39F414F63FFBB3E0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -84, 0xA6DEE396D986922CuL, 0x1B8D80B0DA14B35FuL), (-1, 1, 0xCB2A4E22A3637371uL, 0x35AE7D42CC87CCD2uL)),
                ((+1, -74, 0x9498EEDC8C156D70uL, 0xEDE9EBC948CE8C19uL), (+1, 1, 0x88832FB70CE88892uL, 0xA05F9394080F4BCBuL)),
                ((-1, -65, 0x8B96762A0BAFA157uL, 0x6C329B401C310E2DuL), (+1, -4, 0xCD89921C42F2C9EEuL, 0x364FCA5C8186F87BuL)),
                ((+1, -57, 0x9CEFB1D8912D151FuL, 0xCC44A9D343065B0CuL), (+1, -4, 0xC148AE76ED96A5EFuL, 0xF2927DF42C51EE22uL)),
                ((+1, -9, 0xED35FFFFFF8E9DF7uL, 0x2C7D30374242BE14uL), (+1, -4, 0xC2F30DCD7D7EB7EEuL, 0xD63BF724F86738CEuL)),
                ((-1, -8, 0xF89BD684FDA91042uL, 0xA9E242FD916C2ADCuL), (+1, -4, 0xC5FC2D1C0324BFF3uL, 0x162273A773BA39FDuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -35, 0xB1EB9FB5652340AFuL, 0x217D71F9D2B9CDD7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -29, 0xCEC53EE6E1B8D2C5uL, 0x760F2C9016BC1126uL), (-1, 5, 0xDB16D04B6E9D58D8uL, 0x3699F30FB373D873uL)),
                ((+1, -26, 0xC5CC71D9CE43B3ABuL, 0x1F2A769D548168D5uL), (+1, 9, 0xA6EC4EA046D958EFuL, 0x62B8E60AD81E6A74uL)),
                ((-1, -19, 0xFFFA97DC7A8D60F8uL, 0xCC48F4982637D2D4uL), (-1, 9, 0xAC269746E85B5A76uL, 0x79BFDF8E3DA9C3E8uL)),
                ((-1, -13, 0x865A962FE8195A2EuL, 0x5B4B8200801960D5uL), (-1, 6, 0xAD073439F72A2384uL, 0xB87F4EBC0A1AB2FFuL)),
                ((-1, -11, 0xED4B697023348A48uL, 0x04952AF7FBF5109BuL), (-1, 6, 0xF39E4AEEC4711882uL, 0x981088AF2458AC0BuL)),
                ((+1, -6, 0xB841E39CA54B5076uL, 0x734A9EF437870DBDuL), (-1, 7, 0xDC50E00BEE94D32FuL, 0xF9CB7E1D64777563uL)),
                ((+1, -2, 0xE42F5EBA9B33EA5EuL, 0xDB7BBBCB4E8E29D2uL), (-1, 8, 0x9821DAEE8F126099uL, 0x87E656CEF29C94D3uL)),
                ((+1, 1, 0x93F292669A409182uL, 0x958A0D2301812BD0uL), (-1, 10, 0xBC0673571D857F8AuL, 0xCAF7E7D3B1388282uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xBC225DD6B8498B86uL, 0x33EE8BA49976A0EEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0x87B29125931BB7A7uL, 0x8A5454D75A6C90A0uL), (-1, 4, 0x989392ECB97E7830uL, 0xEBFF132B15FF007EuL)),
                ((+1, -19, 0xD4AA42053D339FF7uL, 0xE4011B0B6C0535B1uL), (+1, 9, 0x9992823FB10091DBuL, 0xF5FDCD1FD5F78B49uL)),
                ((+1, -15, 0xFC15AD943784C29AuL, 0x233A82D62277E2A1uL), (-1, 13, 0xA4698C215280E180uL, 0xE6270A0A92C40DE3uL)),
                ((+1, -11, 0xDFB394F85F888F7AuL, 0xD67B16793E9FE125uL), (+1, 17, 0xAE01F4D6AFE08C1DuL, 0x8D62E7A8C76DE7C9uL)),
                ((+1, -7, 0x9E31DC31A5BF5509uL, 0x6B0909AD5A77473FuL), (-1, 21, 0x8EE3A47198FF638BuL, 0xD6470EF69E673FA1uL)),
                ((+1, -4, 0xC2C26D3DB502A7A5uL, 0x8CACB4D2CF8F68A2uL), (+1, 24, 0xCB3E9AB10E740DDFuL, 0x6E961EE7B2129A75uL)),
                ((+1, -1, 0xB751B162D39370DBuL, 0xD972504D5F3F8E08uL), (-1, 27, 0xEC8CDE52ED345A08uL, 0xD53427FF7EA2DC06uL)),
                ((+1, 2, 0x89B10FCEF4CA26C8uL, 0x6FD220013953B48FuL), (+1, 30, 0xE18D66E62D1E98C7uL, 0x68FF831170BC89C7uL)),
                ((+1, 4, 0x97EC1DA47FE6E4D5uL, 0xB79F7F45D169F2A7uL), (-1, 33, 0xABCCEB85826D42CDuL, 0x859971AA3BB58682uL)),
                ((-1, 7, 0xE4F2CBDFEE37205DuL, 0xE1A852EF8A8BC690uL), (+1, 35, 0xD8468787F06A7162uL, 0x5F9A886406076D57uL)),
                ((-1, 12, 0xA8D70BABF64A301DuL, 0xF16D7F2EB8F01A31uL), (-1, 38, 0x896A41EE49CFA0AAuL, 0x76B8C098E1596333uL)),
                ((-1, 16, 0x88DDA17589DB6E5BuL, 0x031035072B0E569DuL), (+1, 40, 0xE3633A64B42DB067uL, 0x0C76A1DC32948514uL)),
                ((-1, 19, 0xD21115A9683134A9uL, 0xCCE532B4178287C8uL), (-1, 43, 0xBD3D6ABFC6BC1938uL, 0xEFB797DFC597DFF9uL)),
                ((-1, 22, 0xBC1DA81005D65D67uL, 0xD2EFD7476C7B4471uL), (+1, 45, 0xD00671B13F508FA6uL, 0xB1CC0E2CE82921ABuL)),
                ((-1, 23, 0xFC3DE37CD300B656uL, 0xE14EF0112DA76193uL), (-1, 46, 0xCDE2BE351B9F8FBCuL, 0x602324F2F6CB639FuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB2Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -101, 0x951B93EB6ADD2468uL, 0x78F87D63BE2795DDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -90, 0xA912AB3570A4DF8EuL, 0x26376726BF1B7285uL), (-1, 0, 0xFEB568A043651BFAuL, 0x072FC477311A1E28uL)),
                ((+1, -80, 0x9706AA908D326D17uL, 0xDFD3A462238B3E73uL), (+1, -1, 0xE3061821D1A583A8uL, 0x9CCC4D9EE8FA6B80uL)),
                ((-1, -71, 0x8E6B82065D796A93uL, 0x62F554C941906E5FuL), (+1, -6, 0x92E0AECE88E78FA9uL, 0xA546E953FBE5C7F0uL)),
                ((+1, -63, 0xA0E1F109CD2B8955uL, 0x6D52BF9B7D23EF32uL), (+1, -7, 0xADC75BBF5C96FA16uL, 0x55E45581BB0F32CAuL)),
                ((+1, -8, 0x91F793FFFFFF162DuL, 0x6B336AAD03140CE5uL), (+1, -8, 0xD5148F82E3666F67uL, 0x4947332A14920697uL)),
                ((-1, -8, 0xB4816CAF3221BF82uL, 0x2C479F80B97C707BuL), (+1, -9, 0xEF1E515D99228215uL, 0xABC84952FF418B20uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -35, 0xD776535BEAFB4FB0uL, 0x324C77197D9D34F1uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -28, 0xD7765369DB37715FuL, 0x44C243927AA1A069uL), (-1, -1, 0xC91AE57E7495FCECuL, 0x169957DC44999735uL)),
                ((+1, -22, 0xB38D4590963C4F57uL, 0xD21A43BA9EE9F30FuL), (-1, -5, 0xD66EB8BEE30121CDuL, 0xC844A7D1DD22EDF0uL)),
                ((+1, -17, 0x9F9A0500E3A38EC3uL, 0x1C121BF11041B06BuL), (-1, -5, 0xBEB832ECCBFD7AECuL, 0xD511E0CC2FCD345FuL)),
                ((+1, -13, 0x9F9A0512AAEFE9A3uL, 0x807BFE0C8EB553C0uL), (-1, -5, 0xC61A66BD950FDA32uL, 0x13A2BAB09023DC7CuL)),
                ((+1, -10, 0xAA3DE35EB61A5587uL, 0xB57B260888DF6C55uL), (-1, -5, 0xC9E40DA9E91D7185uL, 0x09AFDF1CA6B80BFDuL)),
                ((+1, -8, 0x975374E0BFD421DEuL, 0x123CABBB80C8CB8DuL), (-1, -4, 0xC77215FA934D485DuL, 0xF0AC1C72F1A483E9uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xDFBA3CDDD7EDBE96uL, 0xBB2C9C0F14760EABuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -25, 0xA5723F3DEBDAACC8uL, 0x8B8487441C426252uL), (-1, 5, 0xD3F4E494501F6351uL, 0x72881AD242A0EB5DuL)),
                ((-1, -19, 0x884F2129A960992FuL, 0x06B3D173A1032D56uL), (+1, 10, 0x835F354238BA88C4uL, 0xCDDB9E789AC8A044uL)),
                ((-1, -16, 0xD74DA89C950B67E3uL, 0x89B38F0E4DC02C1EuL), (-1, 13, 0x8460E49D860CD4C2uL, 0x84BCB2E82F8B5468uL)),
                ((+1, -11, 0x9190B83AB709EE91uL, 0x7734F1B63A6375B7uL), (+1, 14, 0x89C223B69B2DD107uL, 0x519D8602A40E9A35uL)),
                ((+1, -7, 0x97F47600A1B6CC87uL, 0xC96F1B5EB46094ABuL), (-1, 13, 0x8BE9D9006B8C08F7uL, 0x3B3A58072FACBB31uL)),
                ((-1, -5, 0xA1A93933EEA402A0uL, 0x81EA0CAA60C3EE1CuL), (-1, 8, 0x9E283F4AE9B6BA41uL, 0xFB0537750EE3D4F0uL)),
                ((-1, 0, 0xBB53E4F65090059DuL, 0xEC4CB448899F5585uL), (-1, 7, 0xF8A1FB3794E0943FuL, 0x1D118BDB3F7A4516uL)),
                ((-1, 3, 0x8940CA879056A8F0uL, 0x0B79BBE4B2E41F54uL), (-1, 7, 0xED2947F4EC6FAF9CuL, 0x2547E7634EAF028BuL)),
                ((-1, 2, 0xBC68DD7E2A3D0089uL, 0xF9CA0AE8D54D3F20uL), (-1, 7, 0xC1A09DFB4F53B0FDuL, 0x492C5697C67D592EuL)),
                ((+1, 5, 0xDAE89B656521DFCBuL, 0xAD2C194F4172A1FCuL), (-1, 8, 0xC5A3630904C2D2ABuL, 0x2663054A335B1B42uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB3Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -103, 0x8A17EDEB55A2B85CuL, 0x3D9FD0AC2887A8C6uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -92, 0x9CB2645ED0534EDFuL, 0x7C654F20A7739185uL), (-1, 0, 0xD10AF72F0695A19AuL, 0x55B9CF74EDE5C1D3uL)),
                ((+1, -82, 0x8C1A2E23F741CDF5uL, 0x593D7D55A2B05E87uL), (+1, -1, 0x9D35C41A75CE0939uL, 0xD91926AD030A5588uL)),
                ((-1, -73, 0x84461423D0E23DD9uL, 0xA2943A30A0B13CE9uL), (+1, -7, 0x8340EE30ED4AA3BEuL, 0x8CF0EDD7C78398ECuL)),
                ((+1, -65, 0x95A2E7D25EE6ADDEuL, 0x781B1E9A21E7C78FuL), (+1, -9, 0xFDB038FCE6FF3BD2uL, 0x22B9E26BB8470542uL)),
                ((+1, -8, 0xF33ECB5339F109CCuL, 0x45A055733A17F807uL), (+1, -10, 0xF976FEB29B45868AuL, 0x421B947300C03FBCuL)),
                ((-1, -8, 0xECA0415B7F66EB73uL, 0xF886BBE248F0C25DuL), (+1, -11, 0xD9374678763C0099uL, 0xF2C0D4F539B75333uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -34, 0xB2B69296CE534E41uL, 0x6ACA68B17CE54D98uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -27, 0xB2B69298D26BAE86uL, 0x30B73E33949404E3uL), (-1, -1, 0xAF33327685D01512uL, 0xDD93B24639B8EEE3uL)),
                ((+1, -21, 0x94ED7A2BFFCD2CC7uL, 0x5071795F43333043uL), (-1, -5, 0x8413EEA706489073uL, 0x7FC9A51AC1BAD204uL)),
                ((+1, -16, 0x846150293790F27DuL, 0xE9271E3330AAA238uL), (-1, -6, 0xBF5CB856A8BDDFAEuL, 0x30DA1DF02C96ABCEuL)),
                ((+1, -12, 0x8461502BC802444EuL, 0x393A803441755632uL), (-1, -6, 0x9D944EC253EF7843uL, 0xFB2A17E98760DCA4uL)),
                ((+1, -9, 0x8D3499CBB2FFB326uL, 0x890F333D9C27BADBuL), (-1, -6, 0x855EFD350EF1D497uL, 0x13672E2C945C9141uL)),
                ((+1, -8, 0xFB082DE39CD6D257uL, 0xB34FB21ADB668E31uL), (-1, -6, 0xB4976018DF390A74uL, 0x52909F80B0CF3F7AuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -28, 0xB8A67B1A6E68A9F0uL, 0x611A1B2AF0D10137uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0xB52D96037845476DuL, 0x439D1D7C844AFED5uL), (-1, 0, 0xF4FA3A10ACFC4F12uL, 0xAEE23DD83192EBCCuL)),
                ((+1, -17, 0x92EE47129F56404FuL, 0x65459830E1C10FCFuL), (+1, -1, 0xD16639724DB6A435uL, 0x4980F5A2A2B3F368uL)),
                ((+1, -14, 0xFA68604AA5649B0FuL, 0xEC3DD4812E87FD3DuL), (+1, -6, 0x8505F32A3AFCF102uL, 0x30BCD8D1C3674263uL)),
                ((+1, -11, 0xE8674AA225949384uL, 0x71006C4A28B5ECBFuL), (+1, -7, 0x9B3C2E9D64C3ABBDuL, 0xE01571F6BBDEB560uL)),
                ((+1, -9, 0xD17CEE32FB25D81DuL, 0x92D04959E5572A2DuL), (+1, -8, 0xC633BD848100E20DuL, 0x9F4DB51C9976A5FAuL)),
                ((+1, -9, 0xA7932E244AA45F30uL, 0xAACA3EA619594058uL), (+1, -9, 0xFBC37D948A84739BuL, 0x07B2AB276E318483uL)),
                ((-1, -7, 0x9C1327A017EE425BuL, 0x8DC8C1C8D25AC480uL), (+1, -9, 0xB4C49E0B89969949uL, 0x567E9A3F42F2A55FuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB4Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0x94B8DA16F5896A99uL, 0x4A5ABBA8DE7D4183uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0xA8D027222133F24DuL, 0xB0BB14DD58C45987uL), (-1, 0, 0xBC53223D16BA55AFuL, 0xD7818993DB13C505uL)),
                ((+1, -83, 0x970014612D3AD80DuL, 0x6C1E8D3994D1031FuL), (+1, -1, 0x817C192478002C71uL, 0x705B88AE553FE4A5uL)),
                ((-1, -74, 0x8EA3BFEEE5AE9B61uL, 0xD744A2D131E6E692uL), (+1, -8, 0xA3D0AEF8FB921263uL, 0x3F68E1BEF4325EACuL)),
                ((+1, -66, 0xA1783EA316F80D23uL, 0xEDA97DD6125583B1uL), (+1, -9, 0x8E2B0A8F5233E92BuL, 0xCE6B6DA4176969A2uL)),
                ((+1, -7, 0xC7166D77FFFFF14BuL, 0x7F9CA460EB59E7FEuL), (+1, -11, 0xF812D28527824F02uL, 0xDE8B4C7A46E1765DuL)),
                ((-1, -7, 0xA9791AB9FCE68441uL, 0xAFB744C68C13BAC0uL), (+1, -12, 0xBC3C442CC8C99CBBuL, 0x1BC6B8EB7BC7EDE0uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -33, 0x91FBC3286BFEAB25uL, 0x08AC2FF15A1D6ADDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -26, 0x91FBC3291484F042uL, 0x4E9B960B23F719BFuL), (-1, -1, 0xA40F02390EE0BD96uL, 0x0B71ED67BAC17132uL)),
                ((+1, -21, 0xF34E4545C2A8AEEEuL, 0xC77E6C34B9ABC5EFuL), (-1, -6, 0xCB1CC03CFB7A355BuL, 0x4D78E9F0C0D8CE6EuL)),
                ((+1, -16, 0xD84592EA0D18B0B5uL, 0x6EBC46A962103615uL), (-1, -6, 0x84584C78DF5EA8ADuL, 0x4FF66A88BFD0AD34uL)),
                ((+1, -12, 0xD84592EBB9886A1EuL, 0xF3E1F9B6BB4F5556uL), (-1, -7, 0xC13EE11FC8BB83D3uL, 0xF9E5748C0B35E21BuL)),
                ((+1, -9, 0xE6B09CB9641417A2uL, 0xF19D7B0FFC12C2C8uL), (-1, -7, 0x925B9E309AC8A0D8uL, 0xBB0F20E86B996500uL)),
                ((+1, -7, 0xCD0EC43586B9E329uL, 0xC250C1DB057B171FuL), (-1, -7, 0xA484EF4215964534uL, 0xE44507987E9D16F8uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -27, 0x968369AC5BEF046AuL, 0x056F64D5D680679FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -21, 0x941F4BF316B99583uL, 0xACD0BF6957CD069EuL), (-1, 0, 0xD7091C36E72E6702uL, 0x61E8F8C66CE98AC4uL)),
                ((+1, -17, 0xF14A8E8F766A452BuL, 0xB13AF91A23A83FAAuL), (+1, -1, 0xA5715B00E2B0EEBFuL, 0x81BAB2DFE3062CE9uL)),
                ((+1, -13, 0xCF0ACCE9A4CDA3FAuL, 0x8208BFF4067E4AD0uL), (+1, -7, 0x99BF622195A69169uL, 0xF1B7131726FCDE8EuL)),
                ((+1, -10, 0xC2A4DD7475637EAAuL, 0xDF470F59EABDE47EuL), (+1, -8, 0x9E17CA76C6BDA6F8uL, 0xB6191D8FB69D392AuL)),
                ((+1, -8, 0xB52BBA2CA09F0BBBuL, 0x8D88352D82998F70uL), (+1, -9, 0xAEC62CA282D184CDuL, 0x61EFFAFB1AB19F18uL)),
                ((+1, -8, 0xB5048455ED6D7C5EuL, 0x281ABF1D79BA6EBDuL), (+1, -10, 0xBFE24966D9568E80uL, 0x8151DF642CD9174EuL)),
                ((-1, -7, 0xD6F4508EF8EC3E8FuL, 0x2DE563379F2069B5uL), (+1, -11, 0xDC39FA01993B9F54uL, 0x90ED25DA0A727EA6uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB5Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xE38CD51B451CF413uL, 0xE965973025375E6EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0x812B1F7DA9DFB1FBuL, 0xDA9A6031F1FDE9A9uL), (-1, 0, 0xB1280C48E03EAADEuL, 0xA93992DC524106ABuL)),
                ((+1, -84, 0xE721DABE946A9C85uL, 0xEFED11F24C08ED19uL), (+1, -2, 0xE735441ED3A8D9BFuL, 0xA34AE2B30BB591EEuL)),
                ((-1, -75, 0xDA6639A40046CC86uL, 0xFBF37C1721E9CAA2uL), (+1, -9, 0xF00BD5495AE53765uL, 0x13F9C67CAFCB5302uL)),
                ((+1, -67, 0xF7520191B15FA155uL, 0xAC9266F619B7B8EBuL), (+1, -10, 0xC347D7F93BC1A976uL, 0x50211D86FDBD7664uL)),
                ((+1, -6, 0x99BBB6B1A2A4D574uL, 0x15A7F4949CAF5DE7uL), (+1, -11, 0x9E75A0E94178DD4DuL, 0x49EA5DDA2588F1F2uL)),
                ((-1, -7, 0xF137DEF76B9ACA40uL, 0x31337A51C1AF6B2CuL), (+1, -13, 0xDD334DE11783390AuL, 0x8E5C74A957E1241DuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -33, 0xE13A8223CB75C9E4uL, 0x9AB372317C0E3EDDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -26, 0xE13A822460E7B1B9uL, 0x8F4239B5BDF00291uL), (-1, -1, 0x9E6639D5A194E03DuL, 0xDEF4CFD8F9957F99uL)),
                ((+1, -20, 0xBBB0C1C98E39CD2EuL, 0x5CAF068EEE49F40CuL), (-1, -6, 0xABFD9703ABAC29AEuL, 0x397768DF166EDDF4uL)),
                ((+1, -15, 0xA6D601975361FBDBuL, 0xABAEFA199497E393uL), (-1, -7, 0xD2E2A1C635E39BD4uL, 0x1C208FA7C5A4BB05uL)),
                ((+1, -11, 0xA6D6019811489734uL, 0x001CAE71E4FB3413uL), (-1, -7, 0x8F8B071055BCCF9BuL, 0x340973BB011D2EC1uL)),
                ((+1, -8, 0xB1F5570996978ED4uL, 0x1D095A51B02C6C3EuL), (-1, -8, 0xCB169A21082FC2CAuL, 0xD5C9238E54D6857EuL)),
                ((+1, -6, 0x9E2F69D0BF4141A0uL, 0xEDEDC541E9C4B581uL), (-1, -8, 0xCCED6EBDFADF685FuL, 0x61777DA8F312973EuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -27, 0xE7F7AE3408C00F86uL, 0x92A70761048C262CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -21, 0xE4A3AECD5E11663EuL, 0x28F2B7741CDE8497uL), (-1, 0, 0xC75FB7BB522D919DuL, 0xABC1C4E2B1C9D9C4uL)),
                ((+1, -16, 0xBAA667B3584C5677uL, 0xDA95AE5353FC602DuL), (+1, -1, 0x9040737C0DAB803AuL, 0xCFD9616F92C2E265uL)),
                ((+1, -12, 0xA0BBEB5500677A77uL, 0x811DA590F865DCD6uL), (+1, -8, 0xD79C8D9D1A3F4B71uL, 0xC668D7F14A828943uL)),
                ((+1, -9, 0x981B095431CC08E8uL, 0x028F1A762F53031AuL), (+1, -9, 0xCDA7BB8061AEE214uL, 0x0AE9DA3EF3510627uL)),
                ((+1, -7, 0x8FD6B05801020726uL, 0x878D759200354E7FuL), (+1, -10, 0xD0B5012371A0FFEEuL, 0x0C2C38932682EA45uL)),
                ((+1, -7, 0x9D8A61487DA48B2FuL, 0xB1DE4E0D1DA39AEBuL), (+1, -11, 0xD16710A14E34987FuL, 0x1E84DAC4CF4DA5C8uL)),
                ((-1, -6, 0x9598A6EF690F9A3BuL, 0x06BE66D0AA3F51BEuL), (+1, -12, 0xD3155E929512C9A5uL, 0xF98F395827FCE951uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB6Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xCE39928E1952FC5AuL, 0x3A0C49516155775AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -94, 0xEA26FC7E27567435uL, 0xAC6F2E6C4072A07DuL), (-1, 0, 0xAA7F3D2CF9C183C4uL, 0x68300DDAB3B9DB5CuL)),
                ((+1, -84, 0xD1864AEF0A31A374uL, 0xB03A7A95C5C4BB98uL), (+1, -2, 0xD76815C3FC0BD063uL, 0x92BD32D8983D48CDuL)),
                ((-1, -75, 0xC6048A5A101E3ABBuL, 0xAAF39ABBA062662BuL), (+1, -9, 0xC187C706B593F738uL, 0xDEE0A35F553C6202uL)),
                ((+1, -67, 0xE04A21331CC909DFuL, 0x7139837365BB268BuL), (+1, -10, 0x96CEA64512C378C3uL, 0xBB20B49D66B18D63uL)),
                ((+1, -6, 0xE047EB4587E6B232uL, 0xCD2DBD227DBD1CD5uL), (+1, -12, 0xE938BC883288076BuL, 0xFDB99C669080337BuL)),
                ((-1, -6, 0xA6D2E4A61299F196uL, 0x4B08DF79D25200F2uL), (+1, -13, 0x9A035E6428F88432uL, 0x665CA77F4CDA567EuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -32, 0xA433C85F0A09998DuL, 0x60C51D629050EA00uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -25, 0xA433C85F55D1049BuL, 0x81A78FC87901851FuL), (-1, -1, 0x9B48BB9C741329C5uL, 0x46AC6E5E97D65F74uL)),
                ((+1, -19, 0x88D5D1A511F3218CuL, 0x2543BE5891902ECDuL), (-1, -6, 0x99730EC9C855E3BFuL, 0xA645D55F5DA68FBAuL)),
                ((+1, -15, 0xF3433BD0BE2B24B4uL, 0xEA9A34BF9F56F431uL), (-1, -7, 0xB4FE9DF2A7CCE414uL, 0x901FC076BF8758B6uL)),
                ((+1, -11, 0xF3433BD17EB716E6uL, 0x852348BD77EF55A7uL), (-1, -8, 0xEBA18BB0C6B413DDuL, 0x5418755450BF1FC4uL)),
                ((+1, -7, 0x81BD753D07668A56uL, 0xF268F87A468550E9uL), (-1, -8, 0x9F6CCBEC838BC52AuL, 0xCEDF8AF02E57D23AuL)),
                ((+1, -6, 0xE6A625C2F5211A41uL, 0xA82C956F52416509uL), (-1, -8, 0x963B1EAF168995F3uL, 0x99A5DDD0149207CBuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -26, 0xA903DD965CE5C02CuL, 0x727EE418AE14802FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -20, 0xA6BED82DDDB8CC39uL, 0x02639BD18DD90614uL), (-1, 0, 0xBE2A47000AD1629FuL, 0xF0E9F3AA7ADBC2D1uL)),
                ((+1, -15, 0x884E832C4D5FCE90uL, 0xA9BA7808C3EBDCB1uL), (+1, -1, 0x8468D307A0D0FDBBuL, 0x5F9360268431F27DuL)),
                ((+1, -12, 0xEB43114282EDB45DuL, 0xD7C1B169610399B7uL), (+1, -8, 0xA8E4DD9128988B2AuL, 0xD07B1DF36E4A1489uL)),
                ((+1, -9, 0xDF7E5D836677B80AuL, 0x267E2DD303BA5D34uL), (+1, -9, 0x994943F99D7897F5uL, 0x9E73EDCC9BFAD5F3uL)),
                ((+1, -7, 0xD5498EF464646E41uL, 0xFE2C5D0EF9941B75uL), (+1, -10, 0x930B1540B622BDEAuL, 0x96D062B14DF2A93DuL)),
                ((+1, -7, 0xF54794EF24463A38uL, 0xD790BFBF7992C916uL), (+1, -11, 0x8AEF9644157CD1CFuL, 0x352DE82FAD08B685uL)),
                ((-1, -6, 0xCC08EC2B5203287BuL, 0x59D4C2F05FD95686uL), (+1, -12, 0x80D4437C067CDC58uL, 0x213F4ED861C6D8E8uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB7Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xCC97362C9A704CE3uL, 0xFECA4E9B318A9182uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -94, 0xE85049A74DB7D754uL, 0x7F916E1C934C554AuL), (-1, 0, 0xA638BC4D5EBAB822uL, 0x413C5302AF3B9230uL)),
                ((+1, -84, 0xCFE62349E37C51ACuL, 0xCE4F73E8BEA979B3uL), (+1, -2, 0xCD91BFC59D62A800uL, 0x4ECDAC60B6896585uL)),
                ((-1, -75, 0xC481378DFE5DB754uL, 0x716F1A3E3B101652uL), (+1, -9, 0xA5F929CBC882240DuL, 0x439DAF9CE34E073AuL)),
                ((+1, -67, 0xDE9BC1C9CF53BDC3uL, 0xF8B74A0600C316F6uL), (+1, -11, 0xFAF45CF1802C4737uL, 0x25AED11E237EBFE2uL)),
                ((+1, -5, 0x9BE4A37760251A74uL, 0x371207102FE1977FuL), (+1, -12, 0xBB9118D05642ED1CuL, 0x84C3A6BB6BA8503CuL)),
                ((-1, -6, 0xDF88288B0D725D28uL, 0x2B5AE504F8729C0BuL), (+1, -14, 0xEE4399BD808D9198uL, 0x82CE1F458AFA87C9uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -32, 0xE431E351F12B2C0FuL, 0xE33510FAED0C8881uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -25, 0xE431E35242FE03F9uL, 0x63ACF2BD6421964AuL), (-1, -1, 0x997C0496B83D48B6uL, 0xD718C9F9F12B1C22uL)),
                ((+1, -19, 0xBE2992C4DD87DE09uL, 0x489729DF7AAE7735uL), (-1, -6, 0x8D78E2BA117D0C19uL, 0x179C1F8F65102193uL)),
                ((+1, -14, 0xA90882766FAEF8EFuL, 0x332EA173AC03289CuL), (-1, -7, 0xA278DD623D86391BuL, 0xB891448347D15141uL)),
                ((+1, -10, 0xA9088276D79F6499uL, 0x08C5E6FD35C4A671uL), (-1, -8, 0xCD21EB594E9B31E4uL, 0x7852A0D7D1307476uL)),
                ((+1, -7, 0xB44D57F6C5080AAEuL, 0x13D686C2321F0FEAuL), (-1, -8, 0x86915C28941B934CuL, 0x96B7BB058478FC85uL)),
                ((+1, -5, 0xA044BFF8677E7CE4uL, 0xD3579A79F38A904FuL), (-1, -9, 0xF21BBDA190EE90F7uL, 0x18E6EF5D92A67B2FuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -26, 0xEACD8A89BB6B0073uL, 0x4201AE18F3BDD584uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -20, 0xE7CA392C67986C3FuL, 0x98211D6D29C1F24AuL), (-1, 0, 0xB84E2DE45C1706BFuL, 0x7795C53C60A6F9D6uL)),
                ((+1, -15, 0xBDA4A60D7304BE23uL, 0x6D3887B9A0F9103BuL), (+1, -2, 0xFA3F1B82449CDFAAuL, 0x9B6E715DC9C94B15uL)),
                ((+1, -11, 0xA3E286D0189B8E84uL, 0xBE8815BD3F63FBBBuL), (+1, -8, 0x8DF8BC9564B52405uL, 0xF06E0698B00B15FAuL)),
                ((+1, -8, 0x9C12D04FDF827551uL, 0x903D89E569CBF50BuL), (+1, -10, 0xF8DACBA4E409FFEBuL, 0x325D1F8FB6F9D7D7uL)),
                ((+1, -6, 0x95D069EE4B13EEC6uL, 0xBF40087144C2B36AuL), (+1, -11, 0xE5769CF86DC9D3C6uL, 0x3ADC46DCAAD0F313uL)),
                ((+1, -6, 0xB175C7B02EB6DF91uL, 0xD47DFCA21969A8E7uL), (+1, -12, 0xCFCD4C44989027C2uL, 0x2BE6D8EE86FF3F7FuL)),
                ((-1, -5, 0x876E279196CE307CuL, 0xD90391D7FC89A6B6uL), (+1, -13, 0xB5DFAE0E0377AB0BuL, 0x03559CF465EE076CuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB8Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xD58B96C8F3F4724DuL, 0xDF172B6015013CC8uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -94, 0xF27E6B5179D2D04FuL, 0xB353DC37A061FDEEuL), (-1, 0, 0xA35053778E935B60uL, 0x85653AB5729C1F77uL)),
                ((+1, -84, 0xD906081F8A0B9C16uL, 0xD665EC4D5CA36008uL), (+1, -2, 0xC70454DF65A8943BuL, 0x0FABC60546FD22EEuL)),
                ((-1, -75, 0xCD256C594FC05CC5uL, 0x66851378487202DAuL), (+1, -9, 0x9446D91C33BC57C7uL, 0xF1F6B6B8170E9E43uL)),
                ((+1, -67, 0xE86BE28EF36224BAuL, 0xD750E42A4352FA33uL), (+1, -11, 0xDB5286FAFDDCA6F8uL, 0x86EC31EF35B6AB6DuL)),
                ((+1, -5, 0xD051EA6E17FFFD59uL, 0xF8EC2FB1B49268B7uL), (+1, -12, 0x9FE97B741A495C45uL, 0x95D0F2EA8CE7B723uL)),
                ((-1, -5, 0x916D9B045F27BC4CuL, 0xA2FB2D8859C5F410uL), (+1, -14, 0xC5701D38167C0117uL, 0x814EEAF0196B6156uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0x98708A90F184A3E3uL, 0xED597AFB04173321uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0x98708A911F0B847FuL, 0x9327DF200F6CB383uL), (-1, -1, 0x986998969A67F598uL, 0x20868BD99361EE49uL)),
                ((+1, -19, 0xFE10E6F237D7C15FuL, 0x46A1FCB9F7B9A156uL), (-1, -6, 0x855632049543B88AuL, 0x8F05AF2C7CF66E3AuL)),
                ((+1, -14, 0xE1D6229EC997D423uL, 0x4D1DB0B7459A6E1EuL), (-1, -7, 0x9632F5DF942AD6F7uL, 0x051DE51D15CEFF81uL)),
                ((+1, -10, 0xE1D6229F3D3F2F2CuL, 0x175074CA92850ADDuL), (-1, -8, 0xB97AE90D9EA28B8FuL, 0xF047D67C42523473uL)),
                ((+1, -7, 0xF0E46932FCAD6676uL, 0x3814ECF75E5B4C18uL), (-1, -9, 0xEDF15133ACC7D5A0uL, 0x7FF2FB0DB131067EuL)),
                ((+1, -5, 0xD6205D83552E2A4CuL, 0x8116C45582131244uL), (-1, -9, 0xCF0C9AF5C2119635uL, 0x470B300EE1BAA412uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0x9CD2677E33B04E86uL, 0xA47C47400D1CD47FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0x9ADFCE88C28DA948uL, 0x99608D07886680ACuL), (-1, 0, 0xB458B9E74FD7963CuL, 0x1046FD8DDFE51786uL)),
                ((+1, -15, 0xFD9448A73ACC7DF7uL, 0xD5A4480E2284AF1EuL), (+1, -2, 0xF0A0425A02D39181uL, 0xC6CBEF7EA6E17B09uL)),
                ((+1, -11, 0xDB582BD1ECB91B3CuL, 0x05AC573DCB33B51EuL), (+1, -9, 0xFA1231C467F810F8uL, 0xF06CF4EA7F6A597FuL)),
                ((+1, -8, 0xD13ED9CFBDE03D33uL, 0x931897259D3238E8uL), (+1, -10, 0xD5AB0CDAEC725657uL, 0x43467C612A9587BAuL)),
                ((+1, -6, 0xC9A69FC7D6E2D36BuL, 0x9FF11AC6ABC32451uL), (+1, -11, 0xBF6AA4A941910B28uL, 0x30BF4BC96F7C4F2DuL)),
                ((+1, -6, 0xF3965A88BA82EB1FuL, 0x1243EE96C91D9AFCuL), (+1, -12, 0xA807B143A12AB1F8uL, 0x61E95B2019A3EE6FuL)),
                ((-1, -5, 0xAF1729990134E9CAuL, 0x1C4D99ECF513AC0FuL), (+1, -13, 0x8D09C5588445225BuL, 0x8EDA0F19546099A3uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB9Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xE56B1D4EB37CDB04uL, 0x0E9178196CB65553uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0x82439D36524D5AB9uL, 0xFAF19950AB46523DuL), (-1, 0, 0xA13EDE6A2A2B70C4uL, 0x9473110C540D58D0uL)),
                ((+1, -84, 0xE92CBF7C0CA659B4uL, 0x44A6EA63F38B6957uL), (+1, -2, 0xC26C552C630719F6uL, 0x00BDF217FD11BBA9uL)),
                ((-1, -75, 0xDC6D37E3D0081125uL, 0xB7A26C76400DD5EBuL), (+1, -9, 0x882D92267A674716uL, 0x5F877089D1FBCC94uL)),
                ((+1, -67, 0xF9C079D28174E9E7uL, 0x8DBC104702E3BAFFuL), (+1, -11, 0xC62763811A6A921AuL, 0x0C0CF0BD239C6586uL)),
                ((+1, -4, 0x86C68741BD83F40FuL, 0xE639A2470166CB35uL), (+1, -12, 0x8DD25AE4C40D8DE0uL, 0xD25FE4C48C19F528uL)),
                ((-1, -5, 0xB872E69B7CC09797uL, 0xF171491F221B1AF1uL), (+1, -14, 0xAB677A89F357C0AEuL, 0x084CB25B5E633BC9uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0xC5392C11E592AE5FuL, 0x42C8D0D2A7B1DD4AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xC5392C1218F559A0uL, 0x7575CFB72DE07726uL), (-1, -1, 0x97C37B4151DC32AFuL, 0x46F9F51DE00E3EE3uL)),
                ((+1, -18, 0xA45A4F649C9A4B09uL, 0x495E98F3DB26D0F0uL), (-1, -7, 0xFF36365DE5EA0037uL, 0x08290579F7E3B22CuL)),
                ((+1, -13, 0x921763044F1285B8uL, 0x14E350891650FB44uL), (-1, -7, 0x8DAF505848837C99uL, 0x72751D0BBF5C2985uL)),
                ((+1, -9, 0x921763049056227EuL, 0x39F765BD5B27FDE8uL), (-1, -8, 0xAC15F328EB229F2BuL, 0x57DBDAE8A031F41DuL)),
                ((+1, -6, 0x9BD4ADE3128CA31AuL, 0x037B810B839E8ECFuL), (-1, -9, 0xD90DA7F409BE6F5EuL, 0x058EFACDA26CEE8DuL)),
                ((+1, -4, 0x8A8428CA397B5445uL, 0x7F6BB68CCF47BF50uL), (-1, -9, 0xB8401BC6A8F133C0uL, 0x85182BF08816344AuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0xCADE2EDDF6CA9BC8uL, 0xE5E637723F1C293AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0xC868B85D184E0DDBuL, 0xD57BC6D69A709117uL), (-1, 0, 0xB18B3E2BC4BED321uL, 0xE3DF04CD4049CE57uL)),
                ((+1, -14, 0xA4238F61E544F692uL, 0xC7EEAF58DB0DFAC0uL), (+1, -2, 0xE9ECB2EE8B1DB1ECuL, 0x01CC80BB0BB9008BuL)),
                ((+1, -10, 0x8E138E3936C66088uL, 0xE3D4713571D628BBuL), (+1, -9, 0xE34A7A57076D154FuL, 0xA213E8441A8C2544uL)),
                ((+1, -7, 0x87B39D5CDDD4F518uL, 0x542F56D8769A9A71uL), (+1, -10, 0xBE8F06BA0B7F71CAuL, 0x38B84FF85E58584DuL)),
                ((+1, -5, 0x83261D7BE6F56043uL, 0x2423CEBDA39346F9uL), (+1, -11, 0xA710E71F08ED73B1uL, 0x5956F03E9860284CuL)),
                ((+1, -5, 0xA09F7493E85741A8uL, 0x708F1CA0CDFB639FuL), (+1, -12, 0x8F40D22E5E9941DEuL, 0x98A2BE6814FCC556uL)),
                ((-1, -5, 0xDD0BC3E8DD67DBA2uL, 0xD3D4982D423F8DE2uL), (+1, -14, 0xE912E063192AA434uL, 0xD4A02B1F308D260AuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB10Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -105, 0xFA7A9D2FA29744C3uL, 0xB88F8A267BD507DBuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0x8E39E6C5D838ED3BuL, 0x64EAD386FAACFF83uL), (-1, 0, 0x9FB92B96D61C1B3AuL, 0x204FDA10829F2738uL)),
                ((+1, -84, 0xFE9897FBE0BC70F7uL, 0xF2518C0DAEED558CuL), (+1, -2, 0xBF1376EC9A06C333uL, 0x2A5A1DB01B41650BuL)),
                ((-1, -75, 0xF0AFFD3EB3A245A2uL, 0xAE53380337111728uL), (+1, -10, 0xFEFCEF57C8C19835uL, 0x935B925024519EFFuL)),
                ((+1, -66, 0x885C8EBF48F8076FuL, 0x85454C0CFB0671DDuL), (+1, -11, 0xB7368EE77EB4558EuL, 0x9EAF8F96EBF84571uL)),
                ((+1, -4, 0xA9D66708FB86F2EDuL, 0x8AF7527F7FF75B5AuL), (+1, -12, 0x814700B72960B000uL, 0x6535B3CCD5133398uL)),
                ((-1, -5, 0xE4DF7788CF361FF4uL, 0xA320AD7B7E19C19EuL), (+1, -14, 0x99B3D82075798C3FuL, 0x1B1833FD998335F3uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -31, 0xF88399F34AFF5DC2uL, 0xB347476BAF091555uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -24, 0xF88399F38555C298uL, 0x22F764FB5491BE2CuL), (-1, -1, 0x975ED78A0460D42EuL, 0x3E5236A8FDC18A65uL)),
                ((+1, -18, 0xCF1855A07DBE7C1EuL, 0xF4B0412B6ACFAACDuL), (-1, -7, 0xF6E6F054CB766CDCuL, 0x780393F7A75DE30DuL)),
                ((+1, -13, 0xB815A17273C9A8FEuL, 0x16B96CB3126C3AEBuL), (-1, -7, 0x87928DC85ABCD9DCuL, 0x430DAF5716873112uL)),
                ((+1, -9, 0xB815A172BDE0CCD8uL, 0xFD169638BDAD3E53uL), (-1, -8, 0xA294308C15197B5FuL, 0x63FDA1422FDC676DuL)),
                ((+1, -6, 0xC45B56E12CAF2261uL, 0x5419E00A4AF10FC6uL), (-1, -9, 0xCA6623988B997C81uL, 0x2D311EF56D819A0DuL)),
                ((+1, -4, 0xAE8A1456CFB905FCuL, 0xF51D1986B954ADE4uL), (-1, -9, 0xA89329E6F78A1DFAuL, 0xD98F52E97BE1B520uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -25, 0xFF9B7C393742298CuL, 0xB278B5E48B2A7CCBuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -19, 0xFC911B702C1DCB07uL, 0x76F6D27BB84789B9uL), (-1, 0, 0xAF7C55CC3723E6E9uL, 0x819BB09865B82DEAuL)),
                ((+1, -14, 0xCEECD09D96FA7B19uL, 0x399F1A3009752A4BuL), (+1, -2, 0xE50F64876FADDABBuL, 0x35D1E8A4781FEE56uL)),
                ((+1, -10, 0xB33422E18F2D6018uL, 0xCA1B24D3373A4902uL), (+1, -9, 0xD326C3C16D2D2013uL, 0x085D37A5F45B88A1uL)),
                ((+1, -7, 0xAB521E797FD8443FuL, 0x013C1F96B00CFA5DuL), (+1, -10, 0xAE7D06DDE5C459C8uL, 0xEE47D26B27E952C9uL)),
                ((+1, -5, 0xA5ECE3E7DB4D4ECBuL, 0x2B2BB576CB1806D2uL), (+1, -11, 0x9677EA61C22DFE36uL, 0x717C262F388A75DEuL)),
                ((+1, -5, 0xCD49EB8FFAF69C39uL, 0xEC02A63725C9794BuL), (+1, -13, 0xFD6CC73F6B71B4CCuL, 0x6FF57615DA5DF0E5uL)),
                ((-1, -4, 0x88AB81C41DEB2CAFuL, 0x1C367C7072F7A9A4uL), (+1, -14, 0xC946B012ABD58138uL, 0xB96E25A46805AA86uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB11Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0x89E9DCDE0E04D02EuL, 0x004C440D03D6B787uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0x9C9F5B88378B14BBuL, 0x83903B00A86BA4D9uL), (-1, 0, 0x9E92B7447A63685FuL, 0xB1230DF5090522FEuL)),
                ((+1, -83, 0x8C2FE4F43C4D4D60uL, 0xEF4A3B0D812A0EF4uL), (+1, -2, 0xBC90B738829A8799uL, 0xA9CE7D33C6C5C2A6uL)),
                ((-1, -74, 0x84887CBC4000B060uL, 0xD8417598B17D5BE9uL), (+1, -10, 0xF20B07AF124C19E2uL, 0xA850150913F80DBBuL)),
                ((+1, -66, 0x962E0059525495D5uL, 0xAA76FFBBB54AFF23uL), (+1, -11, 0xAC39A9CEDA345070uL, 0xE95AEC128C66FE85uL)),
                ((+1, -4, 0xD16092B080820B21uL, 0xB1E8194ECA19DF32uL), (+1, -13, 0xF05C271B42D97A09uL, 0x3F884BFEBB67E22EuL)),
                ((-1, -4, 0x8B5EFCD1C399F0A5uL, 0x9D4FA8CC10B90C1BuL), (+1, -14, 0x8D0FB90F2F50DBE5uL, 0x9130F1E6076DEEA0uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0x992DCFD3AA81EAA9uL, 0x550107BB46F4A5E5uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0x992DCFD3CBAA4CF0uL, 0x484E4414C5E22E8EuL), (-1, -1, 0x972307919DD95BDDuL, 0x1F01E67998C25FF6uL)),
                ((+1, -18, 0xFF4C5A613F3E027EuL, 0x60C02CB68F1A0E12uL), (-1, -7, 0xF0BB8758B1D4EE9BuL, 0x79F4CFCF67A3870EuL)),
                ((+1, -13, 0xE2EE893A448EDCF9uL, 0x7D6DB8A81F93B451uL), (-1, -7, 0x83108173DFBEC110uL, 0xFDFACAE8EB5B9980uL)),
                ((+1, -9, 0xE2EE893A98C71F00uL, 0xAA6DAC9DDBCBEDA8uL), (-1, -8, 0x9B9E7D9C347161CCuL, 0xD2FA337BF8DB3B7AuL)),
                ((+1, -6, 0xF20F81500175D91FuL, 0x2A272F87F85A6C66uL), (-1, -9, 0xBFC0FA1EB44E303AuL, 0x1D800C2E3733C4C6uL)),
                ((+1, -4, 0xD72A3A0EB87D019CuL, 0xCAC297A05ED111D6uL), (-1, -9, 0x9D58329F4DC14BDEuL, 0xCEA0BBCA58839B7AuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0x9D8B46688BD98932uL, 0x023FCA69496E999BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0x9BB28BAD7CC2AC85uL, 0x49D57567F3CEC78EuL), (-1, 0, 0xADEE202A66153972uL, 0x39B421D120B8EE7EuL)),
                ((+1, -14, 0xFF2FDFC2013888F9uL, 0xCF7A2EC811922FF8uL), (+1, -2, 0xE16A427DFDA4CE31uL, 0x5BBAFA988B97DCA2uL)),
                ((+1, -10, 0xDD1681F4B36AA397uL, 0x8EF1F12EE71D8202uL), (+1, -9, 0xC73D9917B3A3F9C9uL, 0x38F8A9015A783A28uL)),
                ((+1, -7, 0xD383516D1D09F708uL, 0x6B88CA0287C8A1ECuL), (+1, -10, 0xA2CDFC7C27D1E59EuL, 0x6990FEEE7565ECF4uL)),
                ((+1, -5, 0xCD2FEF531E5C396EuL, 0x1335B07334A5AFB0uL), (+1, -11, 0x8A977C7CB72D66F2uL, 0x04591FD5209888AAuL)),
                ((+1, -5, 0xFFD5E7B4BEC6149CuL, 0x61F9B8DC75A3D099uL), (+1, -13, 0xE6239157BA60E817uL, 0xEF710F96C3B7F9C3uL)),
                ((-1, -4, 0xA601A94915705C24uL, 0x7F6EF459EA9C3653uL), (+1, -14, 0xB3624FB45294EEA5uL, 0x62FBD0BCE82B8EEEuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB12Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0x987BD31CE4FB423EuL, 0x1467F26AC1737660uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0xAD2C07DDFF60B4B0uL, 0xD04A3F64E922EB06uL), (-1, 0, 0x9DAFAAA53ECC986FuL, 0xADD9959A97BA10D3uL)),
                ((+1, -83, 0x9B00D27E08249DD9uL, 0x309FA4ABD6B55A58uL), (+1, -2, 0xBAA3C9AE65DFEE34uL, 0x090859C2AEAF061AuL)),
                ((-1, -74, 0x928B52D331E323B2uL, 0x65A5124173E48DD2uL), (+1, -10, 0xE81B75E630817368uL, 0x09AA7177FB24F9CEuL)),
                ((+1, -66, 0xA60FCF4545872A82uL, 0x77318C76D1970B4EuL), (+1, -11, 0xA3E1B480DEFF3CC0uL, 0x89858E1C57D7181DuL)),
                ((+1, -4, 0xFD6ACD65C82A21EDuL, 0x157B051557C08791uL), (+1, -13, 0xE2B2816C1E0D9B1AuL, 0x529283642E54BEABuL)),
                ((-1, -4, 0xA70C25AF06973D24uL, 0x16B05FD3F3F175A4uL), (+1, -14, 0x83AF4BFBF8E5B011uL, 0x8A6CC0B8B8A9C38EuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0xB964DFDDA134E365uL, 0x86F33B26DBF2C5D1uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0xB964DFDDC6D9EB9AuL, 0x932A26564EACDF46uL), (-1, -1, 0x97014CB6507C1934uL, 0x8916A7D987AD23F6uL)),
                ((+1, -17, 0x9A7EBA8E4AAECA20uL, 0x5D0183D59E3C58C6uL), (-1, -7, 0xEC0F1016082FA09DuL, 0x0E8B36C600709D94uL)),
                ((+1, -12, 0x8954340CDB763AFEuL, 0x32278EC291EC1F54uL), (-1, -8, 0xFF54DD5E61B16501uL, 0x466455049253A14EuL)),
                ((+1, -8, 0x8954340D0B44CAFAuL, 0x4D329439FFD006F2uL), (-1, -8, 0x9665B32EB6C76122uL, 0x48EE50008B41274DuL)),
                ((+1, -5, 0x927BF3415C6A1F77uL, 0x15EF54DFD700404FuL), (-1, -9, 0xB7CEBF78363436A6uL, 0x1E9FEF03580DAFD0uL)),
                ((+1, -3, 0x82354A017D64E3E8uL, 0xBB0B676B1E50C23FuL), (-1, -9, 0x950A82DE89DAE696uL, 0x6F2C5CBABBFE62BBuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0xBEAC1B97C7EC1D04uL, 0xA74BD39D5C2FC2EAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0xBC76B32AD1987F3DuL, 0x05140BD6B6969345uL), (-1, 0, 0xACBA51427FE98B5CuL, 0x8296A9F53026A87CuL)),
                ((+1, -13, 0x9A79F0CF397F3F7AuL, 0x55E228B2B93A7E42uL), (+1, -2, 0xDE9D9A7C9C6B75CEuL, 0xEEAF41048E8DE6C0uL)),
                ((+1, -9, 0x85E06C8079D10C36uL, 0xAC76E2D9F5386D86uL), (+1, -9, 0xBE29FA431AC8ED7DuL, 0xC364EA4BC2DDB1C1uL)),
                ((+1, -6, 0x80268D2D148796C1uL, 0x36E9CE28EC08DA2CuL), (+1, -10, 0x9A0216DA13301107uL, 0x835BFA6896A6A91BuL)),
                ((+1, -5, 0xF8F4EBC921EA1068uL, 0x6639D3D8F75F130AuL), (+1, -11, 0x81C3879019F707E4uL, 0x44E8AB77B4D3F186uL)),
                ((+1, -4, 0x9C251D865FD8395FuL, 0xD4406494C75120A7uL), (+1, -13, 0xD50EB7F98D7BBD8FuL, 0x2B10A6F73394F57AuL)),
                ((-1, -4, 0xC68D5175D201E36CuL, 0x1B3F2407A8B45784uL), (+1, -14, 0xA39AFF736F7178D9uL, 0xC286A52C0D6B86D7uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB13Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0xA8CF3DE8A4982124uL, 0xAE79E44138B701F3uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0xBFB71F00F05E4B78uL, 0x274E65F5F8E9041BuL), (-1, 0, 0x9CFDC65A3E9E95FCuL, 0xA9448114A09D6961uL)),
                ((+1, -83, 0xAB9A983ACD8880D6uL, 0x6F1C0C85545BEE66uL), (+1, -2, 0xB9233881978756C9uL, 0x2E5066C9CDFBF1A8uL)),
                ((-1, -74, 0xA23E0C6AA9A3D9C5uL, 0xD01F9AB4E7E77C13uL), (+1, -10, 0xE04D62077E3F549AuL, 0xAB2191AFD9369ECDuL)),
                ((+1, -66, 0xB7DAFE7E0AC33127uL, 0x1793F24CE61CF57BuL), (+1, -11, 0x9D625D504098A0E4uL, 0x7CC777742BDCA12FuL)),
                ((+1, -3, 0x96FCAB99D329C471uL, 0x2206709087E9D2D8uL), (+1, -13, 0xD82720BBCE4488FBuL, 0x75182ACA9A8E5258uL)),
                ((-1, -4, 0xC57BB1FD109D563DuL, 0xC2FD9A1DA66CF987uL), (+1, -15, 0xF909B00A6FCA94ECuL, 0xA1D65EB9000DF376uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -30, 0xDCEA2100566BD900uL, 0xF0B0F07DE2E42179uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -23, 0xDCEA2100810B69E3uL, 0x50873EC178E8F527uL), (-1, -1, 0x96F08A057681DC96uL, 0x614EFAC63D961519uL)),
                ((+1, -17, 0xB81870D5EABBC698uL, 0x94E2BF874FD4AF02uL), (-1, -7, 0xE874F3FF9679A317uL, 0x08A19CBAB723CD88uL)),
                ((+1, -12, 0xA3A3F2856EED1204uL, 0x3BF2B3E8C5135D28uL), (-1, -8, 0xFA1C9BF391637364uL, 0x77A6EABAFC105850uL)),
                ((+1, -8, 0xA3A3F285A50DEE85uL, 0x82F53615F65C65BBuL), (-1, -8, 0x9266644AC6ED90C0uL, 0x60DD8773BFCD2811uL)),
                ((+1, -5, 0xAE8CBE6CB37E0DDDuL, 0x456320ADF7450EEEuL), (-1, -9, 0xB1BEA84142DECBD6uL, 0x27199ADAE93F4601uL)),
                ((+1, -3, 0x9B27C5B6460D7063uL, 0x6B10290DD3AB52C2uL), (-1, -9, 0x8EBF1F33EB17C239uL, 0x51723741167CC5FAuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -24, 0xE333812020662416uL, 0x5E952CFC82B72FC8uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -18, 0xE0983A44DF2D2140uL, 0x075E081B1987F60AuL), (-1, 0, 0xABC816BCD7372A41uL, 0x698AB6F3969DA478uL)),
                ((+1, -13, 0xB81F088EED65BD76uL, 0x8D3A37BFC0C1374FuL), (+1, -2, 0xDC6C78B8819E6B3FuL, 0x700A35C6343E4CAFuL)),
                ((+1, -9, 0x9F9BD2466C3B0CC5uL, 0x800082C0FD4B82C2uL), (+1, -9, 0xB711A48F585D40D5uL, 0x2CDE71DFE59A540AuL)),
                ((+1, -6, 0x98D9D833E5B136DBuL, 0xDE6C98ADA8F03B5CuL), (+1, -10, 0x93331F79F20AFF21uL, 0x00ECAF2D57EC2ADCuL)),
                ((+1, -4, 0x949FE231F5BE23A6uL, 0x4D9F91DE9C66682DuL), (+1, -12, 0xF600D16CE2ABF9C1uL, 0x6CF89E9AE35EE473uL)),
                ((+1, -4, 0xBB5563CA361FEDD1uL, 0xCF1BE21E8157DD88uL), (+1, -13, 0xC81CCBF1E093C024uL, 0x5E7607EF882169AEuL)),
                ((-1, -4, 0xEA532D0ABE2844DDuL, 0x5FC92B4A564D5A2AuL), (+1, -14, 0x97D0FAD131B41CF4uL, 0x1F0A49D2D7D2D072uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB14Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0xBACF8F5BD2410018uL, 0x4FCDEA5F7E839880uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0xD4294D94BE44C404uL, 0x6626C27487823C0DuL), (-1, 0, 0x9C709A52800BA28EuL, 0x62BE60236542FE9BuL)),
                ((+1, -83, 0xBDE85A812F46B38FuL, 0x8157401861083355uL), (+1, -2, 0xB7F31BB12222B995uL, 0x49AC6635EF886AF4uL)),
                ((-1, -74, 0xB38CF76F1F1BF0FDuL, 0xA15C1572FDE62221uL), (+1, -10, 0xDA0E509D9058CCF0uL, 0x714AE36A05DA0094uL)),
                ((+1, -66, 0xCB79450EB8DF01AEuL, 0x0780F3AD772D2495uL), (+1, -11, 0x9838A7C9E1CD91D8uL, 0x684DEF2A021EEB65uL)),
                ((+1, -3, 0xB187B181A8D15BA7uL, 0xF32FE1E7F0C54A83uL), (+1, -13, 0xCFD5BCF08EF84E27uL, 0x3F2B12A1AC92170AuL)),
                ((-1, -4, 0xE6B1A0D85F67DE86uL, 0x3AEA7692BF35214DuL), (+1, -15, 0xEDD25A87A72C50F1uL, 0x7040DB313A0990C8uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0x81DFF84CF9E4B6B9uL, 0xFE3AF12DDEBC5BFEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0x81DFF84D11F07BACuL, 0xBC60B8E1EED699B9uL), (-1, -1, 0x96EAF54F0088C9ADuL, 0x69CA7BE617BBCABBuL)),
                ((+1, -17, 0xD8754880A277584CuL, 0x7C33A4BDBE00A36FuL), (-1, -7, 0xE5A3A534A04DED8AuL, 0x173D16A56EC5CF44uL)),
                ((+1, -12, 0xC068407289BAEEB4uL, 0x0541E22C746DEC30uL), (-1, -8, 0xF60A6C692518B2BBuL, 0x799A57E423D2FFAFuL)),
                ((+1, -8, 0xC0684072C6CD62AFuL, 0xB74E123BD52B0032uL), (-1, -8, 0x8F49D9F85A09A05BuL, 0x1811C5D03814E8E3uL)),
                ((+1, -5, 0xCD3C007ABE8DDBC7uL, 0x10D2EB08F0EB3310uL), (-1, -9, 0xAD08E7B40DA1B8F3uL, 0x7445E6417B534594uL)),
                ((+1, -3, 0xB66E395104F684E9uL, 0x23C8622E904433CCuL), (-1, -9, 0x89E0A47338B3D4A3uL, 0x51DE775AE562F867uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0x8591F63D84E3903FuL, 0x67F59B337FD09CC7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0x840CC50631815056uL, 0x03B191719F538CCBuL), (-1, 0, 0xAB06B31B1B23375BuL, 0x88EA09CABE100D44uL)),
                ((+1, -13, 0xD8892ADE8F69E87FuL, 0xB4B0FE84E449C541uL), (+1, -2, 0xDAAE51B659AD47B6uL, 0x20A0E722FC49929BuL)),
                ((+1, -9, 0xBBBF1B362547D56DuL, 0xDD2B27C7734A28A8uL), (+1, -9, 0xB1688FA76DE9F2C8uL, 0xD928B30D1A4A47FAuL)),
                ((+1, -6, 0xB3DD128908F5AF59uL, 0x1453F64223A55C14uL), (+1, -10, 0x8DCFD474B25D549CuL, 0x1BE925FC7253828AuL)),
                ((+1, -4, 0xAF099ADC97599416uL, 0xA54F76E579D458FDuL), (+1, -12, 0xEB6425365A0DDFD0uL, 0x6E56FE00AABD102CuL)),
                ((+1, -4, 0xDD7CC7594A6D11A3uL, 0x7940BA9F42FE2885uL), (+1, -13, 0xBE0B1DCAB2E19BFAuL, 0x8D9AC0F58C6168DDuL)),
                ((-1, -3, 0x88ABCBCADBDDFD2AuL, 0x7DCF74DF22D04DBCuL), (+1, -14, 0x8EC0618F287D9C3BuL, 0xB7E1FD6D4967D8FCuL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB15Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0xCE712EC45DF3AC8CuL, 0xC0FB0FDAE869772FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -93, 0xEA756AF47FE0C198uL, 0x1FAA3F1EB52BAB6FuL), (-1, 0, 0x9BFF657C47AF388DuL, 0xDD98D4E4F37F55F7uL)),
                ((+1, -83, 0xD1DE556A1D6C2E75uL, 0x3689B43A9A02A90EuL), (+1, -2, 0xB6FFFEEEF9E0369CuL, 0xD25787368A01298EuL)),
                ((-1, -74, 0xC66CF8492B6E625EuL, 0xA89D299146E2DD91uL), (+1, -10, 0xD4FAE831AA9DA09AuL, 0x3303CC25A80E2258uL)),
                ((+1, -66, 0xE0DE122B552ADD3DuL, 0x27AF26521CBC921AuL), (+1, -11, 0x940CFCC39DA25022uL, 0x2DF8143A33A9FF6CuL)),
                ((+1, -3, 0xCE57B22D708385F8uL, 0x2FC90E7FB9ECB4FDuL), (+1, -13, 0xC927DA9A5E820A06uL, 0x14FC3435A5CAF1F9uL)),
                ((-1, -3, 0x8558BA2F18128137uL, 0x7313533055FB2059uL), (+1, -15, 0xE4DF7E9695684CBAuL, 0x2063791A1ED6C2F6uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0x96F40F605545715BuL, 0x280B9D732AF3EC5DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0x96F40F60704BF949uL, 0xEFCBDBB1F776988CuL), (-1, -1, 0x96ECCAC5CDA8E511uL, 0x864A6FBADAE8FC0AuL)),
                ((+1, -17, 0xFB96C44B9AEA14A8uL, 0xD3FF4852FD4AAE00uL), (-1, -7, 0xE36813F7EBBDBF6DuL, 0xB17EA450FED84AE9uL)),
                ((+1, -12, 0xDFA27598C2207358uL, 0xCE7725BDD7B07909uL), (-1, -8, 0xF2D2B3B36F169BE9uL, 0x721B9026F098EB3BuL)),
                ((+1, -8, 0xDFA2759906C3ED4EuL, 0x18FC2777D748B055uL), (-1, -8, 0x8CD501C60E797687uL, 0x274193E54751A7FFuL)),
                ((+1, -5, 0xEE8B281B0CCDBE02uL, 0xBF2099B641E4802FuL), (-1, -9, 0xA951FAF6619444B6uL, 0xEC761CDD72D9C8B7uL)),
                ((+1, -3, 0xD409EAC31CF96809uL, 0x6C33AAAD89E6FA17uL), (-1, -9, 0x860C2EBDD5BDB1A3uL, 0x5616475569F94C99uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0x9B3FA0399E98E9DCuL, 0xC51B7E062B2E454CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0x997E3CFF8F5ABA7DuL, 0xECDD6A4B15E455A5uL), (-1, 0, 0xAA6A78F0236CFD0DuL, 0x55DC6DCED3F3F520uL)),
                ((+1, -13, 0xFBB9D377CAC6E4DBuL, 0x395DD8D71C5428F1uL), (+1, -2, 0xD9472B476134C048uL, 0x2C3F7FDC9FAFF5D5uL)),
                ((+1, -9, 0xDA4B87441177C3CBuL, 0x7F855D0B947FC313uL), (+1, -9, 0xACD11601D0552BCCuL, 0xB622BC194EA0A58DuL)),
                ((+1, -6, 0xD1315ED4A1FE9205uL, 0x378494DA66619D26uL), (+1, -10, 0x89787E860298BD2DuL, 0xBF49986A9D044C60uL)),
                ((+1, -4, 0xCBB8976C88F6B2BDuL, 0x57A9E2C281B653D2uL), (+1, -12, 0xE2E67AD13DD63249uL, 0x594764B7CCFD8D41uL)),
                ((+1, -3, 0x814DD974B2D73BF3uL, 0x970BD2276D54ACE9uL), (+1, -13, 0xB60B626F26C79CECuL, 0x523B0BB382F57F01uL)),
                ((-1, -3, 0x9DCF44800D2B9CD9uL, 0xD63B3D909C73E3EFuL), (+1, -14, 0x879E2E248F61DD7FuL, 0x50AE478658EA0797uL)),
            }),
        });
        static ReadOnlyCollection<ReadOnlyCollection<(Hexcode c, Hexcode d)>> PadeB16Tables = Array.AsReadOnly(new ReadOnlyCollection<(Hexcode c, Hexcode d)>[] {
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -104, 0xE3ADD804D7A5D3B9uL, 0x2BBE242A06536F0BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -92, 0x814A2D9F4A6D95EAuL, 0xA70F0C47252BBFC7uL), (-1, 0, 0x9BA3D492DD9505A3uL, 0x7D27738F591C5498uL)),
                ((+1, -83, 0xE7762E3526BC7A5BuL, 0x338369AC4F2F0D2AuL), (+1, -2, 0xB63BEDAECA9187AEuL, 0xC712C4FE4B842D90uL)),
                ((-1, -74, 0xDAD80F9BB42B2308uL, 0xFE29C4F8902877B0uL), (+1, -10, 0xD0CD77CAA23D2C7DuL, 0x38CF0A0667741CD8uL)),
                ((+1, -66, 0xF8029DA23B89AC2DuL, 0x3E5066C20521D7DFuL), (+1, -11, 0x90A2AC57BF8209DEuL, 0x031C412BC3B5B322uL)),
                ((+1, -3, 0xED6DA1EBC757FE96uL, 0x1F60A48A478A7065uL), (+1, -13, 0xC3B68412A99D9F1EuL, 0x01741847D94047EAuL)),
                ((-1, -3, 0x98BF1C0D84611B47uL, 0x42428BE9D1783E18uL), (+1, -15, 0xDD9E89E19F7C2F3CuL, 0xDAD482CA1104A252uL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -29, 0xADB20A78BA1F9BA2uL, 0x81D3A8C7E08C3D5EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -22, 0xADB20A78D85FDDA0uL, 0x1F3E9F425549AE87uL), (-1, -1, 0x96F38B634DF560EDuL, 0x6FA3962B2E39160EuL)),
                ((+1, -16, 0x90BF08BA275B400BuL, 0x2355A11F8A03012FuL), (-1, -7, 0xE19E07EFC4ADE8A6uL, 0x5D127CDC61CCB8F3uL)),
                ((+1, -11, 0x80A9CEDE7B73AF33uL, 0x5527E4F9CAA9FA8FuL), (-1, -8, 0xF0402255D9FA79C7uL, 0x5BDD9053AD991F56uL)),
                ((+1, -7, 0x80A9CEDEA1DDE3DEuL, 0xAFAF73606AC0E2ACuL), (-1, -8, 0x8ADE8718400AAF16uL, 0x3E7457F40E22247CuL)),
                ((+1, -4, 0x893DA97634E05B30uL, 0xB94588190473A7A5uL), (-1, -9, 0xA65A61B5A41FD0F2uL, 0x18D22966E546BDF6uL)),
                ((+1, -3, 0xF3FBD7EF0A197D94uL, 0x5CB844F9BC0834EFuL), (-1, -9, 0x82FE12878BBF6636uL, 0xBED9D73F5954814FuL)),
            }),
            new ReadOnlyCollection<(Hexcode c, Hexcode d)>(new (Hexcode c, Hexcode d)[] {
                ((+1, -23, 0xB2A37A9EF12A8970uL, 0x105F146B97FCC6F0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -17, 0xB0A13C17B50809A3uL, 0x6A09350D4CFE015CuL), (-1, 0, 0xA9EB06E4BCC9F428uL, 0x019193F749FBA91AuL)),
                ((+1, -12, 0x90D913CB5062D935uL, 0x77DFE76EDA3F76B1uL), (+1, -2, 0xD8231D27CDF4A264uL, 0x01DC2E412ABA1866uL)),
                ((+1, -9, 0xFB420B52EE8C307DuL, 0x78235D7CF89DE6A5uL), (+1, -9, 0xA90A55568EB83091uL, 0xE5C35571359D0149uL)),
                ((+1, -6, 0xF0D797B2242A8E3EuL, 0x97DB72D9C35C3C38uL), (+1, -10, 0x85EBA994E078781CuL, 0xCADDA1EFA63B1D1FuL)),
                ((+1, -4, 0xEAAD890095E4066FuL, 0x13BA0D42FF77292CuL), (+1, -12, 0xDBFF26DC42100EEAuL, 0x3FF514F3F7A5C9CCuL)),
                ((+1, -3, 0x95591B2F29ACF199uL, 0x2A7812837BB21C6DuL), (+1, -13, 0xAF94411A24679590uL, 0xE8FF2EBDC8C7F2C4uL)),
                ((-1, -3, 0xB495C83FCB5320C6uL, 0x30CE3324F30F8F60uL), (+1, -14, 0x81E580ECBCAA4AB6uL, 0xF1B539F18B256FE8uL)),
            }),
        });
    }
}
