using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class EulerQTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(Mp05PadeTable), Mp05PadeTable },
                { nameof(Mp075PadeTable), Mp075PadeTable },
                { nameof(Mp0875PadeTable), Mp0875PadeTable },
                { nameof(Mp09375PadeTable), Mp09375PadeTable },
                { nameof(Mp0984375PadeTable), Mp0984375PadeTable },
                { nameof(Mp1PadeTable), Mp1PadeTable },

                { nameof(Mn05PadeTable), Mn05PadeTable },
                { nameof(Mn075PadeTable), Mn075PadeTable },
                { nameof(Mn0875PadeTable), Mn0875PadeTable },
                { nameof(Mn09375PadeTable), Mn09375PadeTable },
                { nameof(Mn0984375PadeTable), Mn0984375PadeTable },
                { nameof(Mn1PadeTable), Mn1PadeTable },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp05PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xDCF3AC133B19A6F2uL, 0x23A7861C8E4EE2FCuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0x96A2749DB9B33475uL, 0x9751C1C50B690DF4uL), (+1, -10, 0xD41C3C459EA92400uL, 0x9871769D820565FCuL)),
                ((-1, -2, 0xD8349512CC5D78DDuL, 0x424F3CB2AB19ADD1uL), (+1, -6, 0xE92A597636557782uL, 0x21E24BC1C41488E1uL)),
                ((-1, 3, 0xE81B11264C669FD9uL, 0x579875AF19AA5109uL), (+1, 3, 0x89CA3DA97DB08DDAuL, 0x7E75DFF53E425770uL)),
                ((+1, 4, 0xAACB6C6D6D649BCDuL, 0xC6CA12D842682F66uL), (-1, 3, 0x9AF679F0A01FC579uL, 0x4E6D0296AA5E4D1FuL)),
                ((-1, 3, 0xFC56C276E2D29EE9uL, 0x8B57B93345EC9C41uL), (+1, 2, 0x88D234636C2D36B1uL, 0x34B5CC142939CDB6uL)),
                ((-1, 5, 0x9E65AA589460DAC3uL, 0x44C932DE4B8C8963uL), (+1, 4, 0xDDD535D483C3E6AEuL, 0x8DD7724A8BA252A8uL)),
                ((+1, 6, 0xCC992A5FD3E4F8DAuL, 0x7D6BADD32CC2907CuL), (-1, 5, 0xD8AB126A0CB60385uL, 0x796CECBBC297CC04uL)),
                ((-1, 6, 0xE1700C00600F531FuL, 0x904A7C803D200CCCuL), (+1, 5, 0xB70060AAE4316788uL, 0x4E955003733B52C2uL)),
                ((+1, 3, 0x9C2786EADF0152A4uL, 0x69B65D4966495FE8uL), (+1, 4, 0xA582C3279F96B81CuL, 0xBECDF067312B8F72uL)),
                ((+1, 7, 0x89F9903473860669uL, 0xD51B697E7BE9E417uL), (-1, 6, 0xB7575EBA40998A96uL, 0xF63CF3644E4B079BuL)),
                ((-1, 7, 0xD0568DCBF72BA2E0uL, 0xE3F9D5797CA1C8F7uL), (+1, 6, 0xCEFAED283D564644uL, 0x2CC1EAB043DEE630uL)),
                ((+1, 7, 0x85EE95F936136FC5uL, 0xD2C821EB8AD4EF73uL), (-1, 5, 0xA0FD5405E529B137uL, 0xB6E35372CC73F946uL)),
                ((-1, -1, 0xB2C08EE12CA25B22uL, 0xE987D6282E0D8A68uL), (-1, 4, 0xFDEC71F8E6438B05uL, 0xB9D2EC792858E96FuL)),
                ((-1, 6, 0x97EDCC93656CB626uL, 0xC58494EFAC4907B5uL), (+1, 5, 0xDB6F21D19A6D9E56uL, 0xE099ED9852B6C06DuL)),
                ((+1, 6, 0x829A757C72360E24uL, 0x8ACE4937F795C547uL), (-1, 5, 0x807C09444D04840FuL, 0x6DAF2F3BEC4D567BuL)),
                ((-1, 4, 0xCBFBB81C5966900BuL, 0xF2F012A932B48390uL), (+1, 2, 0xCB7BE3D68D2316F2uL, 0x3D63BCC5172551DFuL)),
                ((+1, 1, 0xCB8FB39D36F6BBF1uL, 0x38C812F2A8108FCCuL), (+1, 1, 0x8FF78CF13D9BFC92uL, 0x9A2145C2FD2A524CuL)),
                ((+1, -2, 0xCBE1413979E4EE91uL, 0xE64C0F009A26DA4BuL), (-1, 0, 0x889C4144279F9337uL, 0x439BFE9A34F180D3uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp075PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xF3E2501109A31FF0uL, 0x10054826F83B9015uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 4, 0xAB286ADF702B7F65uL, 0x46833E4A2D20CED7uL), (+1, 3, 0xBB2250E6A8DB0C43uL, 0xE0C22EC315838ADBuL)),
                ((-1, 6, 0x8CF74D7F7F6CC479uL, 0x3D8D710ACC2088D8uL), (+1, 5, 0xA7C0E04D924ADCFCuL, 0xC2A84C96ACCCD46DuL)),
                ((+1, 3, 0xE427933F83A1718DuL, 0x9045EA8A2FA2D1A3uL), (+1, 2, 0xE02C22A50B8A53CCuL, 0xA7DD0EACA377F0BFuL)),
                ((+1, 8, 0xCDCF90661CBDF959uL, 0xDB41CCE76D272077uL), (-1, 7, 0xE189706698F2FB69uL, 0xD2A32CA56D87F35AuL)),
                ((+1, 7, 0xC751E4D2CD2E48E1uL, 0x9F7D41B458C0B74EuL), (-1, 7, 0xC1A1614AB7CDF993uL, 0x4671905BE8BDC926uL)),
                ((-1, 10, 0x93FDC741670E3073uL, 0x15D5DC89D3DD733EuL), (+1, 9, 0x9938EAF1D60932A5uL, 0x9FEE90CBB2E571D6uL)),
                ((-1, 9, 0x897C90A1197507C7uL, 0xDE25D19123086C42uL), (+1, 9, 0x87EF8D4950C59F19uL, 0x5ED85CD303C2167CuL)),
                ((+1, 10, 0xEC36DDE20D8DAD7FuL, 0xC088CD43DE498EA0uL), (-1, 9, 0xF1BE52BAB60C8F14uL, 0xB2717B9A545AF4C5uL)),
                ((+1, 8, 0xBAEECE3B03A02281uL, 0x934DF6D8EB40A08DuL), (-1, 9, 0x8F02CAF365A60367uL, 0x708C85D5063B4A37uL)),
                ((-1, 10, 0xB6F6CF7A7F5C75A4uL, 0x19D342DA182F4682uL), (+1, 9, 0xC83698387F446CADuL, 0x6915DE9C393B0F0FuL)),
                ((+1, 6, 0x8E1139FCB4861556uL, 0x224F03B01643D152uL), (+1, 7, 0xCA64E77D80781BC3uL, 0x247D0CA2581293D7uL)),
                ((+1, 8, 0xB93B6F295E8087D6uL, 0x82CB52EC731F460AuL), (-1, 7, 0xF4B27A0C711E9254uL, 0x9EF7716BE2066B0CuL)),
                ((-1, 5, 0xB3E2413C4242EDECuL, 0x9E8BED5951DF1FD1uL), (-1, 4, 0x8F5EDDC10AF33CFAuL, 0x8BC59D955D35D46FuL)),
                ((-1, 2, 0xE00EC67E5E1BB83FuL, 0x1A5DAD4BAF5035DEuL), (+1, 3, 0x85C54AA469C6AE0EuL, 0x0CDEFA479ED0600DuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp0875PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 1, 0x825E041C620DBA80uL, 0x5C0743E5CBF3F65FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 6, 0x8C3AD421F167959BuL, 0xFE5B7C707F69F078uL), (+1, 5, 0x8C2FD2C189E273DCuL, 0xEB81BF47FA025CE4uL)),
                ((-1, 9, 0xF9C87C7A5189B8FCuL, 0x1118BE86DFE0BCACuL), (+1, 8, 0xFF9BC2AEC05AB88BuL, 0x3C5B31B57078EB13uL)),
                ((-1, 12, 0xEC7BF3DDCC54AC40uL, 0x0B4C4BB8C9F8E892uL), (+1, 11, 0xF9CA66BA5CD14BBCuL, 0xF6341F555048A25CuL)),
                ((-1, 14, 0xFBFD345981F25B6FuL, 0xD8F17B740EC9AC25uL), (+1, 14, 0x8B6667247F07E3EFuL, 0x4FA531BD7962DB74uL)),
                ((-1, 16, 0x8EE026428EED6EEDuL, 0xD28B458E5BA3A5C2uL), (+1, 15, 0xAB20E728B6432FCFuL, 0x8B57C673A98AD59CuL)),
                ((-1, 15, 0xEF4F15E6C76F579CuL, 0x61E0B8E47689E4CAuL), (+1, 15, 0xB31CA9A77910FADAuL, 0x52D85F8D24718DFFuL)),
                ((+1, 15, 0xDFB0EAB3616F90B7uL, 0xDBB4191FA2E16375uL), (-1, 14, 0x94F05154FC2153FBuL, 0x329822C63EBBE36AuL)),
                ((+1, 16, 0xE303D1AB699287E6uL, 0x4737549E7678B455uL), (-1, 16, 0x8FCD89FC21206144uL, 0xD2243463C2C90EBAuL)),
                ((+1, 10, 0xAC41EAF727E06DC9uL, 0x1260D38278BF261EuL), (-1, 14, 0xA41C461FEF380739uL, 0x848F4F000F970A8FuL)),
                ((-1, 15, 0xC9B9AAEBD8103EB2uL, 0x96FB5143A7A756A2uL), (+1, 14, 0xE6838C67AFAB541BuL, 0xE3E4EEDAD30C205BuL)),
                ((-1, 12, 0xAFF90B70DA32088AuL, 0xFC8898F497A4CE5BuL), (+1, 13, 0xA72C728645184AF5uL, 0xFB493208AD351504uL)),
                ((+1, 11, 0x833D836E207CBDD2uL, 0x12201FE8B63C22ADuL), (-1, 9, 0x83E10FFAD9196D12uL, 0x96BCC1312997B7C4uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp09375PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 1, 0x8844B3E89951E18CuL, 0x97DFC5514F738560uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 7, 0xA008E6135A9581C7uL, 0x1DFBBEFB975123E5uL), (+1, 6, 0x97F5EB717EF16774uL, 0x18493F28278F9189uL)),
                ((-1, 12, 0x9FC728D762D0485FuL, 0x416006211A490773uL), (+1, 11, 0x99CC24D6AF8B0369uL, 0xFCB1F8D4C7962361uL)),
                ((-1, 16, 0xB0BC3E00EC833124uL, 0x5B31544A04ABFD6DuL), (+1, 15, 0xAD21F732BC137C94uL, 0xF5AF9A64D69E1524uL)),
                ((-1, 19, 0xEC6EF9C298F85EA8uL, 0x4731982103D24D6AuL), (+1, 18, 0xED15B0AB0F97B602uL, 0x105E62F6A786A965uL)),
                ((-1, 22, 0xC3A3CAE344004D15uL, 0x90E3578290E31635uL), (+1, 21, 0xCAA5FA5793EE722AuL, 0x1B316D8A76819F01uL)),
                ((-1, 24, 0xC3B586D1274AF3C9uL, 0xB56B8C3AFEC5E6A3uL), (+1, 23, 0xD4BFA8104B04F361uL, 0x58459C0D8517A527uL)),
                ((-1, 25, 0xD9260A17122E3A7CuL, 0x3D8E67ADD952D1F4uL), (+1, 25, 0x800EEA9AE280930BuL, 0x85975A6258BEA250uL)),
                ((-1, 25, 0xC9E91223511460B3uL, 0x285EA850E259BD74uL), (+1, 25, 0x905F71A799F90CCDuL, 0x5838DB43512E3991uL)),
                ((+1, 23, 0xC8FE1B7FA5F19D57uL, 0xB1446844825541A8uL), (+1, 21, 0x92295CA0F59E74D5uL, 0xF6912A7E25C0FB76uL)),
                ((+1, 25, 0x993EB3F248798815uL, 0x78307CD4ED6E4BE9uL), (-1, 24, 0xBB872DD33587807DuL, 0xAA4B5768560DBF96uL)),
                ((+1, 22, 0x86069221456064F9uL, 0x0D5D0DEFFB022E80uL), (-1, 23, 0x85183E419036B023uL, 0x7947F80C3CAF2397uL)),
                ((-1, 21, 0x8527B63B1A4F434BuL, 0x78DA45C9C763FC28uL), (+1, 19, 0xB3601FE27222C552uL, 0x55064D42857A44E8uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp0984375PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 1, 0x8EC0C691B60D686EuL, 0x7EA6414D07CDB106uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 9, 0xD288779E60CE521CuL, 0xED11A97A8A5D8FEFuL), (+1, 8, 0xBD6B0CB68F4833BDuL, 0x0831E34B6E9703EFuL)),
                ((-1, 17, 0x8971ED2D3A33CB57uL, 0x745BF06E86CC4E11uL), (+1, 15, 0xF855AA3F18CAB7F3uL, 0x9889252BBBFD55CAuL)),
                ((-1, 23, 0xD1818C217774F5AEuL, 0xDA5E112E2697B2A3uL), (+1, 22, 0xBE363D0BA5FB7DB2uL, 0xA80E65F8A00B1D18uL)),
                ((-1, 29, 0xCF00E29B77EF0B26uL, 0x86C7663D0524D0D7uL), (+1, 28, 0xBD18E6887452B38AuL, 0xBBFC41459179ED53uL)),
                ((-1, 35, 0x8B414C344A3555A5uL, 0xCDCE5AB4C8287D40uL), (+1, 34, 0x8030C5162A48C6CDuL, 0xE2EEF0E2C432854CuL)),
                ((-1, 40, 0x826EC4AE4940DD21uL, 0x9D70B6B576BCDE3CuL), (+1, 38, 0xF280053CC11FB541uL, 0x2B798A0904C6B5D1uL)),
                ((-1, 44, 0xAB0003C0EAD896D4uL, 0x1DF0267EABBD06ABuL), (+1, 43, 0xA0FFAA682217780EuL, 0x0E51672F55633B39uL)),
                ((-1, 48, 0x9B94B8CD0206B7D3uL, 0x323127645711B88EuL), (+1, 47, 0x94FEF51C4459479EuL, 0x23397B31D3B8237DuL)),
                ((-1, 51, 0xC0132115F2FFF3FEuL, 0x09D193A800496627uL), (+1, 50, 0xBC55374C329C5953uL, 0x8B17EC8A929307BEuL)),
                ((-1, 54, 0x9A527E52A1F6D335uL, 0x0109E9BFC52669B4uL), (+1, 53, 0x9C9B5B06C8E7DDE6uL, 0xB4C9A77718BDBD5CuL)),
                ((-1, 56, 0x95C1843ADE8EB8C1uL, 0x6C1ADA55927EECD3uL), (+1, 55, 0xA07C6247EB58691DuL, 0xDFC77D7033863FFBuL)),
                ((-1, 57, 0x95FEEC7F9D4D88C2uL, 0xB6A591A3B1D26BE5uL), (+1, 56, 0xB225E298EAF839FEuL, 0xB4FCE4D16B1B5FBEuL)),
                ((-1, 56, 0xAA5C1C9535F295A9uL, 0x0BA8F9D1AA99A392uL), (+1, 56, 0x90AD1AE47EF7B0F7uL, 0x4DA7EF6FC2BC771AuL)),
                ((+1, 56, 0xDD55C5A00B89A819uL, 0xF70CB7E9DAADC972uL), (-1, 55, 0xAD329DD1EDFF0382uL, 0xE75374E5F9225566uL)),
                ((+1, 56, 0xAAB6015709E594F1uL, 0x74A8F4C89A18ED45uL), (-1, 56, 0x852445BB7E21423BuL, 0x6C36940FF217C0A6uL)),
                ((-1, 52, 0xD2978095E54F444BuL, 0x9589C6C92F919BA0uL), (-1, 52, 0xED1AAE8F52ADA8C6uL, 0x66A56F338759EFF8uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mp1PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 1, 0x928D3312983E9918uL, 0x73D8912200BACE40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 22, 0x84305E412FF98F72uL, 0xF724E313E6B8F2BFuL), (+1, 20, 0xE6E96CCF14BFD335uL, 0x4DA036BB357C8B51uL)),
                ((-1, 40, 0xD3475F0953C1FE59uL, 0xB8B6CE0065092694uL), (+1, 39, 0xB8893E6C24424BBAuL, 0x1D9723FE961614ABuL)),
                ((-1, 58, 0x8555D9EFEE89388EuL, 0x20EA03517F79DBDCuL), (+1, 56, 0xE8EBC4190B5CC5FEuL, 0xC388D8D726526622uL)),
                ((-1, 74, 0xA88DD380E078410BuL, 0x843CF9370F80201FuL), (+1, 73, 0x9339D4C9EF5C9A49uL, 0xEC902A27A1A18162uL)),
                ((-1, 89, 0xF334412649918F9FuL, 0x73D9D4757BE62294uL), (+1, 88, 0xD47036307741D247uL, 0x8CF8890AC9E971ECuL)),
                ((-1, 104, 0xD9940A2D8748C80AuL, 0x71E46FD4ECCAD35FuL), (+1, 103, 0xBE106ACC9576611CuL, 0x79827598AFBEAA93uL)),
                ((-1, 118, 0xFF9DE7741DFDDFD8uL, 0x2F5CE678562AB71FuL), (+1, 117, 0xDF4EC531B2607FB5uL, 0xD059191B0A14B770uL)),
                ((-1, 132, 0xCDA06E2929A57F43uL, 0x316C08E0664CD270uL), (+1, 131, 0xB3A6DE8C0FE4A592uL, 0x4A0ACB9F46702279uL)),
                ((-1, 145, 0xE9E2B8D528B3AF03uL, 0xCF1132573EA28C0CuL), (+1, 144, 0xCC5D0FAD2629078FuL, 0x699D117E4D765B91uL)),
                ((-1, 158, 0xC0DBE19BDBF5B777uL, 0x10CDCB256D065744uL), (+1, 157, 0xA889CE22792D42BDuL, 0x7FBB2B132FD2E34AuL)),
                ((-1, 170, 0xEB46BA5862E1528DuL, 0x02BE7C639938682FuL), (+1, 169, 0xCDA41271452A4855uL, 0xD99D7C595A5C7A99uL)),
                ((-1, 182, 0xD7D8383DB81E8166uL, 0xBEFB4DC6C98B808BuL), (+1, 181, 0xBCB1F3CB983D9D76uL, 0xB4E41D6E395D2135uL)),
                ((-1, 194, 0x96F3A8ABC2218FEEuL, 0x8045AD6FCAE09DA4uL), (+1, 193, 0x83FF3D333EAF97B5uL, 0xEFD7E9D0833650D7uL)),
                ((-1, 205, 0xA2C984F89B325731uL, 0xBE40B88074BAF42FuL), (+1, 204, 0x8E635D5FEC1326F5uL, 0xE1453F990CC8CBC7uL)),
                ((-1, 216, 0x88A34D06BBA2A4BFuL, 0x1E3430983248A07EuL), (+1, 214, 0xEF1D85EE726DCA07uL, 0xE5252CC362423E0FuL)),
                ((-1, 226, 0xB3F42580090EFB46uL, 0xEF68D9E335406459uL), (+1, 225, 0x9D8654FA29ACEF4AuL, 0x64E58AC6F73387AEuL)),
                ((-1, 236, 0xBB29E71644A57008uL, 0x689BF378487CD0E9uL), (+1, 235, 0xA3EAE09F44C75485uL, 0xB8A8A9F89F5A064DuL)),
                ((-1, 246, 0x9A909C15647E60C8uL, 0x039A9BCE910EF83BuL), (+1, 245, 0x87727D289F3B7426uL, 0x5CEF66EC7E9E5405uL)),
                ((-1, 255, 0xCB97D863733B0284uL, 0x75D0A4AD50A25EA9uL), (+1, 254, 0xB2891B23F8B76B3DuL, 0x549C4E65643585E7uL)),
                ((-1, 264, 0xD69AAF6466E0B95CuL, 0x465565D51B999CC6uL), (+1, 263, 0xBC58AC983E6E371BuL, 0xF35AB5649FC168E1uL)),
                ((-1, 273, 0xB57BB46A12AD3880uL, 0xEE3A8A3679DC9910uL), (+1, 272, 0x9F6ED1F5EB2F93DEuL, 0xF6F7030BC6437600uL)),
                ((-1, 281, 0xF6AB13CE561FBDE4uL, 0x59CFF92074B8CC67uL), (+1, 280, 0xD8F286EAE8AB5E5EuL, 0xCB22507AB263051EuL)),
                ((-1, 290, 0x86D2C344DE309A69uL, 0x22D2D1314A968CC7uL), (+1, 288, 0xED7AFAF7F376DDA2uL, 0xCF45CB30D7CA63B4uL)),
                ((-1, 297, 0xED1029FAE1A6F34BuL, 0x2562387893C7B8BBuL), (+1, 296, 0xD11F251AB564E0D6uL, 0x6ED8C1AB7B792D03uL)),
                ((-1, 305, 0xA77638D86E484408uL, 0x430AC8A7EDCD3D7CuL), (+1, 304, 0x9402229D1118AF00uL, 0xB4D17572E5390A98uL)),
                ((-1, 312, 0xBDBDE117D3C10906uL, 0x7BC8EE2C29B0F34AuL), (+1, 311, 0xA815F0F38F2C40E8uL, 0xF5E3BC20B1D3AA3CuL)),
                ((-1, 319, 0xABE99A7FB537B158uL, 0x852C650E8237BE2CuL), (+1, 318, 0x98B6273EAE43BA49uL, 0x50817A2FC330ED3EuL)),
                ((-1, 325, 0xF816C16B2A724B32uL, 0xE85FBAE5B68C9464uL), (+1, 324, 0xDD1CF22834933F84uL, 0x29AB0CB55DEBDEF4uL)),
                ((-1, 332, 0x8DCA8D01405D9CB0uL, 0x9EDEF98AFB11DED1uL), (+1, 330, 0xFDC4C2FB37B36D2BuL, 0xC197E1DC309CD3BBuL)),
                ((-1, 337, 0xFEF7A9F0464BDEE1uL, 0x0C230E286F813B46uL), (+1, 336, 0xE54A794375663E23uL, 0x59A1782EDBD39D1DuL)),
                ((-1, 343, 0xB2B609DF54400976uL, 0xBA45907D30F2A3B6uL), (+1, 342, 0xA1B289EDC62860A4uL, 0xC79E94D26513BBDFuL)),
                ((-1, 348, 0xC11AED386458C6CBuL, 0xC3C17FD011D0A105uL), (+1, 347, 0xB00F4E544C0FDDBAuL, 0x3ADA8E2BEFF0CF4AuL)),
                ((-1, 353, 0x9E87D613D2FE8ADEuL, 0xF5F803FE5212C00FuL), (+1, 352, 0x91F1EA2ACC3BA75AuL, 0x8AF35F325767640AuL)),
                ((-1, 357, 0xC21B942F106228A2uL, 0xDCBC6CD315898C6FuL), (+1, 356, 0xB4F44219DD7E5293uL, 0x0239EB9CC20572BFuL)),
                ((-1, 361, 0xACECFE29B5255789uL, 0xE9317C6996DD85C7uL), (+1, 360, 0xA3EA32694BC70C8FuL, 0xF392AD29AA412F7EuL)),
                ((-1, 364, 0xD8BEC64612308077uL, 0xEC0CA89A2D6FBDBFuL), (+1, 363, 0xD2343BA1BB938B1AuL, 0xF2538D813C889172uL)),
                ((-1, 367, 0xB5F979584CEC8AC1uL, 0x5CBF6067FB715DE3uL), (+1, 366, 0xB668857CA82E0DCCuL, 0x5A666DBD06877AAEuL)),
                ((-1, 369, 0xBD27F202724F439CuL, 0x133181A9AC15D610uL), (+1, 368, 0xC7B094DD75F08333uL, 0xB8F1F3025D84781DuL)),
                ((-1, 370, 0xD028AF214E47C258uL, 0x9E1B98D4012713BDuL), (+1, 369, 0xF2007C61E0536081uL, 0x1222F4D369854825uL)),
                ((-1, 370, 0x898FED2D3AA57073uL, 0x16FB34337F42441DuL), (+1, 369, 0xDD259DA7F50B1E4CuL, 0x16C055566544C411uL)),
                ((+1, 370, 0xB7AEEF0788D29E3EuL, 0xE813488123F86CB3uL), (-1, 369, 0x8C054219990B3DB4uL, 0x68C5272BB7844992uL)),
                ((+1, 370, 0xB3674C340C16400AuL, 0x79D5549EAF7186C0uL), (-1, 370, 0x82BEBDA615BD72BEuL, 0x353D3DF327463930uL)),
                ((-1, 365, 0xEE62C547EEE9B564uL, 0x0B345E227342D50AuL), (-1, 367, 0xA1FE91583BC090F7uL, 0x8007316055654E3BuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn05PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xB6927179DAF03043uL, 0x483ECE8AAD7A1770uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x935CEDF753513133uL, 0x5915639C28C335DBuL), (-1, -1, 0xB99E91A3091D7856uL, 0xD445DE189E4D8080uL)),
                ((-1, 2, 0xA36CA0A15D8FF7A7uL, 0x5B75EEF603A3A0CEuL), (+1, 1, 0xC21AFD3A5F13345CuL, 0xE5CA20F02A73CF0EuL)),
                ((-1, 1, 0xAF5B3EC8EFF81A78uL, 0x0839876FA9390AD4uL), (+1, 1, 0xB0CDAD26A995232BuL, 0x0132F36C3200DAC9uL)),
                ((-1, 5, 0xAAE7CF79284362C8uL, 0xEC8FC65F4F03D913uL), (+1, 4, 0xE36E55C7615817A2uL, 0xAFDA4BD6FB0A4D9DuL)),
                ((-1, 5, 0xB4D66C5ECD320695uL, 0x30D264776A92E391uL), (+1, 5, 0x8810FEEC8D641297uL, 0x63595B38289DE74FuL)),
                ((-1, 6, 0x8C557B634ECC9854uL, 0xD53C27F7F20D5439uL), (+1, 5, 0x94B1EEBF956F1553uL, 0x7608231E1A7411FFuL)),
                ((-1, 6, 0xEE398F1AB5C0CF7EuL, 0x498469C18EEB745EuL), (+1, 6, 0x9E21944C759481EFuL, 0xF72BF6F719C6EDD5uL)),
                ((+1, 5, 0xA352087A7A390C2CuL, 0x9664333A86204060uL), (-1, 5, 0x9470595108283244uL, 0xA62369613741E214uL)),
                ((-1, 8, 0x927F4C89F221C397uL, 0x8B77F256AE2848EBuL), (+1, 7, 0xBB29EC6AED0E0231uL, 0xDA0D07BE30205F68uL)),
                ((+1, 8, 0xA592ECA1740C652FuL, 0x6086C7DE798B6AC0uL), (-1, 7, 0xC7E16382C34050DEuL, 0x25011C90A5C86B71uL)),
                ((-1, 9, 0x8427E180E26065E2uL, 0x29263C95996338C2uL), (+1, 8, 0x81885CB73944CE39uL, 0x6C48F70B2F851B2FuL)),
                ((+1, 8, 0xE36C1F6B7B561369uL, 0x4B8BDF0420B7E5B9uL), (-1, 7, 0xA04B252E807D813EuL, 0x33AC3CADDC49EB9BuL)),
                ((-1, 7, 0xCC90BD39D0CDA7A7uL, 0x9A3730150C784F71uL), (-1, 5, 0xB9AE57DC800F7BC6uL, 0x372934E9873BFBBFuL)),
                ((-1, 5, 0xCD7FCF2BB2922175uL, 0x08572BCABD1D4E02uL), (+1, 7, 0xE60430E65E797E6BuL, 0x744B682719A896CDuL)),
                ((+1, 7, 0xDC99C0166142BB14uL, 0xD5E1C15B0B99CA28uL), (-1, 8, 0xAD81D673670A7652uL, 0x3E7CF5C532525424uL)),
                ((-1, 7, 0xB51E7E61B5B61050uL, 0xEAEDB236A7792D49uL), (+1, 8, 0x952C87E69B9ADD0BuL, 0x300B349ABCB90B0AuL)),
                ((+1, 6, 0xF67D6948CFC787D5uL, 0x4AF6E4CEA9AE69C4uL), (-1, 7, 0xC4970D3609C0386DuL, 0x93708F65D2963517uL)),
                ((-1, 5, 0x8FDE51BDA5370980uL, 0x902AC9E92E965C1AuL), (+1, 6, 0x988296DC4A13091FuL, 0x0DE4EA9574EDDF2BuL)),
                ((-1, 1, 0x999B7B0DFCAD3D2AuL, 0x55D56AEA38D59B36uL), (-1, 3, 0x9C8F5476D7AA526DuL, 0x372604AFD140DE3DuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn075PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xC0C8F61D7BB11CDDuL, 0x0D86EA0C4F3C62D0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 4, 0x8EA97D135C688A63uL, 0x4810EBBA7AF42B56uL), (+1, 3, 0xC36B6FCA360A0AF1uL, 0xD0CBD409C7D1EABDuL)),
                ((-1, 6, 0xE4207AC0EC0D002DuL, 0xD622ECA9F5BB79E5uL), (+1, 6, 0x9EF3FF6737DD2B43uL, 0x1C53E940F7C3D45DuL)),
                ((-1, 9, 0x81D220C1BCF48E06uL, 0x7F551748937EC466uL), (+1, 8, 0xB6C90E68B3A0E078uL, 0x7350DB83027A7B8BuL)),
                ((-1, 10, 0xD9C90C644098F582uL, 0xEF98E693B0EA9767uL), (+1, 10, 0x9AE0E17B9EDFC9E0uL, 0x25BE431FA816F040uL)),
                ((-1, 12, 0x90B7CE80CB89A36CuL, 0xC2946CCED7179C0CuL), (+1, 11, 0xCE3B438E6C9AEA78uL, 0xD58E583CE85C7AEEuL)),
                ((-1, 13, 0x9BA6200EF48D0B7BuL, 0xA2609979E06DE9EEuL), (+1, 12, 0xDD6D52EB7CAA455FuL, 0xDCCB3C91A409CD57uL)),
                ((-1, 14, 0x875E0BA8161582DDuL, 0x76296DAC20821A4AuL), (+1, 13, 0xBEA88DD3632FFF99uL, 0x4D08ED88BCF10AC9uL)),
                ((-1, 14, 0xCB218EFA90CB41CFuL, 0x00F8077EE7B309A3uL), (+1, 14, 0x8B78191343CC0AAEuL, 0x61D1A7266101D432uL)),
                ((-1, 14, 0xF627206116B5FB23uL, 0xE930103A2DD3D013uL), (+1, 14, 0xA49CD25B3F2484E2uL, 0xC42A4333BA4A816EuL)),
                ((-1, 15, 0x89993587FD49FDC6uL, 0x8FABCE145CAB9473uL), (+1, 14, 0xACE383258E226DD6uL, 0x12F72C1131943DB4uL)),
                ((-1, 14, 0xF76C978B13BE3144uL, 0x33F86FF5DBEBD70AuL), (+1, 14, 0x99D6729093DB1842uL, 0x6B9D7F0010024C73uL)),
                ((-1, 14, 0xC43460E4E6175EB6uL, 0x01A207417DAF6DF3uL), (+1, 13, 0xD9158D81FE496B13uL, 0x88244AB2433BEC9BuL)),
                ((-1, 14, 0xA1DF362795F0F141uL, 0x5C58D4DA7C59FB20uL), (+1, 13, 0xD02D5FA68C4D63A2uL, 0xCE79FD017F3AAF6BuL)),
                ((+1, 11, 0xA16A937C735E2C71uL, 0xE0B345E58AC505F7uL), (-1, 11, 0xEBEDFCFCCCB905BBuL, 0x376C653A2459A989uL)),
                ((-1, 14, 0xA152DE21948EF0B6uL, 0xC022298521496F39uL), (+1, 13, 0xB315122686734620uL, 0x0E650FDF8D53B5F9uL)),
                ((+1, 13, 0x878FC66930C7E99FuL, 0xB44DE60C2CE3790BuL), (-1, 12, 0xBC7DDE56A43AF972uL, 0x3839A14A7FC6E67AuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn0875PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xCCDDE7D0776408C5uL, 0xBF06981AF99162BDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 5, 0xA5C2A17142B5A382uL, 0xF463B3B452C3EAD3uL), (+1, 4, 0xD426975821D055BDuL, 0x87A0CF7D44530EB7uL)),
                ((-1, 8, 0xC0BE582090218576uL, 0x229310510ADF2FC7uL), (+1, 7, 0xFFD112ADA343DA46uL, 0x0609003BE6A2FB51uL)),
                ((-1, 10, 0xCE5891B2D6DC8FBEuL, 0xD0F1B000A07E2714uL), (+1, 10, 0x9019DF78C3A7E04BuL, 0xC8D6CABAE2BDA119uL)),
                ((-1, 12, 0xBC715766A14DEDB8uL, 0x9434CB401657E9A6uL), (+1, 12, 0x829524927FC24863uL, 0x916E78C6698A3BFAuL)),
                ((-1, 15, 0x8D572CAAE27641EEuL, 0xB7D44CA883853EE6uL), (+1, 14, 0xBC94666CEED2C3E8uL, 0xBAE7A516DD1AA5C2uL)),
                ((-1, 16, 0xE0840B15A82633DEuL, 0xE76E4016F6C96F10uL), (+1, 16, 0xA1290AEC0A8446C1uL, 0x785B767C72F932D5uL)),
                ((-1, 16, 0xA39F36A15574CE2BuL, 0x26D0F2FFD745D3B7uL), (+1, 16, 0x934A140FFE7828E4uL, 0xC2BF43434E1E9F17uL)),
                ((-1, 19, 0x84EEE788F124E853uL, 0x930704A2CD828167uL), (+1, 18, 0x9EEE7550012B8985uL, 0x03C4EAFFE53404D6uL)),
                ((-1, 21, 0x9B66C48A3906D3DFuL, 0x39FF162EED7CA4CDuL), (+1, 20, 0xD9BD38DDF3D41B2EuL, 0x595540B82B5DB3C1uL)),
                ((+1, 18, 0xC2163D10D5E19723uL, 0xC3FB816CDA2D83E8uL), (+1, 18, 0x93D34ED446E7E6EFuL, 0x05C8CB75B1DC7BDBuL)),
                ((+1, 20, 0x8DCEF128CA38AD65uL, 0x70F3B1272188CFAFuL), (-1, 20, 0xDDD500F26708579CuL, 0xFFA7308EFFC84D9DuL)),
                ((-1, 23, 0xCE3E570E980CD791uL, 0x2D438938C2AACEEDuL), (+1, 23, 0x87CDDBD293B4FD39uL, 0xCAA797B9422EEEE6uL)),
                ((+1, 20, 0xC1EF2FE5D03AC486uL, 0xC7AF87708D90B3B9uL), (+1, 21, 0x90FBB2A6C01DED16uL, 0xDF361D34F1FF5934uL)),
                ((+1, 16, 0xA738E9AB64F3BA4EuL, 0x497D37B05D91BC6FuL), (-1, 21, 0xF3DFCE3B89D3DB5CuL, 0x1065C8C97D50662FuL)),
                ((-1, 22, 0xB56AEDA11BC89D60uL, 0x2356EEA7DA98689CuL), (+1, 22, 0x8ED249D8610AC60CuL, 0x6239F160A58B0991uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn09375PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xD69958FF871923A4uL, 0xE5819B23BA240E02uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 6, 0xF9F0AE87708A7E6FuL, 0x7646416A489ED7C6uL), (+1, 6, 0x96DCECD6653933F1uL, 0x9599D4D01D7D3A9FuL)),
                ((-1, 11, 0xF5091B985E459459uL, 0x0354703D80A40A5AuL), (+1, 11, 0x9622606D0C36A51EuL, 0x3E6BF2F12DC704E4uL)),
                ((-1, 16, 0x82D26AECD0E6A805uL, 0xBF9B76E1FC2199C2uL), (+1, 15, 0xA37584F3285F3B65uL, 0x9F4044132586A5D1uL)),
                ((-1, 19, 0xA3B0E839DCF0F94EuL, 0xDB7024E5EED6B6D5uL), (+1, 18, 0xD203C1EF41958881uL, 0xE04CAD10E845B3EAuL)),
                ((-1, 21, 0xED39C60A3F2FB815uL, 0x63859F10BF87F0DAuL), (+1, 21, 0x9E417196A95D7996uL, 0x43F232445B0DEBF4uL)),
                ((-1, 23, 0xAE8A2290530446BAuL, 0x7540C14C2607E98DuL), (+1, 22, 0xF9EFEA2DE17E943FuL, 0x90D820037708542BuL)),
                ((-1, 22, 0xC9EEBE42B368EDEEuL, 0xF743AE44F334B151uL), (+1, 22, 0xCF6B25E56045A07EuL, 0x8491EA5BD8EC4235uL)),
                ((+1, 25, 0xA33DB95E0E3F8A2AuL, 0xEBE14D4149BAB9E3uL), (-1, 24, 0xD73A252DC0E7110AuL, 0x25B5173B01115B94uL)),
                ((+1, 25, 0xE8AEB936549E2686uL, 0xC768F0C510929B4DuL), (-1, 25, 0xCFCAE50D4EC36754uL, 0xEC6F2BFFEC31ABE1uL)),
                ((-1, 25, 0xD46747417DC088FDuL, 0x03615A33B98F7DF6uL), (+1, 24, 0xE079A52CF8F387C7uL, 0x7F7E9EE355021AB3uL)),
                ((-1, 25, 0xD20EF72EF3876AD1uL, 0x8AE87BDDA37E3847uL), (+1, 26, 0x8297DC08556E8395uL, 0x26FC1CB5B86D37A1uL)),
                ((+1, 25, 0xB2FC0102F6C430A6uL, 0xEE3E0D0BD82F3FC6uL), (-1, 24, 0xCD07B68DEE0ABB06uL, 0xF47851DCF42D8EFFuL)),
                ((-1, 20, 0xD2007AE349777FBEuL, 0xBC4C7371C60EB9F3uL), (-1, 24, 0x94C2C422544F4CE1uL, 0xC789F3D46FC3E63FuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn0984375PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xE222A28854042644uL, 0x6954EAF2DF20EF25uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 9, 0xA614EB85EB230E67uL, 0x1F3E9BBEBCE75940uL), (+1, 8, 0xBCC30744CD9C7B2FuL, 0x3626140E5DB56B81uL)),
                ((-1, 16, 0xD7BAA4834F35A0D6uL, 0x9F6789643610D405uL), (+1, 15, 0xF65BB4CDED9E1DB6uL, 0x2C84C74EF8AD5A38uL)),
                ((-1, 23, 0xA3500B343E21ACD1uL, 0xF80CC7D15AA46845uL), (+1, 22, 0xBB94860A52A099ACuL, 0x6A20E21A0D592F85uL)),
                ((-1, 29, 0x9FEFDC603547933AuL, 0xA590035AD1641975uL), (+1, 28, 0xB9033681C6493C60uL, 0xC692F3602A1C56FAuL)),
                ((-1, 34, 0xD4A5FA150FAC47FCuL, 0xB572D88D5B3E8CE5uL), (+1, 33, 0xF82DEBC32ABFA54BuL, 0x27C4C90E5328D49AuL)),
                ((-1, 39, 0xC3FBB0F58B2EFF87uL, 0x3EED8BEE62D56D95uL), (+1, 38, 0xE75237283BBE5AB1uL, 0x46EDA66646580E13uL)),
                ((-1, 43, 0xFB34CDF9D7181B19uL, 0xE8F6000B334E6687uL), (+1, 43, 0x966F50DB989C686DuL, 0x63E04477F2F931CAuL)),
                ((-1, 47, 0xDD3ED8E7F437B23DuL, 0x4CE6395853275524uL), (+1, 47, 0x871A75B5D3452E58uL, 0xEAB401E6065C82ABuL)),
                ((-1, 51, 0x820D1669C269A890uL, 0x8DAE15D79E703EA2uL), (+1, 50, 0xA32E651143F64F35uL, 0xE56CD5F6F672B764uL)),
                ((-1, 53, 0xC12D156AB03EB6F8uL, 0x601CD537F87868CBuL), (+1, 52, 0xFC2B52A26AD02306uL, 0xB88E208BB7B81E50uL)),
                ((-1, 55, 0xA2ABB78636800CA1uL, 0x966961E18CE96213uL), (+1, 54, 0xE2626843A713DF98uL, 0xDDF6E1CC5E88E73EuL)),
                ((-1, 55, 0xE8F143C0D27F3D2DuL, 0x1C24A8479FAE3E50uL), (+1, 55, 0xB96016B637D52283uL, 0x2C65A2F2C4436E4EuL)),
                ((+1, 53, 0xCD664BA2C489ED34uL, 0x36B79E536D2DF1EEuL), (-1, 49, 0x86D97988B01919AEuL, 0x8B7C97D98FE77807uL)),
                ((+1, 55, 0xDAC33C3C844F7938uL, 0xE353604A95F5C0B3uL), (-1, 55, 0xE06090502C36FF35uL, 0xD01872962D0C5E5EuL)),
                ((-1, 55, 0xB25BAA57B0BC879EuL, 0x2EAB1C0C5F5D4E2AuL), (+1, 53, 0xEA1CB500223962E4uL, 0x4057B7BCCDEC57F6uL)),
                ((-1, 53, 0xCBFD71C2A408CB7CuL, 0x2880177F4CFFE243uL), (+1, 54, 0xE860EBC0793F7948uL, 0x264FF7AAAE9D085CuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> Mn1PadeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0xE94699894C1F4C8CuL, 0x39EC4891005D66EDuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 21, 0xD21F710CD41BF891uL, 0x11E68110903B76B8uL), (+1, 20, 0xE697B6A2E895CA75uL, 0x8C6C36FD44775BBAuL)),
                ((-1, 40, 0xA7AA3FA5CA2A0251uL, 0x0271A885059CEFC3uL), (+1, 39, 0xB800407500B21017uL, 0x3A81080D4DD57813uL)),
                ((-1, 57, 0xD3454452CA82E80FuL, 0x1E9BD237C5EC5BCCuL), (+1, 56, 0xE7DC38836D4A8F8CuL, 0xED22A6775F39345FuL)),
                ((-1, 74, 0x854BC1D6F205259EuL, 0x8246A9BBF9208A83uL), (+1, 73, 0x924A98F2E99E854DuL, 0x2243C8AF4160EB4CuL)),
                ((-1, 89, 0xBFF447B982926C4FuL, 0x5F3D11FC11420265uL), (+1, 88, 0xD2ADB2C97038BEF4uL, 0xE213C0903405AD3EuL)),
                ((-1, 104, 0xAB5D908B15EB298EuL, 0xAC5D5593E8224A08uL), (+1, 103, 0xBC17EF9485AEFF56uL, 0xFA8088A008705B37uL)),
                ((-1, 118, 0xC8DDC949E5E54C0AuL, 0x75397E7F80DA64EAuL), (+1, 117, 0xDC7E1AA89F9402F3uL, 0x55AB1BEC7E4961F3uL)),
                ((-1, 132, 0xA13014B6C2CC4812uL, 0xCF8681CE07F36AEEuL), (+1, 131, 0xB0F4C1C183CEE046uL, 0x53EE11C753FF6F5FuL)),
                ((-1, 145, 0xB6DB68034D641E56uL, 0xD52F665B58088788uL), (+1, 144, 0xC8C5A7A04D99B1ECuL, 0x45005200D9B68274uL)),
                ((-1, 158, 0x965AEEEF645C2C71uL, 0x034853177C1F6049uL), (+1, 157, 0xA51D08574770582EuL, 0x184DD0CAE9E79D11uL)),
                ((-1, 170, 0xB6DE12CB37717540uL, 0x1594696428747EC7uL), (+1, 169, 0xC8DB9DD2DD50D312uL, 0xAD0D53F45E7F60EDuL)),
                ((-1, 182, 0xA73797BD8D7A7321uL, 0x160EDD1888E18CECuL), (+1, 181, 0xB7B6A0405D1665A0uL, 0x9F238D39BF5D40BBuL)),
                ((-1, 193, 0xE91166C85F284448uL, 0x3D7EC068F6A22832uL), (+1, 193, 0x80118898D62A1E72uL, 0x941ADAA5727989BEuL)),
                ((-1, 204, 0xFA64B4F5777C5723uL, 0x111775D28DCA7D84uL), (+1, 204, 0x89A34F439EE648E3uL, 0x761A24866E9EE422uL)),
                ((-1, 215, 0xD15121E257D8298FuL, 0xBA649502C0830284uL), (+1, 214, 0xE63745CB0CC88159uL, 0xBC052C4C8C83B944uL)),
                ((-1, 226, 0x893B3BACB2F298CDuL, 0x0C5D053716851C8EuL), (+1, 225, 0x970285BA2C3EA8CAuL, 0x44665B7D4A80091AuL)),
                ((-1, 236, 0x8E0D48FD24410FECuL, 0x9CA6EFFC7A0EB1F8uL), (+1, 235, 0x9C689DF59B6FB609uL, 0xE1A05386026930AEuL)),
                ((-1, 245, 0xE969976B55ED8BFCuL, 0x3ED308F0595D67DBuL), (+1, 245, 0x8097D6ABC530E2C8uL, 0x18C4F9DBCF820B4AuL)),
                ((-1, 255, 0x98DD62C21C7275E9uL, 0x9F5A4C1ACE57EE5DuL), (+1, 254, 0xA8939D3CAE1B4217uL, 0x3C43DA66B56593ABuL)),
                ((-1, 264, 0xA025DC9180BF55DDuL, 0x304390EAE8765A1FuL), (+1, 263, 0xB0C8C2C0AC26803EuL, 0x69A0F75BF8C20731uL)),
                ((-1, 273, 0x86868C2B96713CEAuL, 0x6A7DBC3629E18C23uL), (+1, 272, 0x94ACC52A74CD4887uL, 0x8FD8B23DF70C8F1BuL)),
                ((-1, 281, 0xB580079DF948088BuL, 0x0D458532C30F34C2uL), (+1, 280, 0xC8DE6FDA2653F4C2uL, 0xC2577ED72806D197uL)),
                ((-1, 289, 0xC4CC0F846EC61763uL, 0x133DEFAFADAF12E3uL), (+1, 288, 0xDA2803047F262632uL, 0x172BF4811085AEAEuL)),
                ((-1, 297, 0xAB7548280D78D02EuL, 0x569AD7FF182285F8uL), (+1, 296, 0xBE6FFCDED6531754uL, 0xB0A4A0286604FF59uL)),
                ((-1, 304, 0xEFCD406C681079BAuL, 0x3CDA3181322C4BD2uL), (+1, 304, 0x857B422805AEB4E7uL, 0xE2CBE187335F7CE5uL)),
                ((-1, 312, 0x8651D5733F08BCCDuL, 0x5410F6F450EB48CFuL), (+1, 311, 0x95F2424F947F52BAuL, 0x543F94B276FFC46DuL)),
                ((-1, 318, 0xF04A1D7A48B1C1AFuL, 0xE61CD39DFF143493uL), (+1, 318, 0x8690E63B13C335E2uL, 0x046F45EA60AB42ECuL)),
                ((-1, 325, 0xAADBE7D869C0A045uL, 0x3EE974E5498E0D17uL), (+1, 324, 0xC021563FCC543CE9uL, 0x28F2A7120C9554D6uL)),
                ((-1, 331, 0xC00870D6C4BA25DEuL, 0x5B5BB21A75C2C5A0uL), (+1, 330, 0xD8FBDFB973A6A0AEuL, 0x3A23B4E5D9D53276uL)),
                ((-1, 337, 0xA94B1879661CD2CDuL, 0x2540F5954D3C6E58uL), (+1, 336, 0xC06B8EA907543F2FuL, 0xA2262FB81BD3170DuL)),
                ((-1, 342, 0xE7E0E998F143B1E2uL, 0x5FFE369361CFCD02uL), (+1, 342, 0x84BD497C96F2DEF7uL, 0x6E980AC63916C01FuL)),
                ((-1, 347, 0xF3AFE42AF2D30543uL, 0xED64DD629AD2743DuL), (+1, 347, 0x8CC5CD3A8E10A32BuL, 0x8C912B6DD56E0750uL)),
                ((-1, 352, 0xC162119A3054515DuL, 0xA0DFCF8E6CE2B9D4uL), (+1, 351, 0xE2045C89C4F133F2uL, 0x8FFFF97EED9E2CEAuL)),
                ((-1, 356, 0xE2F4377A523F760BuL, 0x9774B969624FEC55uL), (+1, 356, 0x869E8AABFB875CC6uL, 0xE1B694D67268D301uL)),
                ((-1, 360, 0xBF710F00F3C626D7uL, 0x31E5FEDA79D93143uL), (+1, 359, 0xE7A666565A740309uL, 0x9ACD37CB34B46457uL)),
                ((-1, 363, 0xDEFAB4C92530C873uL, 0xA55C1498574C3E40uL), (+1, 363, 0x8AA1145B0415D69DuL, 0xCA4972CBA11CF7F7uL)),
                ((-1, 366, 0xA891D823341D8BFFuL, 0x3FFE74E300A88E86uL), (+1, 365, 0xDA0E4200F97C6923uL, 0x5FC90FBEF5A64021uL)),
                ((-1, 368, 0x94518D8B8DFDF3EDuL, 0x77822C2A655CC42EuL), (+1, 367, 0xCC5D792F0D933E52uL, 0x417C2A47394F307EuL)),
                ((-1, 368, 0xE91382104973E688uL, 0xF5038DB478A685B8uL), (+1, 368, 0xB67080619570F090uL, 0x0EB186EB15BB4E02uL)),
                ((+1, 364, 0xE4E21F80432F5B5FuL, 0x65B1188E014455D6uL), (+1, 365, 0xDCB2DB1121D484C6uL, 0x136FAF891429CFBAuL)),
                ((+1, 368, 0xD777259CBFB2FC60uL, 0x3702DA4225E3047BuL), (-1, 368, 0xD15FD8BEDCB6B556uL, 0xC6371B7CB93E329BuL)),
                ((-1, 368, 0xA211602D36735B5FuL, 0xCE4E7AFC733B2C60uL), (+1, 366, 0x9B335FDF203FCA09uL, 0xA9EC7075D743D15AuL)),
                ((-1, 366, 0xEAF3DB3F7F31C2A2uL, 0x6F9AD78127885C5EuL), (+1, 367, 0xE6F628585BC1E13DuL, 0x75D39C71BEF65737uL)),
        });
    }
}
