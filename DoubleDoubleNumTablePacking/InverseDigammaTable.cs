using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class InverseDigammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(PadeX0to0p5Table),         PadeX0to0p5Table },
                { nameof(PadeX0p5to1Table),         PadeX0p5to1Table },

                { nameof(PadeX1to2Table),           PadeX1to2Table },
                { nameof(PadeX2to4Table),           PadeX2to4Table },
                { nameof(PadeX4to8Table),           PadeX4to8Table },
                { nameof(PadeX8to16Table),          PadeX8to16Table },
                { nameof(PadeX16to32Table),         PadeX16to32Table },
                { nameof(PadeX32to64Table),         PadeX32to64Table },

                { nameof(PadeXm0to1Table),          PadeXm0to1Table },
                { nameof(PadeXm1to2Table),          PadeXm1to2Table },
                { nameof(PadeXm2to4Table),          PadeXm2to4Table },

                { nameof(PadeXmExp2toExp4Table),    PadeXmExp2toExp4Table },
                { nameof(PadeXmExp4toExp8Table),    PadeXmExp4toExp8Table },
                { nameof(PadeXmExp8toExp16Table),   PadeXmExp8toExp16Table },
                { nameof(PadeXmExp16toExp32Table),  PadeXmExp16toExp32Table },
                { nameof(PadeXmExp32toExp64Table),  PadeXmExp32toExp64Table },
                { nameof(PadeXmExp64toExp128Table), PadeXmExp64toExp128Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0to0p5Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0xBB16C31AB5F1FB70uL, 0xD4E4432F05116631uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0x8FD42BA0060E6AF7uL, 0x987BA83773B981FBuL), (-1, -2, 0xA530ABA166498A81uL, 0xF30C1F7AD26A89B6uL)),
                ((+1, -1, 0x96ACCB4852612DF5uL, 0xC8C883FC584A5AA6uL), (+1, -2, 0x97CCE9539D6B22B9uL, 0xA3EE010AB9DDFD2FuL)),
                ((+1, -3, 0xD2A0DBB4E5984725uL, 0x315E879960FD6B1CuL), (-1, -4, 0x9A96AE96796CB1D4uL, 0x8AA4F4E5837A4A05uL)),
                ((+1, -4, 0xBE484BBAFAEE264DuL, 0x81CCA860F102FFB7uL), (+1, -6, 0xD273371266B92699uL, 0x8AA6C07C8F0FFA6FuL)),
                ((+1, -6, 0xD5914381B224DFBCuL, 0xD9F5405330DA6D4EuL), (-1, -8, 0xABCC0C0B49F08B1DuL, 0x5B5854F883C3004AuL)),
                ((+1, -8, 0xE25BF7567EFAEE32uL, 0xD28C4BD17BF1A3F1uL), (+1, -11, 0xC9A6740812179038uL, 0xBCF4322C3AC7C168uL)),
                ((+1, -10, 0xB3ACA8F66216DB44uL, 0x6E4F3F40F835596FuL), (-1, -14, 0xF6E3AD4808E11852uL, 0xEF6B96FCEED1CAB0uL)),
                ((+1, -13, 0xE9C14AA6490CF073uL, 0x2BD34784B63CBE22uL), (+1, -17, 0xE00E79EAC1CA6E91uL, 0x03B2DFA76AF69B16uL)),
                ((+1, -16, 0xDF3B0C8781E51238uL, 0x9FF47BACB7152067uL), (-1, -21, 0xB219DF1BA989D4EBuL, 0xD295100AB4C67347uL)),
                ((+1, -19, 0x8F5E36A5C44D4CBBuL, 0x3F38BCA2C1B6FB94uL), Hexcode.Zero),
                ((+1, -24, 0xBB82CE700B2C0D85uL, 0x49BE1716A91C55B1uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0p5to1Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 1, 0x87F525807BB461F2uL, 0xDABEED6A88F6B51FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xB66FF37BA10519D5uL, 0x872AB235C3C253F0uL), (-1, -4, 0xED6CF89770B7A3D2uL, 0xD703399476579B9EuL)),
                ((+1, 0, 0x986CCD8F93DF3565uL, 0xEE1571480D6FD4F6uL), (+1, -2, 0x8950B1D325B0D1C1uL, 0x1D1354190829CB86uL)),
                ((+1, -1, 0x82D4CBD13D8DC924uL, 0xF64E24E499B8661CuL), (-1, -5, 0xE5F4BAF1B35876E2uL, 0xF01F774CC217EA09uL)),
                ((+1, -3, 0xD9E5A52EFD04B83BuL, 0x7B6C16B84AB434A9uL), (+1, -6, 0xC5618953EBD2480FuL, 0x163C95222A7E48FCuL)),
                ((+1, -5, 0xF661D074A65CE1B7uL, 0x557245BEFC5F01BFuL), (-1, -8, 0xD8C09B929928F581uL, 0xE400C259A1728CE4uL)),
                ((+1, -7, 0xF32AF4A54D2DBA52uL, 0x9A4B568B0C1F8D6EuL), (+1, -10, 0x9D16DCBC28E1B037uL, 0x21D4133EF254136CuL)),
                ((+1, -9, 0xAB36A33F1CF2461BuL, 0xA844142ECE6A737DuL), (-1, -13, 0xF45B1F223AEC7B9AuL, 0x093C0D069D8FFC5BuL)),
                ((+1, -12, 0xBC7C33D3E8D7758FuL, 0xB9901BD0CE7A958EuL), (+1, -15, 0xA64DE1C36ED03758uL, 0xD8F99219DD6354EBuL)),
                ((+1, -15, 0x83143955998F6D9EuL, 0xE07CE4435029E39CuL), (-1, -18, 0x863FF7D23B6A1B27uL, 0x821204C456860523uL)),
                ((+1, -20, 0xBB8EFF0C496B18A2uL, 0xFE2AF7D31BA0A4A7uL), (+1, -23, 0xBB013298B647B771uL, 0xEF0306CCB09FBADFuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1to2Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x950295E2A1C65DFEuL, 0xAE0ECEAD13492B57uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xF608A5137C9EB09CuL, 0x56D2A634DD242C66uL), (+1, -1, 0xEB0FDB615759F267uL, 0xDC404F02CEDF88D0uL)),
                ((+1, 0, 0xDF77F1EA5A9E3B97uL, 0xCFB208401F7A8DAAuL), (+1, -1, 0xC6D725C8A6371F79uL, 0x2133BBC7629C8444uL)),
                ((+1, 0, 0x93CD7F2473B6A051uL, 0x1C82878957423341uL), (+1, -2, 0xC5CDB42D0BBD236FuL, 0x01D2FC92095749CCuL)),
                ((+1, -1, 0x8E60D8285DAB9D1BuL, 0x21A7CFFF2845AF23uL), (+1, -3, 0xA8A02B6E56129FBDuL, 0x3C9CADEA5B528100uL)),
                ((+1, -3, 0xD8F7C98710D6F8C7uL, 0xB0F31412F6EACBB0uL), (+1, -5, 0xC8C8225D4A2AFFF0uL, 0xB49EB1940048EF84uL)),
                ((+1, -5, 0xFAD053BC1DBB1865uL, 0xA93CC38238CC7148uL), (+1, -7, 0xC1CBBEBC244CC0B3uL, 0x54F615116B535EB4uL)),
                ((+1, -7, 0xDFF3A6CF8466C267uL, 0x953C16B1C2FEDD5BuL), (+1, -10, 0xFD8DB9531E46BC41uL, 0x7FB825CA55C0E99FuL)),
                ((+1, -9, 0x8E40F1F4914E28D1uL, 0xFE0697398476CED7uL), (+1, -13, 0xE28EC1963B04BAF7uL, 0xE894272298C679A8uL)),
                ((+1, -13, 0xE97344F253787FE9uL, 0x41B90F1B3768EC90uL), (+1, -17, 0x981448F0D1B39EFDuL, 0x2C798C3D4A468431uL)),
                ((+1, -17, 0x8B2C264DE15411E6uL, 0x4F32CC1A1259EC06uL), (-1, -21, 0xEAEB0251AB27F98AuL, 0x370E8F893530AF6AuL)),
                ((-1, -20, 0x81F919766BA884B4uL, 0x5EC655A3A1C3F3BFuL), (-1, -24, 0xE16C748D64EA47CFuL, 0xEEABE8555660CB1AuL)),
                ((-1, -24, 0xE55BDE5325C4DF2FuL, 0x076097CDCECC395EuL), (-1, -34, 0x9EB34D9E2B0E30F0uL, 0x279ABEF121665E59uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2to4Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 1, 0x8425135A2DA2EAD9uL, 0x95D8C5213B86E816uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0x9CA6B312F2B06BBEuL, 0x3D310AF83AB7E6C2uL), (+1, 0, 0xF5538705AECCD1ACuL, 0x7ADF2D908CE3B250uL)),
                ((+1, 2, 0xB950E3D4E18A9684uL, 0xEA1BDAFC0E7F39B0uL), (+1, 0, 0xF5CC7D0DF4A43426uL, 0x0A5822B14282E1FEuL)),
                ((+1, 2, 0x8DCEA65BDBDE4790uL, 0x90F13A4996D061C2uL), (+1, 0, 0xA02B635CAC40DEC1uL, 0x869383061F09CDE1uL)),
                ((+1, 1, 0x9A7656CF0F5408C6uL, 0xC637D70A1CAC2E3CuL), (+1, -1, 0x94A94EF6C36485C5uL, 0xF959A49953ACDE78uL)),
                ((+1, -1, 0xFAB772598137176AuL, 0x5F1ED5DE2EBC0567uL), (+1, -3, 0xCC3EFC6722ED2F38uL, 0x0399A08098771CF2uL)),
                ((+1, -2, 0x9B1D82F981BA47C2uL, 0xD71BC570D057AAD2uL), (+1, -5, 0xD40BBC7658797C35uL, 0xB3818BFE3DE4A9A2uL)),
                ((+1, -4, 0x93FC81621396FEC9uL, 0x96A5325C41B8165CuL), (+1, -7, 0xA7D23B0A546995EDuL, 0xC488FC5459762A5CuL)),
                ((+1, -7, 0xDABC9E88C984E5A8uL, 0x664916AA4F0358DBuL), (+1, -10, 0xCB9211F841FC8E19uL, 0x517AF4984E1F8E5FuL)),
                ((+1, -10, 0xFAE187981DC3DB16uL, 0x7A0529FDE6051D48uL), (+1, -13, 0xBD5FD2D744F0E2A4uL, 0x892A0509A5229E07uL)),
                ((+1, -13, 0xDF1206A6AA2DBE0FuL, 0x4723B23FD9E204C1uL), (+1, -16, 0x86BDB15D234A26C5uL, 0x15AC2A84E1D6568EuL)),
                ((+1, -16, 0x98999B148E60F31AuL, 0x4E916452E74E2E18uL), (+1, -20, 0x8ECCE8054B9D4463uL, 0xE5046E3098AD82BFuL)),
                ((+1, -20, 0x9BE74BBD6F7838B3uL, 0x82722E2ED3ED80AAuL), (+1, -25, 0xD1F842678DFFB91BuL, 0xDF51AEE92FB60116uL)),
                ((+1, -25, 0xDDACDA79DA9D5C4CuL, 0x7D590C768DA35E18uL), (+1, -30, 0xBAC9D99AAED8B011uL, 0x2321B9B699FD7B35uL)),
                ((+1, -30, 0xBAC502CED314F046uL, 0x80264298433D9F81uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4to8Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 2, 0x804A90E305E73E45uL, 0xF3DDEA04D2F2AEC8uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xBEF4F3CCB74118BAuL, 0x22C30CCB3E0610DBuL), (+1, 0, 0x9EE2823B7BEC8333uL, 0x2E5482B91F334B09uL)),
                ((+1, 2, 0x837FB87FA2C18903uL, 0xC503C030C8FB0233uL), (+1, -1, 0xB79206A4526F73B8uL, 0x836120ABB82730CDuL)),
                ((+1, 0, 0xDDD9B8CBA437C730uL, 0xB90464B0258F388FuL), (+1, -2, 0x821360136EAF103DuL, 0x88DE768A675531B5uL)),
                ((+1, -1, 0x803A315E16B4D7C4uL, 0x6A311963FDE92D57uL), (+1, -5, 0xFCBFA4D8A64172A0uL, 0xB8D272B7D6DAA3ACuL)),
                ((+1, -4, 0xD7CCC3DFD546C576uL, 0x207E4EC8F60FD644uL), (+1, -7, 0xB2D8DE9B6A2D2A60uL, 0x32C9170490D071A5uL)),
                ((+1, -6, 0x894BC7FE06855328uL, 0xC72B7F994F7920D3uL), (+1, -10, 0xBF7F1305CB5718F8uL, 0x0D205CD4FD4ECE0CuL)),
                ((+1, -9, 0x8777CD3FF232DEABuL, 0x169336D4983AE0C9uL), (+1, -13, 0x9EE0DC288CB9862FuL, 0x407FACAA1BDCAC08uL)),
                ((+1, -13, 0xD2915B8F58793515uL, 0xAD842E8B1C03D350uL), (+1, -17, 0xCEBFA13E4379BEFDuL, 0xE7FE4264B86C5582uL)),
                ((+1, -16, 0x81C4B0169A70C075uL, 0x6DB8A7DD3E95DF69uL), (+1, -21, 0xD32C1E76F84996F5uL, 0xD6095B6A5E724DF1uL)),
                ((+1, -21, 0xFD07628D48292381uL, 0x1FBB5DD02020F83EuL), (+1, -25, 0xA7674769523F5B22uL, 0xA7C9A346D8E3A15FuL)),
                ((+1, -25, 0xC0390659F8BA7008uL, 0x79E740BE01F2F78EuL), (+1, -30, 0xC6962EE76AD503BAuL, 0x04AC633637CA1A20uL)),
                ((+1, -30, 0xDAF03DE778A80CC9uL, 0xB5126ECCA78785CCuL), (+1, -35, 0xA2C8F7FBC8264B06uL, 0x8F9D821AE65222C6uL)),
                ((+1, -35, 0xABE114F1EBC5355CuL, 0x584530C9FE163513uL), (+1, -41, 0x9189FA99112A6E46uL, 0x4740DB50D3D386AEuL)),
                ((+1, -41, 0x918A3C046D9268ACuL, 0xDB63167339C0C574uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8to16Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 3, 0x8000AFDBFF6562E0uL, 0x5AFAC4D20AB5FA3CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xBFB277459F3249FAuL, 0x71B156AA3A5FFF14uL), (+1, -1, 0x9FB2FB8A5E1336FDuL, 0x738DDC0CE8AB567BuL)),
                ((+1, 1, 0x86D0EAD4088432CDuL, 0x932B2B8AA896B916uL), (+1, -3, 0xBDC8017D4569CC06uL, 0x284D203FE2203318uL)),
                ((+1, -2, 0xEDEAE602A1024A99uL, 0x2250669FAD66E4BDuL), (+1, -5, 0x8F07021745CA6B2EuL, 0xB72A405AD8571077uL)),
                ((+1, -4, 0x9439E5D2B63FE1A7uL, 0x57BAA336AB0CD5EEuL), (+1, -8, 0x996CC4982440B45FuL, 0x9E4D9F7E394C26EDuL)),
                ((+1, -7, 0x8AE2FE6F6EFD9015uL, 0x6AA1DD7EF05D6E7FuL), (+1, -12, 0xF8B25DAD05396F73uL, 0x907BCFEA7D85085AuL)),
                ((+1, -11, 0xCB21E6C1B56AFFE7uL, 0x1A033C162782B146uL), (+1, -15, 0x9D9185E38AE2CD18uL, 0x54B52BD4A7F34041uL)),
                ((+1, -15, 0xED154764178B3A71uL, 0xB395A91AC36C0532uL), (+1, -19, 0x9F07679EF12477FBuL, 0x4DB041AD49C5FAC6uL)),
                ((+1, -19, 0xDF66E389A4B7AEFDuL, 0x297F2CDE936B4CB6uL), (+1, -23, 0x80BF0F48534CE64FuL, 0x09EA80F67122DFD0uL)),
                ((+1, -23, 0xAA66EFF16A428E80uL, 0xAC90BA165948F6F4uL), (+1, -28, 0xA69F651CBC48BF3BuL, 0x5E4B56448FACC360uL)),
                ((+1, -28, 0xD0F946BC8137E451uL, 0xFC96D4A3C0C96246uL), (+1, -33, 0xA967A236CDC39145uL, 0x8E4301D192228BB2uL)),
                ((+1, -33, 0xC9F582FDAABC3464uL, 0x8E25F1785234AA13uL), (+1, -38, 0x82377002E0CDE680uL, 0x6FC9A3C342D273B5uL)),
                ((+1, -38, 0x939303FB7CAAD931uL, 0xC04C703FEAC3FEA0uL), (+1, -44, 0x8ADCB231EDA7F33BuL, 0xCB6BD19BA718094DuL)),
                ((+1, -44, 0x952DC7EA5C58090BuL, 0xCF7FD8F777ECE2BDuL), (+1, -51, 0xA511451A635F3AF7uL, 0xC1F591257205EB2EuL)),
                ((+1, -51, 0xA5114449CA12D140uL, 0x2AEAD201B34458DAuL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX16to32Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 4, 0x800000078D56E9FAuL, 0xE5F783D38A4BEA3EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x9C990EB419CAEC0CuL, 0x9EF87B87C5AEA811uL), (+1, -1, 0x8C990EBAE8D9D636uL, 0x399F03D5AE1F1C95uL)),
                ((+1, 1, 0xB924A325B2304D79uL, 0x3AEB0F95FCA4CE60uL), (+1, -3, 0x95FE5F7117908EE8uL, 0xCDCCAC27517FB3A4uL)),
                ((+1, -1, 0x8CC1A1CBE8DD1DACuL, 0x45FCDA98D18C57A9uL), (+1, -6, 0xCE8413E5B7547EB8uL, 0x3EF53985060FE890uL)),
                ((+1, -4, 0x9A6A3AA4ECD46AABuL, 0x1BB958BC5B1935DDuL), (+1, -9, 0xCD926B51F929BFAEuL, 0xD32F57AD3637E3E5uL)),
                ((+1, -7, 0x81E72F1BA77BA94CuL, 0x1D914307337B032FuL), (+1, -12, 0x9D05289143D49697uL, 0xC32A8C71925AD6A3uL)),
                ((+1, -11, 0xADC70D3B2395377DuL, 0x711485FF06B68324uL), (+1, -16, 0xBE88F1E253F6FB7DuL, 0x6C4017C294D40AF3uL)),
                ((+1, -15, 0xBCF7C22EC671277CuL, 0x63CB4CC165F0E778uL), (+1, -20, 0xBB66927D29B8455BuL, 0xECFBBD4A80EF0325uL)),
                ((+1, -19, 0xA92A661501D35A12uL, 0x9F6FF1F8A66D74F1uL), (+1, -24, 0x96EE39ABBB166E9CuL, 0x74B4F16DEB16972FuL)),
                ((+1, -24, 0xFAA1E2A89D3D3B5BuL, 0xEC3985D9A354E23AuL), (+1, -29, 0xC76751FACCF05A28uL, 0x93F6980DB89D0963uL)),
                ((+1, -28, 0x994FF5A08D7FB8BEuL, 0x6781610027358E4BuL), (+1, -34, 0xD671328BDAA5D15CuL, 0x1344A79278573A00uL)),
                ((+1, -33, 0x9936B32FAFAAF0DAuL, 0x5C9681FEFA975F3BuL), (+1, -39, 0xB7F867A777713E44uL, 0x5302420C443AC246uL)),
                ((+1, -39, 0xF459CA4F2CBFBE97uL, 0xBA617B52C14FFD5AuL), (+1, -45, 0xF1858A9E76E657FAuL, 0x3C5BB543BC8413BAuL)),
                ((+1, -44, 0x947F5B4A250ED6C7uL, 0x81EE4CCD9EAD9562uL), (+1, -51, 0xDDE4AFD786558C24uL, 0xCC39CF2112632F2EuL)),
                ((+1, -51, 0xF9DCF4D2099EC1B1uL, 0xDEBBEEE73BC108CDuL), (+1, -58, 0xDFC227D3EDC87A2CuL, 0xF0F67BB0716185F2uL)),
                ((+1, -58, 0xDFC227D3EBB8498DuL, 0xFC0756A1D2495E6CuL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX32to64Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 5, 0x8000000000000721uL, 0x193DD859111A5428uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 4, 0xA2C53DDC06CED871uL, 0x60A660D653FF0D1CuL), (+1, -1, 0x9AC53DDC06CEDE14uL, 0xC460C8C2283C4BFBuL)),
                ((+1, 2, 0xCA6E86F0B48BEE6CuL, 0x7A3208E9F4BBDEDDuL), (+1, -3, 0xB715DF3533B20E6EuL, 0x2DC0818A5D5DCB3DuL)),
                ((+1, 0, 0xA3CED47068A93EA8uL, 0x2994E6C400FB15A5uL), (+1, -5, 0x8CEC1889C232FEDAuL, 0x9793C1F41C14B82BuL)),
                ((+1, -3, 0xC193BF0D5BA59FC0uL, 0xF59E51CED61560B3uL), (+1, -8, 0x9E58B8EAEB18DEB5uL, 0x8C82F5E97C6D9A64uL)),
                ((+1, -6, 0xB1A2EAEEDB45C50DuL, 0xBD3B1A11EF42CEAAuL), (+1, -11, 0x8A0CBCB4207F8E09uL, 0x4E11EAFC0ED8343AuL)),
                ((+1, -9, 0x835E96E48F23F17AuL, 0x95313647A3CDB5D0uL), (+1, -15, 0xC1B6CF6F0E081B6FuL, 0x93EAD3DCE0C8734AuL)),
                ((+1, -13, 0xA0532208DF29CDE6uL, 0x5DCBF0E9E2467C32uL), (+1, -19, 0xDFCADC5A374F8E62uL, 0x055F59E5537A0D3AuL)),
                ((+1, -17, 0xA3D671344F1DFB64uL, 0xABE5E09B933D10A0uL), (+1, -23, 0xD7C7743B82942F73uL, 0xF579528735C1163FuL)),
                ((+1, -21, 0x8D5193498D679F71uL, 0xE4D979FCC33F0A5EuL), (+1, -27, 0xAEBF6C7559852737uL, 0x5A26D9B5D8CFFB17uL)),
                ((+1, -26, 0xCE316FC427B62288uL, 0x56311F9BF1D0DBBDuL), (+1, -32, 0xEDA37312F5E71DD1uL, 0x6EA7F92DC8A14B34uL)),
                ((+1, -31, 0xFD03CD2D0DA31101uL, 0xDA9A6DEE2E275A4CuL), (+1, -36, 0x863213A392AF821AuL, 0xE6D210691E176697uL)),
                ((+1, -35, 0x811F9E4F05D3E29DuL, 0xDD722F56F5306A20uL), (+1, -42, 0xF81A51F4F1F08640uL, 0x7C37A64CBF85C5D1uL)),
                ((+1, -41, 0xD1AD98B5FF311DA8uL, 0x4EB1B1F8B2625532uL), (+1, -47, 0xAB40DF770C71B510uL, 0x66F8077C1AB16F8CuL)),
                ((+1, -46, 0x84CF76F10C9E8F1EuL, 0x048D1A005656952CuL), (+1, -53, 0xBCBC1CD61996D257uL, 0x2FECA2A0B506CF59uL)),
                ((+1, -53, 0xBCBC1CD61996D257uL, 0x2E869FA4C1CEF962uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXm0to1Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0xBB16C31AB5F1FB70uL, 0xD4E4432F04ABE18DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xE7D5FEBACC2456C0uL, 0x69F6BDA7C96002E2uL), (+1, 0, 0xA9CE60ED19D372F1uL, 0x3FC0403F098757F1uL)),
                ((+1, -1, 0xDFA6A0A7E9F0CBF5uL, 0x17A6E72CD6F0CE1DuL), (+1, 0, 0x99C5C4AFBA358E6BuL, 0x36E2986C675714E5uL)),
                ((+1, -2, 0xBD2A1474B9B2A690uL, 0xE75E54087AA052DBuL), (+1, -1, 0xC5EA2E160042D21BuL, 0x11319DAF0A148F18uL)),
                ((+1, -3, 0xB54F0CA17A8A2F9DuL, 0xCB7B265ABFF704CBuL), (+1, -2, 0xC71D48296551EF41uL, 0xB33B7162EC1B9BC0uL)),
                ((+1, -5, 0xD465DEAB9B587FE4uL, 0x96F43D2055D434FDuL), (+1, -3, 0xA04754B68D64B4DEuL, 0xF1C15288DAB1B893uL)),
                ((+1, -7, 0xF61712CB38BD98A1uL, 0x343D49F7415FE4DAuL), (+1, -5, 0xD0FBCF66D377DE78uL, 0x298071637E1CF165uL)),
                ((+1, -9, 0xBF7272AD80E637ECuL, 0x7787E87A69ED402EuL), (+1, -7, 0xDC8DEF1BA30FAEEBuL, 0xD930AD1C10A4E24AuL)),
                ((+1, -11, 0x8476359D3604E4D9uL, 0xD9E2943DF6B5780DuL), (+1, -9, 0xB9EC2C241AD54B6FuL, 0x7F76617E2F06F709uL)),
                ((+1, -15, 0xED61437418915301uL, 0x808217FE043D958CuL), (+1, -12, 0xF3636250A969D62DuL, 0x7BCD9965FF7BDB61uL)),
                ((+1, -18, 0x9D6AC7444490D0C8uL, 0x7B6DCE7A107FAC7CuL), (+1, -15, 0xEA87E4921AC815ECuL, 0xE15CD53363AFF50AuL)),
                ((+1, -23, 0xB6FB8A89A24A26BAuL, 0x2638DC35AB6B3AB4uL), (+1, -18, 0x956BD936DB33ACB5uL, 0x652D66A519A053CAuL)),
                ((+1, -33, 0xD4FF9D1B64ED03AEuL, 0xB9F839B7B0661934uL), (+1, -23, 0xBED07A8CCA31D171uL, 0x656EB0565D68FFCAuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXm1to2Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, -1, 0xC8F5FA59BC1CB834uL, 0x462B42C5E51BD2AEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xAF7FD9F5DE425E00uL, 0x33AC793992CC0440uL), (+1, 1, 0x923765FA9D43523EuL, 0xBC74B4848964C84AuL)),
                ((+1, 0, 0xA308646C0955AEA7uL, 0x3F3B48F4D5E23800uL), (+1, 1, 0xA82B990917845AF0uL, 0x77B0EE13AE45112BuL)),
                ((+1, -1, 0xC7525AA0AD79ADB7uL, 0xCBF5BA622852476CuL), (+1, 0, 0xFBF928823288ED2EuL, 0xC0E77A44C2CD44EAuL)),
                ((+1, -2, 0xAEBD1ABEFDF4FB3CuL, 0xB9087B197638A872uL), (+1, 0, 0x872CE6C70C835B04uL, 0x9897FB22FEA47AF3uL)),
                ((+1, -4, 0xE2AD400D29E9B140uL, 0xD5E6B074C4082277uL), (+1, -2, 0xD8A5380A184CE2ACuL, 0x3CCCCC2B2C140645uL)),
                ((+1, -6, 0xDAE6396FD81F0E40uL, 0xD4D3D3F88C706F6BuL), (+1, -3, 0x83B9C190ED30106FuL, 0x848DCF876AD3304EuL)),
                ((+1, -8, 0x9A9FD8721C4C4B84uL, 0xF45D308092024EA9uL), (+1, -6, 0xF25ED4BDC80A986AuL, 0x69429C804CA7E7D1uL)),
                ((+1, -11, 0x988181520275AE5FuL, 0x704CB8BDE3DE085BuL), (+1, -8, 0xA5040583532B6785uL, 0x51BF4BDA673334B5uL)),
                ((+1, -15, 0xBD51B807510F3CD0uL, 0x71CB0874CF8AEB45uL), (+1, -11, 0x9E3A48BD23672CFBuL, 0x9DA0A581ABB78CFDuL)),
                ((+1, -20, 0xE0893D740D9F0693uL, 0xC8DC33D02AA6A31BuL), (+1, -15, 0xC049D1FE74EBA897uL, 0x09BDE723D2111D72uL)),
                ((-1, -41, 0xDC8A77AE523093DFuL, 0x74B3789D956674C6uL), (+1, -20, 0xE0882B3D5176AC8FuL, 0xCC982B9DF94C5DFFuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXm2to4Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, -2, 0xFC42E30054AB951CuL, 0xAC609A5B7CE8884DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x99F6D2484EB0C0ABuL, 0xB7BD25CF8B0D2340uL), (+1, 1, 0xB5EA695398F449E4uL, 0x15715DC5779D2013uL)),
                ((+1, 0, 0xB3176E5912952C25uL, 0x58ABA2023825C0F1uL), (+1, 1, 0xF5E87177F895B878uL, 0x52DBA2762542AE71uL)),
                ((+1, 0, 0x825D9ECDE2DDBFAFuL, 0x6B468E3C28C08FB6uL), (+1, 1, 0xD089653AAF29F6BAuL, 0x7446E816CF57EE5FuL)),
                ((+1, -1, 0x8388087184BF788DuL, 0xAE7178013A90494EuL), (+1, 0, 0xF6B1089E49712498uL, 0x7D65D61E6A37A36FuL)),
                ((+1, -3, 0xC0AF5442810214B4uL, 0xA02146245A0A1659uL), (+1, -1, 0xD627C9EBC862E1F3uL, 0x916BBECBE26AEBCAuL)),
                ((+1, -5, 0xD0C1940743D2DEE5uL, 0xF4227E2184DC0659uL), (+1, -2, 0x8BC31970C99D2DCFuL, 0xA07829A517336A03uL)),
                ((+1, -7, 0xA711EF8133F22FEBuL, 0x61516A0F5955B508uL), (+1, -4, 0x8A1755A0D542BDFFuL, 0x7C7A25152FDC4885uL)),
                ((+1, -10, 0xC17101723F9EE87DuL, 0x3AA390E64743BE77uL), (+1, -7, 0xCCEEAB99295E9EFFuL, 0xC99B11DE51EA1E65uL)),
                ((+1, -13, 0x9A3CB7CF89377999uL, 0x4F1BE6CE62F8523DuL), (+1, -10, 0xDEB568BA1DF11AADuL, 0x4E6D7EF83298C9A9uL)),
                ((+1, -17, 0x986B958A7F55E069uL, 0x7D1E8F7A13EA7EF6uL), (+1, -13, 0xA83ED6F5316C248BuL, 0xD7A5ADE648642E71uL)),
                ((+1, -22, 0x8D74E07443E17F19uL, 0xE86BFAE92E1719C4uL), (+1, -17, 0x9EB5AE73818A5620uL, 0xFB0BCE4C64D18BD7uL)),
                (Hexcode.Zero, (+1, -22, 0x8D74E0744C258CF8uL, 0x93DEAAC0C50EA130uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp2toExp4Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x87200674890FA5D7uL, 0x2CF11E1436B43785uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xBBB468C6EBE7B309uL, 0xEAEFD2856D7DAAC1uL), (+1, 0, 0xAFA33041A4D4F8ACuL, 0x7B6188B541819027uL)),
                ((+1, 0, 0xB09815333A725556uL, 0x5E851FD7F0002540uL), (+1, 0, 0xA8D2316086655F2EuL, 0x12F0A626ECF13CA6uL)),
                ((+1, -1, 0xE12CA885CAF505B9uL, 0xC9FEE3CE0B92457EuL), (+1, -1, 0xD82AF0D428F06FC2uL, 0x4D26A086C09BB967uL)),
                ((+1, -2, 0xDFDBD8D770B1688BuL, 0x802D402852E5BBBEuL), (+1, -2, 0xDABA8D064B820D7BuL, 0x12EBD5A0C23C16E4uL)),
                ((+1, -3, 0xAD5A52596F44A205uL, 0x899640E385AD6694uL), (+1, -3, 0xAA4302C7ECE2FBA9uL, 0xCEB9D07CAF240233uL)),
                ((+1, -5, 0xD8B760D7D87A571FuL, 0xBAB07A33C12EB334uL), (+1, -5, 0xD7D89403DB5D6EF5uL, 0x795BE5BF02FE8AEDuL)),
                ((+1, -7, 0xD9530A77698E1DAAuL, 0x6630AC6F7E956A44uL), (+1, -7, 0xD89129531113AE4AuL, 0x1999D6F9E8D907C0uL)),
                ((+1, -9, 0xAFCE84A41A4694B2uL, 0x97E05862E2CA5C7BuL), (+1, -9, 0xB0C77C6D5A14B0B7uL, 0x2836B6E9E99635FAuL)),
                ((+1, -12, 0xE2F386E77E503DB5uL, 0x95DEF057183233B1uL), (+1, -12, 0xE237D07E9E33EDA9uL, 0xB1C8174509FBD3EEuL)),
                ((+1, -15, 0xE7F6C26ED74D48AEuL, 0x7ED8673AD6C44D6CuL), (+1, -15, 0xE906604B7FA45046uL, 0xDA84C930799C2AC8uL)),
                ((+1, -18, 0xBA6716CC169FD463uL, 0x9328B1D1ECF7D9CCuL), (+1, -18, 0xB878416123ECCE8FuL, 0x7F22CA19E1FF9A7FuL)),
                ((+1, -22, 0xECFD05D908E7E094uL, 0x936DD43D82513FA8uL), (+1, -22, 0xF12ADC4B849E79A5uL, 0x27BEF1EB96D59C35uL)),
                ((+1, -26, 0xF9411F16BB2CB802uL, 0x50E587AE20FFDD13uL), (+1, -26, 0xF4089C896CFD51D1uL, 0xA23680D102CD1483uL)),
                ((+1, -30, 0xF28785034FCBABE4uL, 0x6EF59F1ED01E6C20uL), (+1, -30, 0xF6241D196DF6A55CuL, 0x39A60759D764A488uL)),
                ((+1, -34, 0xD6D187F773ECA62EuL, 0x7ACA53C3D5960080uL), (+1, -34, 0xD5BA660BEE74E166uL, 0xAECF15B93B4320E2uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp4toExp8Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x83ECACC4EBB4A024uL, 0xF0DC65615421D990uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xD8D472CB424BD0FCuL, 0xD00FD04D91ED8445uL), (+1, 0, 0xD4888465BE5164C7uL, 0xB3FCCDDAFCA656D8uL)),
                ((+1, 0, 0xACACF2912AD1D4AEuL, 0x26D67C018A507561uL), (+1, 0, 0xAAB6E9EC5FFA087FuL, 0x8A990DBBDCEAEAF5uL)),
                ((+1, -1, 0xAE31C3530D00C086uL, 0x1D599FC47305153BuL), (+1, -1, 0xAD4910FEB6CD1F0EuL, 0xEC5EC40AEFE91BD5uL)),
                ((+1, -3, 0xF76D261C2A1D838FuL, 0xC8749DBB0E2481B7uL), (+1, -3, 0xF710741820947FD9uL, 0x462D25024C1EA6E7uL)),
                ((+1, -4, 0x82BB2D9296E801A7uL, 0x8CF552569B7EC014uL), (+1, -4, 0x82BF96B1A5E108CCuL, 0x990BAAA1DAC7B7D9uL)),
                ((+1, -7, 0xD48AB7817B53D23BuL, 0x1E908B1DDA1C750CuL), (+1, -7, 0xD49C84DB3C933DF7uL, 0x48C9F0E69D01F937uL)),
                ((+1, -9, 0x87D5E30D660E026FuL, 0x5AF4C8029E95E0E3uL), (+1, -9, 0x87D72D7356AF6409uL, 0xEB2F49C5140335E8uL)),
                ((+1, -12, 0x8A7EBD48AAD9733FuL, 0xB87CE2C9B29EFE80uL), (+1, -12, 0x8A7C88962887EFA9uL, 0x1D240A1E10A8E477uL)),
                ((+1, -16, 0xE35982FCE4676A64uL, 0xA7A96B850952BE54uL), (+1, -16, 0xE3565A67E5402A74uL, 0x02377150C8A07128uL)),
                ((+1, -19, 0x96F02E6CA0122A43uL, 0x74EF499859815328uL), (+1, -19, 0x96EFE9E5B84F4EE0uL, 0xC0A4177B30129BA1uL)),
                ((+1, -23, 0xA2085426A7E91394uL, 0x40FD91BD4554258CuL), (+1, -23, 0xA211481514A41B35uL, 0x145E901B222C84CEuL)),
                ((+1, -27, 0x8B14D60E7A0AE729uL, 0x9D5327B4B4B8FDA2uL), (+1, -27, 0x8B06E37F0B12D676uL, 0xBE0DC748EDDC6074uL)),
                ((+1, -32, 0xB9FD7C70EE60A857uL, 0x1948D987F817A6B2uL), (+1, -32, 0xBA119ECD4DD3AA48uL, 0x83475D8AECDD1CD4uL)),
                ((+1, -37, 0xB63EF9AC98BCEA66uL, 0x6CC965362671395AuL), (+1, -37, 0xB6300147730FBBBCuL, 0xB9C5674C36519972uL)),
                ((+1, -43, 0xF4705AB63CE6020CuL, 0x9BD8A7F6BCAA017FuL), (+1, -43, 0xF479C29B021421D0uL, 0x091876E5CD281D81uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp8toExp16Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x804939942B8FB61EuL, 0x8F91F6D81AA8BE55uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xDF92D3A755B1EFA2uL, 0x666165269AA47E18uL), (+1, -1, 0xDF7795127D139D9FuL, 0xBB2DED5ECA3D8E5DuL)),
                ((+1, -2, 0xB877C35872C339D7uL, 0x5ED1851F020E5772uL), (+1, -2, 0xB87966EC38BD6E02uL, 0x0988D0BB8AB96B4DuL)),
                ((+1, -4, 0xBF7D4E1AC7C34C29uL, 0xA564E189BA36B4E8uL), (+1, -4, 0xBF7F97294F362669uL, 0x661447D1C12738D0uL)),
                ((+1, -6, 0x8C50BA4F14522A5FuL, 0x99723E33887D3D9BuL), (+1, -6, 0x8C5090BE98477810uL, 0xB02F173F20BEAB7FuL)),
                ((+1, -9, 0x9A6FBD65CDC7549DuL, 0xB66509B52F76049CuL), (+1, -9, 0x9A6F5C6A40D4D02DuL, 0xF883FB59A34D2DCEuL)),
                ((+1, -12, 0x849455C0B48D9BE4uL, 0x42BBD8D96C313F45uL), (+1, -12, 0x8494629050148D2BuL, 0x2447BB9DCEB1D3B6uL)),
                ((+1, -16, 0xB5E9546CB30A2655uL, 0xC6AF9758C4688B36uL), (+1, -16, 0xB5E984D996D936ABuL, 0xEF7FB06B117316C1uL)),
                ((+1, -20, 0xCA909A3D3585E40EuL, 0xB8E9C4E12CBD0F64uL), (+1, -20, 0xCA909C57105ABA25uL, 0x6B9138D50218899AuL)),
                ((+1, -24, 0xB8A96F1F96F8EB68uL, 0x0B1FE1F19C27450AuL), (+1, -24, 0xB8A8FAA78100AC75uL, 0x039F122A1E2E00E7uL)),
                ((+1, -28, 0x8A2D2BD7D7B54D50uL, 0xE570FE412FD824BFuL), (+1, -28, 0x8A2DCE49A4B7E6EBuL, 0x7BCE8CA47CA6DA66uL)),
                ((+1, -33, 0xA8F42206CA7B9F1BuL, 0x60F49F8B139A889AuL), (+1, -33, 0xA8F334298A70FD44uL, 0xC3A9285D6EA219EFuL)),
                ((+1, -38, 0xA647E11DB751A634uL, 0xB33F06BB72200697uL), (+1, -38, 0xA648BA9842EF651CuL, 0xA15AF25F56EDA9EAuL)),
                ((+1, -44, 0xFF73649987EA8A2BuL, 0x7D4D6C6E4FBC0CECuL), (+1, -44, 0xFF7267A80C03E38BuL, 0x6DABBCB40A316643uL)),
                ((+1, -49, 0x8D9C48048CE3E8CEuL, 0x65C64D819958FEEAuL), (+1, -49, 0x8D9C9EFA942AEC4AuL, 0x1B859B89FE7EBD3BuL)),
                ((+1, -56, 0xC608C5648CB6CFABuL, 0x5994643353E5774BuL), (+1, -56, 0xC6088EDA62DC4D16uL, 0xF839F8AC4206A708uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp16toExp32Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x800049E18C0964A7uL, 0xF4B7B87FCAA8A69BuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xE1682B3F2D128885uL, 0x4DB7DD2B059DB08AuL), (+1, -2, 0xE16875FA14BA5764uL, 0x0318A85EB77C0D10uL)),
                ((+1, -4, 0xBE3D123CFDCE38E2uL, 0x5B1EBD631C42BEC3uL), (+1, -4, 0xBE3CF134C5B736ECuL, 0xEDA707DCA7C88C4DuL)),
                ((+1, -7, 0xCD11AF83A1A11B6CuL, 0xF8DDCFA4F3B4C974uL), (+1, -7, 0xCD11BEBBFAF93D68uL, 0x9FCE35D5EE6A6C53uL)),
                ((+1, -10, 0x9E86BB19317E0945uL, 0x3F6D369AE1530D95uL), (+1, -10, 0x9E86B8DB394B2DEAuL, 0x76B46CFA46C561EBuL)),
                ((+1, -14, 0xBADC3B3B37735943uL, 0x0D1688ADBD4FCDC1uL), (+1, -14, 0xBADC3794E2FA20C5uL, 0xFC0D05F9492765FAuL)),
                ((+1, -18, 0xAE15433E5E0ADE88uL, 0xF8D0696E6F76711AuL), (+1, -18, 0xAE1549793E9382CFuL, 0x076F838430B4D4EDuL)),
                ((+1, -22, 0x82F759CC816BF935uL, 0xD0FF26D5B29B7133uL), (+1, -22, 0x82F7546FBB193048uL, 0x15C0B6446D143273uL)),
                ((+1, -27, 0xA0F6009BC7DF9ECBuL, 0xA241AE63E7C62F7EuL), (+1, -27, 0xA0F606F60909F758uL, 0x88ECD49860E6B953uL)),
                ((+1, -32, 0xA212B8CB01B23AFEuL, 0x6F3F62810AE87F1BuL), (+1, -32, 0xA212B334E8F356A3uL, 0xE321D6CCBC7D7144uL)),
                ((+1, -37, 0x84EA1F3BE3F81898uL, 0xCA98C83A4233C66FuL), (+1, -37, 0x84EA22F6F284D9F5uL, 0xF4EC2C650C9EEA8DuL)),
                ((+1, -43, 0xAE6757454B68FE85uL, 0x812B1EA863A5537AuL), (+1, -43, 0xAE67537EC121ABA1uL, 0x54DDFF841310FB50uL)),
                ((+1, -49, 0xB06B3362EE5A0AF6uL, 0x5F7A8E47941B8BFBuL), (+1, -49, 0xB06B36370543E828uL, 0x8E303EF2EB708CA4uL)),
                ((+1, -56, 0xFD2134896E4CF922uL, 0x9FD63849BDE04C91uL), (+1, -56, 0xFD21318ECB44738CuL, 0x764C63D1ED69C081uL)),
                ((+1, -63, 0xD30E651421A766A0uL, 0xB89CA8C41695754BuL), (+1, -63, 0xD30E670F009D4970uL, 0x69B86D9820026092uL)),
                ((+1, -94, 0xA0B157A54F7A7510uL, 0x63284FBE5C0A9AF3uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp32toExp64Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000049E233F1uL, 0x16F0C3BE575F3E98uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xC97A3794CAA35F0DuL, 0x34FCB028CB90CFA3uL), (+1, -2, 0xC97A37952330EC0AuL, 0xAE76B9F63ED29AEAuL)),
                ((+1, -4, 0x9AACB197FCAF7F76uL, 0xABD009BC4E6F386BuL), (+1, -4, 0x9AACB197C9DD695EuL, 0x240AB0050DC57446uL)),
                ((+1, -7, 0x9A082C9CBFEC5A1BuL, 0x4D5B7F1ACD03FFD8uL), (+1, -7, 0x9A082C9CE500B38AuL, 0x6A08C4CD59CFFA66uL)),
                ((+1, -11, 0xDF261662A67586D9uL, 0x085C1C4B3A443E26uL), (+1, -11, 0xDF2616627FF5F476uL, 0x9B546ACBC00950C0uL)),
                ((+1, -15, 0xF9E1A28B57B71518uL, 0x6531958FE8177155uL), (+1, -15, 0xF9E1A28B75DF78D4uL, 0x17CD8587E9B38545uL)),
                ((+1, -19, 0xE043CDC418D6FADFuL, 0xA47DF36F84D47C23uL), (+1, -19, 0xE043CDC40666EEFEuL, 0xCAAD091B4F9B0B20uL)),
                ((+1, -23, 0xA4FA934D2D60ABFCuL, 0x1EF7528A148994D8uL), (+1, -23, 0xA4FA934D3659F499uL, 0x5F60A2A068852109uL)),
                ((+1, -28, 0xC9A236644AAC0B4BuL, 0xA3C07FE640E9739EuL), (+1, -28, 0xC9A2366443A50F39uL, 0x30FEEFFBB33A5EACuL)),
                ((+1, -33, 0xCDFDFB1F9B45BA2BuL, 0xDD848722BD54B40AuL), (+1, -33, 0xCDFDFB1F9FB6AE63uL, 0xEB990E3FEB0DE43EuL)),
                ((+1, -38, 0xAFD5D9D5A57A4435uL, 0x1A295DC525A4C7C0uL), (+1, -38, 0xAFD5D9D5A338623FuL, 0xEA2FDEA722E623BCuL)),
                ((+1, -44, 0xF8C8FA16FF69944CuL, 0xC1CAD6A33473FFD3uL), (+1, -44, 0xF8C8FA17013CF29FuL, 0x425272BE30F5DECAuL)),
                ((+1, -49, 0x8F1963A7630008F6uL, 0x0317AFCB49D76BD2uL), (+1, -49, 0x8F1963A7626CABC8uL, 0xBC89FA60F5E0DB85uL)),
                ((+1, -55, 0x80D0AB5D8B7115F3uL, 0xEA00474FC9B764A1uL), (+1, -55, 0x80D0AB5D8BB71C3BuL, 0xE7DEAFAF9D42F63DuL)),
                ((+1, -62, 0xA741EAB4C1A75F83uL, 0x16D0EFD46D9C1074uL), (+1, -62, 0xA741EAB4C1781972uL, 0x1636D3594A7072F1uL)),
                ((+1, -70, 0xFD13E9640DF2AE60uL, 0x255798AADEBAA976uL), (+1, -70, 0xFD13E9640E1B2C9BuL, 0xB9B15994A5B604A3uL)),
                ((+1, -121, 0x848CF8003A727A93uL, 0x57BDE313794CAC51uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeXmExp64toExp128Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000000000000uL, 0x49E233F1BE5FA099uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xE9E8BC92BED6196DuL, 0x0C5D51F6DAD475A9uL), (+1, -2, 0xE9E8BC92BED6196DuL, 0x523286D1FC49D2E0uL)),
                ((+1, -4, 0xD23A0DBCE1AF570FuL, 0xBE55E66AFEF7E0B7uL), (+1, -4, 0xD23A0DBCE1AF570FuL, 0x9F5A38C98D64CCC7uL)),
                ((+1, -7, 0xF7635304A6F2049DuL, 0xF8157ECCEC5BF5C5uL), (+1, -7, 0xF7635304A6F2049EuL, 0x092E2534A41CD34DuL)),
                ((+1, -10, 0xD5FCA034EC66D181uL, 0x85A72EB8FEB90E3FuL), (+1, -10, 0xD5FCA034EC66D181uL, 0x7F1A612CF45EE7C9uL)),
                ((+1, -13, 0x90C8223EDA362690uL, 0xB1F594A0C0E7A076uL), (+1, -13, 0x90C8223EDA362690uL, 0xB3CD29EF9181F0D2uL)),
                ((+1, -17, 0x9F2F56028F846547uL, 0x006D5429F2AEF516uL), (+1, -17, 0x9F2F56028F846546uL, 0xFFA4A5BCCCF80AD8uL)),
                ((+1, -21, 0x91AD8B7622CBE547uL, 0xFDC4F2C4EAE85C23uL), (+1, -21, 0x91AD8B7622CBE547uL, 0xFE068B4C9E947A5DuL)),
                ((+1, -26, 0xE22E80DE6D5A6032uL, 0x819973FE70D9E322uL), (+1, -26, 0xE22E80DE6D5A6032uL, 0x81785FD70256A21FuL)),
                ((+1, -30, 0x9455A00E949BF044uL, 0x75467BACC1C3BFC0uL), (+1, -30, 0x9455A00E949BF044uL, 0x754CE1BA7EDE6F30uL)),
                ((+1, -35, 0xAED5DC9C596DE858uL, 0xA2650B196B947BD1uL), (+1, -35, 0xAED5DC9C596DE858uL, 0xA2632CCD9B764808uL)),
                ((+1, -40, 0x96931F014CF43520uL, 0x2AC9509F787DFBA8uL), (+1, -40, 0x96931F014CF43520uL, 0x2AC9B6C67A6DFCDCuL)),
                ((+1, -45, 0xA9C737C45881C359uL, 0xF84912A2066979D3uL), (+1, -45, 0xA9C737C45881C359uL, 0xF849038E54E44F52uL)),
                ((+1, -52, 0xB915241E35AF1892uL, 0xA5F12600E1EE95FCuL), (+1, -52, 0xB915241E35AF1892uL, 0xA5F12B819C5CDFFBuL)),
                ((+1, -56, 0xC094776093345B2BuL, 0xB588A4E23C355101uL), (+1, -56, 0xC094776093345B2BuL, 0xB588A4C445E2B485uL)),
        });
    }
}
