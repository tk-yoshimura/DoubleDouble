using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class FresnelTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)>> tables = new(){
                { nameof(PadeX0p5Table), PadeX0p5Table },
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX16Table), PadeX16Table },

            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd) in tables[key]) {
                    stream.Write((UInt64)fc.Hi);
                    stream.Write((UInt64)fc.Lo);
                    stream.Write((UInt64)fd.Hi);
                    stream.Write((UInt64)fd.Lo);
                    stream.Write((UInt64)gc.Hi);
                    stream.Write((UInt64)gc.Lo);
                    stream.Write((UInt64)gd.Hi);
                    stream.Write((UInt64)gd.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX0p5Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -3, 0xCC649AFD880434F6uL, 0x110F542742B7592DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -6, 0xB1CF64501CAE1F76uL, 0x65F3A56FA23D32DCuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xD598BBDAC26FCF38uL, 0xED9AE928AF891634uL), (+1, 1, 0xB7416979FB1713FFuL, 0x4FF6DCE92C1AA85FuL), (+1, -3, 0x97100AA5E04E9F81uL, 0xF6945A76C9B75042uL), (+1, 1, 0xBC6EEBF91612D2D8uL, 0x154396DD98B7B759uL)),
                ((+1, 0, 0xAA8A68F9BBCEF067uL, 0x7E3CCB101A8D3199uL), (+1, 2, 0x87102A11196AC1FAuL, 0xA609ADE5333378ECuL), (+1, -2, 0xC0945F1ABEFFEE83uL, 0x45C4944C919DAC70uL), (+1, 2, 0x8FD9A04575ED4A54uL, 0x69F967E487D05A39uL)),
                ((+1, 0, 0xA524ED31BD595BEEuL, 0xC04999EEC02D26DDuL), (+1, 2, 0x8460AF296EF241B1uL, 0xD7EE849ACB7E5D34uL), (+1, -2, 0xEB9D3D263D1EE1A0uL, 0x788EAD809F2C2705uL), (+1, 2, 0x92AF55F282F8AB99uL, 0x06A428E421192479uL)),
                ((+1, -1, 0xF278B1456BA1907EuL, 0x68AE945586F1F695uL), (+1, 1, 0xBECC498E02080B1AuL, 0x0DF26B441C33804DuL), (+1, -2, 0xA86C15661E394111uL, 0x1EAEC1D84D2D6141uL), (+1, 1, 0xDCEE1D98066EB19EuL, 0x8920A964748A3F27uL)),
                ((+1, -1, 0x8700F31B89F86701uL, 0x2B0688279D94A188uL), (+1, 0, 0xD429FF163215249BuL, 0x37E0407D1B5D9A90uL), (+1, -3, 0xCE5BFD4132B9241AuL, 0xE5F9CE90B08F735DuL), (+1, 1, 0x80E9BC4F58BA14AEuL, 0xE87840DF0B257094uL)),
                ((+1, -3, 0xEC5B3B79582DC9D9uL, 0x790F887E75CCE7A5uL), (+1, -1, 0xBA8436E49B003FA1uL, 0xBB4414E02492B03BuL), (+1, -4, 0xC5A8C9BC22E31A55uL, 0x203F454979CB15D3uL), (+1, -1, 0xEF01576256CFB441uL, 0x45CE714C1D9EC1C8uL)),
                ((+1, -4, 0xA73AC044DFCC19DFuL, 0xA5DB441318BC8FF5uL), (+1, -2, 0x82BDCFD85E3090FBuL, 0x33FC932B1C6FAE42uL), (+1, -5, 0x89B033EBBD2F39A1uL, 0x998E0A0C701C751FuL), (+1, -2, 0xB1959D9638B35255uL, 0xD3024CCADCC844C9uL)),
                ((+1, -6, 0xB8619FB72D4241E1uL, 0xE9EEA6600EC92C6FuL), (+1, -4, 0x918B6865A481F501uL, 0x971DDD1389BB6DCCuL), (+1, -7, 0xB304DC07F4C92118uL, 0x61B0B5F68A452627uL), (+1, -4, 0xD2DC970292BA7201uL, 0x467C7A13DB113B78uL)),
                ((+1, -8, 0xA1533F964A12E22FuL, 0xE5A05CA90262471EuL), (+1, -7, 0xFC45FDE2E6A04D28uL, 0xD90B8C6592DCFD33uL), (+1, -9, 0x97BE4429C0EFF4FCuL, 0xCE89DF444E7D6989uL), (+1, -6, 0xC45D5C97ED7F31DBuL, 0xD6EF3344DEBE83BAuL)),
                ((+1, -11, 0xCEE8B149AD2110D3uL, 0x4E6019C02BE6B701uL), (+1, -9, 0xA31E11AD7F2EDA4FuL, 0xCF185FCAA2171FC9uL), (+1, -12, 0xE858644CE81EE073uL, 0xFD695FC7AF8EEA02uL), (+1, -8, 0x89C92E0C5AAAD23AuL, 0x3014943B2E6C7382uL)),
                ((+1, -14, 0xB6EF0F7B40202BF1uL, 0xC5AB91CB76A2F619uL), (+1, -12, 0x8F437E6C79AEE9BDuL, 0xC673F16CD365CD80uL), (+1, -15, 0xD0F627AA86E846BEuL, 0x6B29B6C2C9CBCC25uL), (+1, -11, 0x850349A85CC79FB3uL, 0x04EA5AC3DF6BA327uL)),
                ((+1, -18, 0xAA7E5D391EB280D0uL, 0x5199ABAB3191ADCCuL), (+1, -16, 0x862BD3332B6C04C8uL, 0x58EF84B62DFF0231uL), (+1, -19, 0xE875AA4702EFA8C3uL, 0x81BD00ABB64ED07CuL), (+1, -15, 0x8C817A641B567C3CuL, 0x604DF423092DB562uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX1Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -2, 0x8F4E3011F8290ADDuL, 0x706477F9EEB988E9uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -5, 0xFCE3F9EC91BEFDB3uL, 0xFA96584FC598AC6AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x81376B3F3AC9F3B0uL, 0x520AC868210F43A0uL), (+1, 1, 0xD32EE95B7BE7CD9EuL, 0x2FC49DDA931CAF0CuL), (+1, -2, 0x8CFFC99AAAA28963uL, 0xD988815C975B5B2DuL), (+1, 1, 0xDA921D95C945FE4DuL, 0xEFCA35327C07A10AuL)),
                ((+1, 0, 0xDB82906524FD4A51uL, 0x8934D10FE5AB9192uL), (+1, 2, 0xAF3CECC374561981uL, 0x88A72FA8800E7C1EuL), (+1, -1, 0x8AAA0272BC95D2E5uL, 0xBA77F13A1DBEFF80uL), (+1, 2, 0xBC358F554C741C75uL, 0x540288F4A3C80256uL)),
                ((+1, 0, 0xF252F7943CF0BAE9uL, 0xC774BD213199D08DuL), (+1, 2, 0xC002B64574549281uL, 0x852383DE0F623AE2uL), (+1, -1, 0xA62025D5E41679B7uL, 0xC41E53A582149F62uL), (+1, 2, 0xD68688E9C181B6A3uL, 0x90BF2EF0F4A9E812uL)),
                ((+1, 0, 0xC3E8B5D42D5F31FBuL, 0xF72186250506CAC2uL), (+1, 2, 0x9A839FCBF17C3E24uL, 0xACCCF00A595A59FEuL), (+1, -1, 0x8E22E7E65CB832C7uL, 0xFC25B736B0A3240DuL), (+1, 2, 0xB40B36BFB5C25B4BuL, 0x204E64E55801A017uL)),
                ((+1, -1, 0xF4DFC1E56D4293E9uL, 0x5F140E46F1D55184uL), (+1, 1, 0xC0C5C0E28EC66487uL, 0xCC0238DE7BF74D8EuL), (+1, -2, 0xBBF4BED5993AF216uL, 0x9F69A65377AA3A98uL), (+1, 1, 0xEAEAD37B65544E86uL, 0x96F15925CA1B1740uL)),
                ((+1, -2, 0xF45101FD54433D50uL, 0x32EF052B2CF04427uL), (+1, 0, 0xC01DE5EB46E7E1DAuL, 0xF0F4CBF8F2A2624DuL), (+1, -3, 0xC5AB4DA1CE91055FuL, 0xEA993B2BD5539215uL), (+1, 0, 0xF59A6B1D18E76D39uL, 0xD5E423EC014072ABuL)),
                ((+1, -3, 0xC5C76F01807F2171uL, 0x16E4476DF72382C4uL), (+1, -1, 0x9B6BE8BC172E8AFFuL, 0xD062033FC8EC3966uL), (+1, -4, 0xA8E0495592120DC6uL, 0x830FCB6DAD020EFFuL), (+1, -1, 0xD12A962F5EE73AE7uL, 0x16260E4535D28B2EuL)),
                ((+1, -4, 0x82B96D6C80E9D6B6uL, 0x56D0DFF55F2AFC24uL), (+1, -3, 0xCD674A5996CDDB56uL, 0x7209D739D3F85EB9uL), (+1, -6, 0xEC8600D13CAEF42EuL, 0x4EE31EF8CEF6184BuL), (+1, -2, 0x9216D29F80FAD9DDuL, 0x83F4178A9D48D336uL)),
                ((+1, -6, 0x8CCA4BD9D9DC3E42uL, 0xB7BB1DD511F9052CuL), (+1, -5, 0xDD2AE6ECB64579C3uL, 0x44A362FBE7CB4607uL), (+1, -7, 0x87430F1D1EC44600uL, 0x7E5F66C24473D8ECuL), (+1, -4, 0xA70CB704DDFBB81FuL, 0xC749D7A93B9B3BD5uL)),
                ((+1, -9, 0xF4063A3AF6E838A8uL, 0x56038B0DB3E80ACBuL), (+1, -7, 0xBFAA8CC7902E101EuL, 0xCC675C3E9AF46EF2uL), (+1, -10, 0xFAB3004A20BA0840uL, 0x18C21B2C41FD4B6DuL), (+1, -6, 0x9A9ECA994E9DD911uL, 0x8DA536D46DD58AE0uL)),
                ((+1, -11, 0xA5E379424843A1EAuL, 0xA65EE7575A5C4465uL), (+1, -9, 0x824933232177EC6DuL, 0xD533EB51D5FAEAF8uL), (+1, -12, 0xB73BAE0AE35B58FCuL, 0x7E2DAD157F3651A5uL), (+1, -9, 0xE21D0FCAA9942276uL, 0x5EB442B5EF412470uL)),
                ((+1, -14, 0xA873D64F8F615229uL, 0x852DDEA5450F4888uL), (+1, -12, 0x844DDF3E63A03B34uL, 0x9C378168D07E6A83uL), (+1, -15, 0xCA1C17AE1B8B76A2uL, 0xC7380B2B1AF1EBBDuL), (+1, -12, 0xF94BE9BD4859C15FuL, 0x5DAE1DF4A22A0549uL)),
                ((+1, -18, 0xE742EF26D1EAC674uL, 0x671A158D476B4784uL), (+1, -16, 0xB5A16CCE484E510CuL, 0x1C54277C2CD2941EuL), (+1, -18, 0x9882C30264A38DB9uL, 0xDB216319F29FA03CuL), (+1, -15, 0xBC2CF943E7622460uL, 0x031DD97DD8CF06C3uL)),
                ((+1, -22, 0xA5517EDCB750DEBFuL, 0x240C8BCE3184C9A3uL), (+1, -20, 0x81D76CCB2241D96EuL, 0x2F3C0C1152D51332uL), (+1, -23, 0xF5379F16D8BA7202uL, 0x3A32642C7A4F31F1uL), (+1, -19, 0x97405B5A3D2540FEuL, 0x98C123EC61A6628FuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX2Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -2, 0xA057A3F1FA1F9F6BuL, 0x85C0AEF269FEBAE0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -4, 0xC074C92FBB3FA40AuL, 0xD7508BACE1A3855AuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0x94F3C3D1782B8592uL, 0xF2372BC138284A0AuL), (+1, 1, 0xEBFB28C957A2F8A9uL, 0xDEC79AD1337559ACuL), (+1, -2, 0xBEA56377D94307C2uL, 0xE81782FB8288C32EuL), (+1, 1, 0xF597C65C62B6D38BuL, 0xDB5366471934A699uL)),
                ((+1, 1, 0x86DB90B3CF9EC60AuL, 0x3DBAC4733D8B23D7uL), (+1, 2, 0xD4DFB066F118FACDuL, 0xFCF84E7A6AB222E7uL), (+1, -1, 0xB66A6BA9FB5D69DEuL, 0x48A5AA189163FBF1uL), (+1, 2, 0xE6E72796C6FE6B94uL, 0x1771A37F96E921AFuL)),
                ((+1, 1, 0x9E1803C38AA8F997uL, 0x3CF887FE63ED08FCuL), (+1, 2, 0xF9102352B16A1F0BuL, 0xA5BF068B39F9DF16uL), (+1, -1, 0xE1092BD1AB50259DuL, 0x88DC87A6ED5E095EuL), (+1, 3, 0x8D05862A63464D54uL, 0xACE438FBFBC7D7CFuL)),
                ((+1, 1, 0x863DA349E793E90AuL, 0xB7AF7E6232F129EAuL), (+1, 2, 0xD33DE05BD1D70DFBuL, 0x15410739FBD30EE6uL), (+1, -1, 0xC8D84D0029A29659uL, 0xAC12D552D75CB6E3uL), (+1, 2, 0xFA3B35545D3E6CABuL, 0xF27FEFC5F1820AB4uL)),
                ((+1, 0, 0xAEF805705CB0B04AuL, 0x19BFA1259D7DC427uL), (+1, 2, 0x8991D8C57E1C4DE2uL, 0xBA9FF72544FB2236uL), (+1, -1, 0x89A63B7BD1D9D437uL, 0x0CF18DDC93B05FA3uL), (+1, 2, 0xAADC387668CF7909uL, 0x31D025DAAD312BC8uL)),
                ((+1, -1, 0xB4EB0A4E3F653DBAuL, 0x692778F05D0CF8B0uL), (+1, 1, 0x8E2F6BE2F3352BB7uL, 0xDE8052D003D37E1CuL), (+1, -2, 0x95EB071329FB9EB0uL, 0xDF7FA8A883E071B4uL), (+1, 1, 0xB9A622F4C6E10B10uL, 0xFAF2F32F8855FD99uL)),
                ((+1, -2, 0x973FABE5A8FE95B3uL, 0x616639500CC19D47uL), (+1, -1, 0xEDAB95689F80D6DDuL, 0x6AB8838BDD820CC9uL), (+1, -3, 0x845657FECF672120uL, 0xE11F5AE3E7A56367uL), (+1, 0, 0xA3A0CD4E5FD7333CuL, 0x027545E518905413uL)),
                ((+1, -4, 0xCE664A45D40C8022uL, 0x2333C4A793CA2177uL), (+1, -2, 0xA2238ECB237312B3uL, 0x41C58C32A97C7BC1uL), (+1, -5, 0xBF4C4EBD8BD2206FuL, 0xE56413AC7247DF1EuL), (+1, -2, 0xEC4C77077DE9AEA9uL, 0xBD3FCFD7165B56FBuL)),
                ((+1, -6, 0xE641A4412E94DD2BuL, 0x985BCDA2295C7632uL), (+1, -4, 0xB4DC6908792FBFCFuL, 0xA2A902D2FD38C24CuL), (+1, -7, 0xE2F84BF1293584A9uL, 0x3E08391B1246B617uL), (+1, -3, 0x8C18640665CC0BA4uL, 0xE85F33E12EEA597FuL)),
                ((+1, -8, 0xD0B829C9049CA4A0uL, 0xEAE651A444E80F0FuL), (+1, -6, 0xA3EF351137D018B5uL, 0xA6C7F979BD2F05D5uL), (+1, -9, 0xDBE6DD4F32DD3481uL, 0xD05CB147CAF27C64uL), (+1, -5, 0x87AEDDF2A5A66FAAuL, 0x12D23FC0AC3ED6EFuL)),
                ((+1, -10, 0x97625750EED70265uL, 0x1B097AD8E2117B0EuL), (+1, -9, 0xEDCBD3C3E6E33AB6uL, 0x127E8B7A841CBB58uL), (+1, -11, 0xAB86A27D69C85EFEuL, 0xE7924D3AE3CEF6F8uL), (+1, -8, 0xD3A0E747928A76ABuL, 0x535DA6D4F85C5AB0uL)),
                ((+1, -13, 0xAAB086EC09DB890EuL, 0x4EE56C70B02E9757uL), (+1, -11, 0x860F2C095BFF5662uL, 0x9A588679EE32DBA7uL), (+1, -14, 0xD19DAE87473C81E8uL, 0x90E0C86E839BF324uL), (+1, -10, 0x814D394DB8084207uL, 0x7D5B24026AEF024DuL)),
                ((+1, -16, 0x8DE2D5950DD43AF3uL, 0x6A64CBB6682F0E84uL), (+1, -15, 0xDEDFC656C67FF805uL, 0x2E6CBEEC17846710uL), (+1, -17, 0xBECA353DE4DE2056uL, 0xC9FF326DC2879A0CuL), (+1, -14, 0xEB60A880ADDEA236uL, 0x546FFFA77DE7DB3CuL)),
                ((+1, -20, 0x9C8010F65284E4C9uL, 0x5556ED738258D190uL), (+1, -19, 0xF5D47CF31F5C7831uL, 0xAE37E9FA77B1652CuL), (+1, -21, 0xE9B206B679F1BCF8uL, 0x1798C87516FC38ACuL), (+1, -17, 0x9027B36F7F1D26F1uL, 0xDB98E5CC82D0C366uL)),
                ((+1, -25, 0xAE5A21E1FE38BBF9uL, 0x8532508C30D7B0DEuL), (+1, -23, 0x88EF90CA253A8EFAuL, 0xAA18FD08C70914BBuL), (+1, -25, 0x93D8671ABD691371uL, 0xBA8DA61148CF9902uL), (+1, -22, 0xB665985E324A30B6uL, 0x9160207E3B6DDC86uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX4Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -2, 0xA2C8A2E0740F09D7uL, 0x6D1970AC49CCD438uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -4, 0xCE4D914084986593uL, 0xEAF1EA623617CE40uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xEB0485471AD63C6FuL, 0x8F289A50D8D59C61uL), (+1, 1, 0xB8B98F858963F02FuL, 0x5D6A2668C91DAB21uL), (+1, -2, 0x90BC55E98042D6D4uL, 0x07658422E55A026AuL), (+1, 1, 0xB33CAB815D451AD2uL, 0x24E8C5C95C0B0327uL)),
                ((+1, 0, 0xA231AAD2727F3658uL, 0x542F8B7C66EB9FE9uL), (+1, 1, 0xFEE7734F73941EDCuL, 0xB063F1FC52E2A2F9uL), (+1, -2, 0xC32BDBB180AECF36uL, 0xC3B065CD3A1A4B91uL), (+1, 1, 0xF162B099069A6399uL, 0x2BFAC55FB8C4D6F8uL)),
                ((+1, 0, 0x8DAE9785AEFC94FBuL, 0xB4D06F8B4CEF72A7uL), (+1, 1, 0xDEA0E1464FD9BDABuL, 0x7C41E8708E8748ADuL), (+1, -2, 0xA757AA618E8B0E66uL, 0x0B5399A73C71E75CuL), (+1, 1, 0xCECA501974E59469uL, 0xFB40B3770E33CF76uL)),
                ((+1, -1, 0xAEDA732CB3D2DA2FuL, 0xD5AA61A2228D8BFEuL), (+1, 1, 0x895BF5782C59D101uL, 0xC8B3600C1C70B10EuL), (+1, -3, 0xCB97303DD5450B89uL, 0x9C795A2ABB09752AuL), (+1, 0, 0xFB6FD7CB28E554C9uL, 0xA5C056E1D9EBCF2FuL)),
                ((+1, -2, 0xA121EE19FFA98991uL, 0x032F33A99F2E5565uL), (+1, -1, 0xFD23F2F17CAD3771uL, 0x52D0451ECDCE9216uL), (+1, -4, 0xB9B747E17BFF8090uL, 0xE52F841447269686uL), (+1, -1, 0xE54525A0057479CEuL, 0x29E76706C6B49B97uL)),
                ((+1, -4, 0xE489F7425CF9F1EEuL, 0xEB3053880F767514uL), (+1, -2, 0xB3821B1C8FC2F1B2uL, 0x5D9F861803C77D4EuL), (+1, -5, 0x82E4F9DB22C15109uL, 0x8581BACF9E104C3AuL), (+1, -2, 0xA18C55AA3CD7E99CuL, 0x3CF7871AD093ED03uL)),
                ((+1, -6, 0xFD42E5FAA06E9ADDuL, 0xF69AAC1F7F8396C7uL), (+1, -4, 0xC6EB6161A13F07BEuL, 0xF5ECB34661554960uL), (+1, -7, 0x90BD66C3DDC8DEA5uL, 0xC6397BE148489777uL), (+1, -4, 0xB29AA8F3FDFFB581uL, 0x6F6E15DB480F4665uL)),
                ((+1, -8, 0xDC3DAAFA92E5646AuL, 0xDADF2A2A3C7BE885uL), (+1, -6, 0xACFAF3644986D260uL, 0x93596E581610F819uL), (+1, -10, 0xFC35825794100899uL, 0xB1C4841B7B9105AAuL), (+1, -6, 0x9B9763507C848417uL, 0x15C4CD5B5117F41CuL)),
                ((+1, -10, 0x957D83DC351FE316uL, 0xE2D9BD91E9A0B628uL), (+1, -9, 0xEAD211C3E97B576DuL, 0xDED25931CCF2B3C0uL), (+1, -12, 0xAC396FCCE6079BE4uL, 0x16D7E414AF77B238uL), (+1, -9, 0xD47B5721EFE76204uL, 0x0500134ED6146786uL)),
                ((+1, -13, 0x9BD78483BDA59B89uL, 0xA13523485841D7E9uL), (+1, -12, 0xF4CBD7B229D529B2uL, 0xC6FCCC357E303275uL), (+1, -15, 0xB5697FA80BD59AF7uL, 0xC79F573821B54A09uL), (+1, -12, 0xDFCF73E0A2EDF6C9uL, 0xECD65D12A5E3FE73uL)),
                ((+1, -17, 0xF1D5AD07CD8D18DBuL, 0x10F2C0544C687306uL), (+1, -15, 0xBDEFBEE961F7D81DuL, 0x23DA5F518C4BCC80uL), (+1, -18, 0x8EDFA43F70E5B222uL, 0xB84A5C738E4D0407uL), (+1, -15, 0xB043639FA7ED0ED6uL, 0x6CEF3E1D316CA527uL)),
                ((+1, -20, 0x83F1C5EE13FA95E5uL, 0xE4BD4E3D473815D3uL), (+1, -19, 0xCF420083F2CE7071uL, 0x32B26811C6766BA0uL), (+1, -22, 0x9F0390A593C8D2DAuL, 0x8314A25E4D861C6DuL), (+1, -19, 0xC42CF203A199F4B3uL, 0x9A2DC3ED86DE0B29uL)),
                ((+1, -25, 0xB5242D3FA4E5FF6EuL, 0x423EC1996DC3A3FAuL), (+1, -23, 0x8E449F592643C57EuL, 0x44575911C2886488uL), (+1, -27, 0xDFCEBA3AEC55A662uL, 0x7C3464C0C2567A19uL), (+1, -23, 0x8A0E44B582CA152DuL, 0x0A6843C4E4A1A0ABuL)),
                ((+1, -31, 0xEBEC93C593586B38uL, 0x3024F04CB852EE83uL), (+1, -29, 0xB94B5C5FA999EA26uL, 0xBA7721D5049E799BuL), (+1, -32, 0x963DF9FA674021ACuL, 0x338CC2FD786412C4uL), (+1, -29, 0xB95A8FC1072FD2A2uL, 0x41AB3608215C2C38uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX8Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -2, 0xA2F66B80715669DAuL, 0xFDD792DD328477D7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -4, 0xCF6DCCF7958D68B6uL, 0xF46F4CC29A0947BAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xE4612A0B5737328EuL, 0xF2E5FEAFCA4A3FA0uL), (+1, 0, 0xB3609FA93EE750F5uL, 0x22EC38DB3B0566CFuL), (+1, -3, 0x902F4B10E0591C28uL, 0x82AD7FE720DE6820uL), (+1, 0, 0xB1EC4BF7FE688DC6uL, 0x15DE3B106728EB92uL)),
                ((+1, -2, 0x91FA2F274F663B1BuL, 0xC41990CBCAE42F75uL), (+1, -1, 0xE54EA8025026B899uL, 0xD9554163C22A3E18uL), (+1, -4, 0xB6F49A98E220577DuL, 0xADC1699DFED6B27AuL), (+1, -1, 0xE1BEAF1B4225FDE8uL, 0xC643039F800646F5uL)),
                ((+1, -4, 0xE09EA83218BDF5DEuL, 0x2BA18044AC105596uL), (+1, -2, 0xB06B39F068D9CEF1uL, 0xC3641BB6122BB079uL), (+1, -5, 0x8BC92289B6C87B72uL, 0xEF33E5454500806FuL), (+1, -2, 0xAC77BE2BF9689240uL, 0xC761769B659A3841uL)),
                ((+1, -6, 0xE70ACDFE3F9AD622uL, 0xBD8F3D8557B1957EuL), (+1, -4, 0xB5762F1A9837FF6DuL, 0xA627D33E50BA5071uL), (+1, -7, 0x8ED8BBD1A7A24C29uL, 0xDD655C083073C284uL), (+1, -4, 0xB03CBEED70C50A50uL, 0x9E3B9906B53A9FF7uL)),
                ((+1, -8, 0xA6BF802F2DC551F1uL, 0x26E3227C9EF1AA6DuL), (+1, -6, 0x82F6CF2251C13063uL, 0x446CDAB84BF311BAuL), (+1, -10, 0xCCEAE09973A1A109uL, 0x63A9E098ED7EFE06uL), (+1, -7, 0xFCCFBA4AAB27D56DuL, 0xE788D9C95B3C27B0uL)),
                ((+1, -11, 0xAC46AAC8BA003D21uL, 0x6E42F313CEFFBB98uL), (+1, -9, 0x874E32A22F064ACAuL, 0x7F8BE5708BCDBADDuL), (+1, -13, 0xD275AE0A2712F64FuL, 0x95368EEAB4A059BAuL), (+1, -9, 0x81D2AB3CAFAF790AuL, 0x769FA9186FA8B76DuL)),
                ((+1, -15, 0xFEB7A41E30A167D2uL, 0x7A88FE889D76B96EuL), (+1, -13, 0xC80DF9956110ED98uL, 0xB24E52410B95F5E7uL), (+1, -16, 0x9AB31E518AF88F17uL, 0x3DA2F6657C8626C4uL), (+1, -13, 0xBEDA739599CC4443uL, 0xDDC0E76EAAA3E8ABuL)),
                ((+1, -18, 0x840328583D55C0B1uL, 0x62D4737B8C5D09D0uL), (+1, -17, 0xCF5D4F35E1D20C0DuL, 0xBB71AED85459CF2CuL), (+1, -20, 0x9F76E4D3516BDC97uL, 0x1F3CC777B0974460uL), (+1, -17, 0xC4BB3A0278F1269BuL, 0x9633C7D76765654CuL)),
                ((+1, -23, 0xB6AE6F85E20750AAuL, 0x63802D88CB92FB7EuL), (+1, -21, 0x8F7A45CCE481CFC9uL, 0x08934F282B8E498AuL), (+1, -25, 0xDB7A57881F7B0DC3uL, 0xA6227E0882840D2EuL), (+1, -21, 0x87628F7AE445A576uL, 0x19DC3B42B5DA78E8uL)),
                ((+1, -28, 0x97D80D37E4DDF39AuL, 0xE08B4799939CB540uL), (+1, -27, 0xEE84136F9D874069uL, 0x78A594E1F2DF4E32uL), (+1, -30, 0xB5774BE55F6D8BC3uL, 0xAA2134FC7B0E4DD5uL), (+1, -27, 0xDFDFECC05C0FFCFCuL, 0x8DE55874D87A3639uL)),
                ((+1, -35, 0xE5B12A3F6DB30BA3uL, 0x273D757E19AE08B0uL), (+1, -33, 0xB46653B79CE995D9uL, 0x4CE0D32EF2C73C1AuL), (+1, -36, 0x888B66359569E992uL, 0x0BEF0B37ED6B4E46uL), (+1, -33, 0xA8747ECB68AB4A54uL, 0x9DECBEDBACE912D2uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)> PadeX16Table
            = new(new (Hexcode fc, Hexcode fd, Hexcode gc, Hexcode gd)[] {
                ((+1, -2, 0xA2F951E52C282D11uL, 0xD8C4C3F06BEC81AFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -4, 0xCF803FB9FAA7ED4BuL, 0xF10CC9C7674E913FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -3, 0xBBBAA8FF4F85F2FEuL, 0x219B5D0405C38C72uL), (+1, -1, 0x937148512D1790DAuL, 0x61EAA267BBAB7AAEuL), (+1, -5, 0xEEDFE36B689E5AF7uL, 0x86321A8952391DD1uL), (+1, -1, 0x935A0DD1F5C65CB2uL, 0x3540F2A7DF23BC6CuL)),
                ((+1, -5, 0xC01FAE85C77CA023uL, 0x457BE44EB04E0A75uL), (+1, -3, 0x96E4D32C11F84DAAuL, 0xBB133086874EE379uL), (+1, -7, 0xF4547A1522EEBFBDuL, 0x52F9088A866D3117uL), (+1, -3, 0x96B74D783DC2B715uL, 0xA399DD2E58A2E674uL)),
                ((+1, -8, 0xE54834AAB12B7C5AuL, 0xAEA5723EBAD03A82uL), (+1, -6, 0xB413EB43E3AFEB3DuL, 0xEDCBA211B1BDFE4BuL), (+1, -9, 0x91B7AE9245482E46uL, 0x7EE43E8F6CC21295uL), (+1, -6, 0xB3C5B4E7C7692E43uL, 0xBACC0D749506FDCFuL)),
                ((+1, -11, 0xAFD2331F59DAF1E8uL, 0x977A71959A7AD0DCuL), (+1, -9, 0x8A16EF6560FBD01FuL, 0xA67E84AFEE28B0C5uL), (+1, -13, 0xDF6000AD1109448EuL, 0xFAEFBAF5C3A2A933uL), (+1, -9, 0x89CA00A116B24F71uL, 0xE28A732551D1F87EuL)),
                ((+1, -15, 0xB3AF7C9C188780A8uL, 0x1E94F17BBB4983F6uL), (+1, -13, 0x8D1FE9F2C458CA7FuL, 0xFEE256BE9DCFC03DuL), (+1, -17, 0xE42EBDDE06419EE7uL, 0xAE43688BD43FC17BuL), (+1, -13, 0x8CC1281AD482EEE5uL, 0x95E443E230648D4FuL)),
                ((+1, -20, 0xF4BCF924299D942CuL, 0xE7ECCAE518DE6A15uL), (+1, -18, 0xC03787B3E97A2071uL, 0xFECD678030A14A86uL), (+1, -21, 0x9B54DA1885AC2AD4uL, 0xBBDA237810221CF3uL), (+1, -18, 0xBFA1EB72236D2861uL, 0x254765817B8E3461uL)),
                ((+1, -25, 0xD633273A6470346AuL, 0x145BBBBB4D1A0421uL), (+1, -23, 0xA83B6DBB5D02C78AuL, 0xD902CEBDAA48C5E4uL), (+1, -26, 0x87E55848BDAA4CB4uL, 0xB0F69CFD82F1C8E3uL), (+1, -23, 0xA7A7A246C8C565C7uL, 0x83BE67C0847636F7uL)),
                ((+1, -31, 0xDAA0A0DE5B8A9B42uL, 0x12F34D6ED34948A2uL), (+1, -29, 0xABB5A86F42128388uL, 0xBE8107CB48F504BDuL), (+1, -32, 0x8AA768C631BA2650uL, 0x45770035C9B528DEuL), (+1, -29, 0xAB0EB4B911155DB5uL, 0x54428DAFBE7793ECuL)),
                ((+1, -38, 0xC6465A50981CFFE3uL, 0x3AE934D46B1FDE31uL), (+1, -36, 0x9BB9845E0D75ABC8uL, 0x9F42EFCBC5114734uL), (+1, -40, 0xFB680BEF773364FAuL, 0x601CC9449F20098EuL), (+1, -36, 0x9B148330BFE93544uL, 0xEACCA697FFE77FFFuL)),
        });
    }
}
