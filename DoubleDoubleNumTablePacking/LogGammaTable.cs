using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class LogGammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX5Table), PadeX5Table },
                { nameof(PadeX6Table), PadeX6Table },
                { nameof(PadeX7Table), PadeX7Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX9Table), PadeX9Table },
                { nameof(PadeX10Table), PadeX10Table },
                { nameof(PadeX11Table), PadeX11Table },
                { nameof(PadeX12Table), PadeX12Table },
                { nameof(PadeX13Table), PadeX13Table },
                { nameof(PadeX14Table), PadeX14Table },
                { nameof(PadeX15Table), PadeX15Table },
                { nameof(PadeX16Table), PadeX16Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[] {
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xD8773039049E70B6uL, 0x5C8380FDFD5A6952uL), (+1, 1, 0xD5C2EF2F19D31DFFuL, 0x2EA6859A83CB194AuL)),
                ((+1, 0, 0xDE06993A61E9DD7CuL, 0xBA7CBF3C2F2245DEuL), (+1, 2, 0x9EB9C887A4622DA3uL, 0x904453BEE601B962uL)),
                ((+1, 1, 0xC6D57F0E73E906A1uL, 0x20303047666EFC79uL), (+1, 2, 0x8A234F15D0A1B832uL, 0x08AF501AD32B5618uL)),
                ((+1, 1, 0xCE17B2992A7613F1uL, 0x1F40BDA17F08A6D1uL), (+1, 1, 0x9C5755132F333027uL, 0x2F876E44AC9208ECuL)),
                ((+1, 1, 0x89BBEB9AFE18E880uL, 0x12D77148D92E68D9uL), (+1, -1, 0xF15ACFC7BCA5273EuL, 0x7E9BF98FD4692D90uL)),
                ((+1, -1, 0xF9D3EBA4F2CB70B9uL, 0xBF74152C0BC35163uL), (+1, -2, 0x819F50C1166B9F09uL, 0x9DA40EC19B31598DuL)),
                ((+1, -2, 0x9D48D1F5E3E6F0AAuL, 0x4162D5AD26DB194AuL), (+1, -5, 0xC214BCAEFF7D2319uL, 0x5CB481CF59904D43uL)),
                ((+1, -4, 0x8A18208A42FE3099uL, 0xD50CBE95237118DAuL), (+1, -8, 0xC7B9C0F21338E7BDuL, 0x2ACB02C78E2412DDuL)),
                ((+1, -7, 0xA73CBE09DA9BFCA1uL, 0x12B0B661F3B0DB51uL), (+1, -11, 0x88E7C54FADE10DE1uL, 0x53D4A84163D03CC1uL)),
                ((+1, -10, 0x87DE9D05F5D4BE04uL, 0xEC11E824353EAB84uL), (+1, -16, 0xEC9838432650637DuL, 0x05B40DA7F185C17AuL)),
                ((+1, -14, 0x8CE3B08F23F7C1FFuL, 0xF59B19A7BEF22607uL), (+1, -21, 0xEA40F74C050742B8uL, 0x4D16F6F42D7E8401uL)),
                ((+1, -19, 0xAB0A20A42FFB2BBAuL, 0x223CF6C7B00E561FuL), (+1, -27, 0xDDFFD5DFE8D26A87uL, 0xA604C5D465853925uL)),
                ((+1, -25, 0xCF2542A04D70E30AuL, 0x5F41921BD93FB8EEuL), (+1, -34, 0x8137FFB0A64AFFC4uL, 0xE23AC8141B1C4A24uL)),
                ((+1, -32, 0xACBAB2A53357D7FAuL, 0x517F5F070DDCBC6DuL), (-1, -46, 0xFDBEBF7461B03852uL, 0x8620F88C5A90792EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -1, 0xB17217F7D1CF79ABuL, 0xC9E3B39803F2F6AFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0x8E9E33E514053A30uL, 0x4AA55F68BC43CAEAuL), (+1, 0, 0xF11A41C30D487C6AuL, 0x8297DCC24D9EA2C4uL)),
                ((+1, 1, 0xC056505C4493119BuL, 0x2D70ABB663F78233uL), (+1, 0, 0xC58605E4734F7864uL, 0xB7439C6DCAE7E0E6uL)),
                ((+1, 1, 0x914995983FC47544uL, 0x81E478E80F92FDA6uL), (+1, -1, 0xB89C5AB6B3986F27uL, 0xF693B1F25F998C42uL)),
                ((+1, 0, 0x896BD98AB571D57EuL, 0xA47F4A3A79DB667CuL), (+1, -3, 0xD8F3C1E0DE8CE814uL, 0xEF9782EC51D98A62uL)),
                ((+1, -2, 0xAB588B9A658C41F0uL, 0xD5A7D7C511ACBC97uL), (+1, -5, 0xA693BC31806D8A47uL, 0x500EB5C39552D8B4uL)),
                ((+1, -4, 0x8FC2CDF1A794C582uL, 0xCF7639628E58A223uL), (+1, -8, 0xA83D67731290FC37uL, 0xDB3CA554E2AB609EuL)),
                ((+1, -7, 0xA236E4B59C2ADF1AuL, 0x0193F0CF354F507DuL), (+1, -12, 0xDB6F013B8CC8E121uL, 0x1C852240DCA24130uL)),
                ((+1, -11, 0xF129B2E25BAC82AAuL, 0x2E064199BE5F242BuL), (+1, -16, 0xB068F5D1EEDBAACAuL, 0xB6E364BC07B89CC6uL)),
                ((+1, -15, 0xE1E03DE5765A5A7AuL, 0xB665601CABBA176AuL), (+1, -21, 0x9FF156DF92170A5DuL, 0x91BD77B3244659E0uL)),
                ((+1, -20, 0xF585C8768F5001F4uL, 0x32B6C998EE5FF14CuL), (+1, -27, 0x894EB079FF3E3FDAuL, 0xFB76E181C1BEE0BBuL)),
                ((+1, -25, 0x8469D8685818756BuL, 0x737FB38381F9D551uL), (+1, -35, 0x8FF7A2BFAFE33427uL, 0x8F5AA36D90D52E8DuL)),
                ((+1, -33, 0xC4340B38BA0383F7uL, 0xB0A872234FA6A2C2uL), (-1, -47, 0xF7F073AFB4F056B7uL, 0x802CD54C402F970DuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xE5585FD151001191uL, 0x36FEA076849739B2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0xE3A2356785758C66uL, 0x3BEB5BF802BD2DE9uL), (+1, 0, 0xA45AD1649B83C98DuL, 0xD1140B0976E615A0uL)),
                ((+1, 1, 0xC159B6D54F4F100CuL, 0xABC51D96364ADF9BuL), (+1, -1, 0xB4ECE05680F143C2uL, 0x68C1CF6F9AE313B4uL)),
                ((+1, 0, 0xB9367B5693732E68uL, 0x85035E7BA9ABADDFuL), (+1, -3, 0xDF16441E40E64DDFuL, 0xF60B4BA5694AB666uL)),
                ((+1, -2, 0xDD79BC69349C9175uL, 0x21E6CD90E0027B3EuL), (+1, -5, 0xA8E35731602FC321uL, 0x22F7D6E7672A1553uL)),
                ((+1, -4, 0xAC7C22DA209D949DuL, 0xA3742A5862E629B2uL), (+1, -8, 0xA1E215C654B94853uL, 0xC069D348B89F2C6FuL)),
                ((+1, -7, 0xB0E2184AF38D58FEuL, 0x57996F26EA0FB87AuL), (+1, -12, 0xC3648AA9CC9BF535uL, 0xA717A7CF5987A236uL)),
                ((+1, -11, 0xEBA09ED2B37A142FuL, 0x0D60C5E5FE68B468uL), (+1, -16, 0x8EDF6F7564B6646AuL, 0xDB5E3F58718D6EE2uL)),
                ((+1, -15, 0xC3D97087867848A1uL, 0xF5AD625368E61DBAuL), (+1, -22, 0xE8D756124E28680BuL, 0x52BCB4952B1D88AAuL)),
                ((+1, -20, 0xBBBA3259D4F6DF8AuL, 0x990D5EA7FA2F0F92uL), (+1, -28, 0xB23D29AB81E7183BuL, 0x484FFEA7B8882F3BuL)),
                ((+1, -26, 0xB1E185A46F4AEC91uL, 0xCF3C56B0E96051CCuL), (+1, -36, 0xA603F1FA0C0FBC20uL, 0xC411546279B5980AuL)),
                ((+1, -34, 0xE721A2EB068A5EBDuL, 0x067629068C1BFC40uL), (-1, -48, 0xF7076F62BCE1E6AFuL, 0x0493FCA71D6501A7uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xCB653BE49167C59EuL, 0x80712A0744451830uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0x8E17F56EAFCF1DD9uL, 0x390753649D0012E6uL), (+1, -1, 0xEC5D97AE9CB0B2F3uL, 0x917C4F88ECEA6285uL)),
                ((+1, 1, 0xA914B9A9592FA2B5uL, 0xE453AF3E43727219uL), (+1, -2, 0xB7C2A44C32AD8DA8uL, 0x85137FC369A88F1DuL)),
                ((+1, -1, 0xE0907756E0AAF26DuL, 0x8081C85044464E5BuL), (+1, -4, 0x9C570A6D30E0070AuL, 0x16CE8679C341F2FEuL)),
                ((+1, -3, 0xB714E1E3222A07A4uL, 0x1F739EEB8F644D39uL), (+1, -7, 0x9E586401724222ECuL, 0x15222E374D282D45uL)),
                ((+1, -6, 0xBDA6436594DB0DEBuL, 0x855792EA75F1FA03uL), (+1, -11, 0xC2840FB65ED55BD8uL, 0x531611EFBFF19F70uL)),
                ((+1, -10, 0xF96195FD93A97EF7uL, 0x87E62BB3BF51955AuL), (+1, -15, 0x8D454890268F181CuL, 0x4C95E948B86D0E70uL)),
                ((+1, -14, 0xC985464165295BD1uL, 0xE0C1EBB3105F120BuL), (+1, -21, 0xE0FD8912BA295FAFuL, 0x4CF6BF86175F5B44uL)),
                ((+1, -19, 0xB9F132BB717200AEuL, 0x4ADFD60F9FF82BA9uL), (+1, -27, 0xA687F99A5C7E46B8uL, 0x4260BA47714AD61CuL)),
                ((+1, -25, 0xA898DDCA8A87ADEAuL, 0x9972456946FAFD89uL), (+1, -35, 0x9511F252FB2A9D1BuL, 0xCE7A9BFC83EADE3DuL)),
                ((+1, -33, 0xD10EDAFF99EC9B46uL, 0x0404BCB76E2A5341uL), (-1, -47, 0xD2A40400CE72DF8FuL, 0xF5FACD171AF10CDEuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x993321E223CE49A5uL, 0x3C2789A6630DB256uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xAC56C20632A97AB6uL, 0x66348E8AF17DC9EEuL), (+1, -1, 0xC4C052F860C0A399uL, 0x29678F49A83B536CuL)),
                ((+1, 1, 0xA5EAEF787E63B770uL, 0xEC5B04AB743A7B84uL), (+1, -3, 0xFEA5C36AC17EC95BuL, 0xD21DCAB463A9A3F3uL)),
                ((+1, -1, 0xB30301FB24AE614EuL, 0xFE0A174A8AF8AF97uL), (+1, -5, 0xB454C4D04968C1A4uL, 0x8B7D16A67450A774uL)),
                ((+1, -4, 0xEDE6C5F897D9B35AuL, 0x88D0ED15F6653869uL), (+1, -8, 0x980573A828B50F1BuL, 0xC197DF8BF692B2CEuL)),
                ((+1, -7, 0xC966C1EAD9A9707CuL, 0xE41121B71DC708F7uL), (+1, -12, 0x9B6E6D9D98C22E53uL, 0x68F22CCF6272A1D8uL)),
                ((+1, -11, 0xD8EA12E6AD692BC3uL, 0xBF9CA50B56C02B3DuL), (+1, -17, 0xBBE81C969789BDABuL, 0xAD8D389C50FF3394uL)),
                ((+1, -15, 0x8FD1FDF1A497858AuL, 0x7D43888B7DED59CCuL), (+1, -23, 0xF9164F8E4E956AF2uL, 0xA1C2505FA803BE23uL)),
                ((+1, -21, 0xDA0E3759DE24FABFuL, 0x804132E17065A92AuL), (+1, -29, 0x997FE45B0ABF16FDuL, 0x37A16DD689EE8BD4uL)),
                ((+1, -27, 0xA2967B121EB83EB2uL, 0x3B20F7D9A397C4F8uL), (+1, -38, 0xE535ECF79F0F3B2AuL, 0xC677307CA7817A0FuL)),
                ((+1, -35, 0xA5D572E0511C9BFAuL, 0x751994070C687CF2uL), (-1, -49, 0x82410718ECF2B310uL, 0x34E03D23271AEC38uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX7Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xD28939D6780E4E09uL, 0x89E731C4043380C3uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xB72D6AFF4F27783CuL, 0x8A87B0141884795EuL), (+1, -1, 0x95DCEF87D2421D45uL, 0x66599AD405F4B34AuL)),
                ((+1, 1, 0x867B48C3EB4A93D9uL, 0xCD955FAEB9FF5792uL), (+1, -3, 0x907607EE2E64BC91uL, 0x0EFEABBFD7ED9C7AuL)),
                ((+1, -2, 0xD914EE2F07B16521uL, 0x3994FAE6810623B8uL), (+1, -6, 0x93E00B3B5418DDA0uL, 0x1B2D08686538E8E4uL)),
                ((+1, -5, 0xD22F4B9A0E4D1728uL, 0x7FC26CCCE7975AE2uL), (+1, -10, 0xACCCFA4AA4CDF3D8uL, 0x73D7CA9940FA6B8EuL)),
                ((+1, -9, 0xF9BFB9F97DBBAE8AuL, 0x758EC20B1BC1C7C0uL), (+1, -15, 0xE6406402F53B3D87uL, 0x6C057D6051846AA4uL)),
                ((+1, -13, 0xB294EDAFDB719251uL, 0x5D53B62DE96AF9B3uL), (+1, -20, 0xA460D4AE0B305933uL, 0x4B6D053D820F808CuL)),
                ((+1, -18, 0x8FEA8E674A15D40FuL, 0x8B2620EFFE8AE306uL), (+1, -27, 0xD708C0B559B6C030uL, 0xC43C03E168B4DA18uL)),
                ((+1, -25, 0xE23A1FC0475E67A2uL, 0x2BE7E1FCA69CE8DAuL), (+1, -35, 0xA8D92A6DBB1C8A75uL, 0x8B8150015692F376uL)),
                ((+1, -33, 0xF25407F118B797B4uL, 0x12C97C4CF852504AuL), (-1, -47, 0xCAD1ACD580911856uL, 0x5AFA70535F3322CEuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0x88670F996E617E59uL, 0x345CE24EF47B7E66uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xCBF6DCB1DF55488AuL, 0x470D1AAF30DFD898uL), (+1, -1, 0x82DF642AFE40C464uL, 0x6B3D3F6A72D427F6uL)),
                ((+1, 1, 0x80E76DFC5CDDCB39uL, 0xA9FC1FD0A6422DA7uL), (+1, -4, 0xDC51C1BD1CEC9CDCuL, 0xD0915E7E57F63CEEuL)),
                ((+1, -2, 0xB3654B69067F6DA2uL, 0x4787203FD26DBFEAuL), (+1, -7, 0xC4EAAF8FC572CE5CuL, 0xD9EC79A363C51522uL)),
                ((+1, -5, 0x95F2A77D680603BFuL, 0x374623A7D42AF343uL), (+1, -11, 0xC8E8027CC136DC83uL, 0xE0FF5C780ACF972BuL)),
                ((+1, -9, 0x99FB1A9662FBC943uL, 0xBC3C5B4B19304AE1uL), (+1, -16, 0xE9B8C802CAABB794uL, 0x10B657BFF60D720AuL)),
                ((+1, -14, 0xBE79E1633AA598E2uL, 0x98892A5EC1FE25D5uL), (+1, -21, 0x91AE925B4274BABBuL, 0x0EFEB8451A924231uL)),
                ((+1, -19, 0x84DE37D493948971uL, 0xAE6361739C88389FuL), (+1, -28, 0xA66E3CD38E1737F6uL, 0xAD662CD3215169AFuL)),
                ((+1, -26, 0xB4DD515AD0FE50F7uL, 0x5377920C8F77DF89uL), (+1, -37, 0xE48D5D6DFE4F982CuL, 0x1118A203747BAFC8uL)),
                ((+1, -34, 0xA7C6EAFC8BE30084uL, 0x256363D101466249uL), (-1, -49, 0xE9DCF9E5D3442C68uL, 0x720C86EA032B6869uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX9Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xA9AC7417E5B86529uL, 0x6A3793FB75390CA7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xDE7DCB1AC9ADBB5FuL, 0x7ACD3B64168E2836uL), (+1, -2, 0xE8568FF1CDA35ABFuL, 0x8419482BDF6F673DuL)),
                ((+1, 0, 0xF6E83F83E4082A77uL, 0xFC70448F6BB4DF57uL), (+1, -4, 0xAD95195F602AFACAuL, 0x2A647D3B8967B8FEuL)),
                ((+1, -2, 0x97000313E44C8A6BuL, 0x835F41160F4A2F73uL), (+1, -7, 0x89B20136A12BF78EuL, 0x810E367D3110FE6DuL)),
                ((+1, -6, 0xDE0CC5DC3BB23175uL, 0x50B62838BD49F6F3uL), (+1, -12, 0xF95B3B4E04F5257BuL, 0x7025544BD15F8837uL)),
                ((+1, -10, 0xC8BBA381D44C4CC3uL, 0x2683ACCC5E7A1B03uL), (+1, -16, 0x80B816FE856C1809uL, 0x6D28AFE41E2D303EuL)),
                ((+1, -15, 0xDAB9B9EF5DDAF195uL, 0x8DDBF004AA2323A5uL), (+1, -22, 0x8E68841B5F3F3676uL, 0x6E015B3D552A1236uL)),
                ((+1, -20, 0x86752E310ED64901uL, 0xB853147392AB4D71uL), (+1, -29, 0x9068F5D555AFB46BuL, 0x48850EBA342C9BE1uL)),
                ((+1, -27, 0xA156E8C8BA765BC4uL, 0x8FA2EE584D837734uL), (+1, -38, 0xB03873ADC6B14AC3uL, 0x9433E6D656DDB254uL)),
                ((+1, -35, 0x83EC033F4F78F7C0uL, 0x20237C402649FF53uL), (-1, -50, 0x9CA9CFE94553CF2FuL, 0xE2D3FCD73A6A86A0uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX10Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xCCD4490D3FBE7A58uL, 0x3EBAC5A615E07C3DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xDAAE9330B1852A82uL, 0x11EF85F8934FB756uL), (+1, -2, 0xB74193021B3AA33CuL, 0xC7A5BA7F2C706894uL)),
                ((+1, 0, 0xC1CAB890157D706EuL, 0x19416B628287E1D3uL), (+1, -5, 0xD1B7EC36B897B061uL, 0x44FE81BCAF76B80BuL)),
                ((+1, -3, 0xB85D593F30FC8806uL, 0x83DF3FD03D74C881uL), (+1, -9, 0xF49022B0C8501C71uL, 0x999243185AE9481AuL)),
                ((+1, -7, 0xCB35BD5C24DB1E37uL, 0x1EF6DD6E8895EE01uL), (+1, -13, 0x992F705CC3F9E41BuL, 0x32B0AF60A30CABFFuL)),
                ((+1, -11, 0x825BE2507653402CuL, 0x9438245373F3BB09uL), (+1, -19, 0xC68CBD40AA3634B3uL, 0x6661240684121888uL)),
                ((+1, -17, 0xB8C1E3764FD4D627uL, 0x9AD55933335D03CCuL), (+1, -26, 0xE6D8D8BA962157B9uL, 0x49DB2D6DEF5C9366uL)),
                ((+1, -24, 0xFC76CA32114CED44uL, 0x51D442D384B01387uL), (+1, -34, 0x9F501ED1E663FB1FuL, 0x8D3841D0E3BCB524uL)),
                ((+1, -32, 0xE9D51431735DC28EuL, 0xA93B972CBC0576B4uL), (-1, -46, 0xA2D3F8ED690F2728uL, 0x532762E49E05DD7EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX11Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xF1ABAC84AA68A55DuL, 0xF9507B30F6953EC7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xE8655B1676B51060uL, 0xC8FE20E0A8D33B6AuL), (+1, -2, 0xA67507894AC650C4uL, 0x440840CF4BE67CC0uL)),
                ((+1, 0, 0xB9A10162A67FA4E1uL, 0xFD429017C5FE63DCuL), (+1, -5, 0xAD0758ACC41E6413uL, 0x48191841A69AB576uL)),
                ((+1, -3, 0x9F47F89A34D9960EuL, 0x7D1CA044048B35F2uL), (+1, -9, 0xB746B221F707B287uL, 0x6CCD45BA07CABD31uL)),
                ((+1, -7, 0x9E6FD761372EE2A3uL, 0x59DCBA04A58D8FF6uL), (+1, -14, 0xD08B511B65008738uL, 0x1C5ADB36EC1C8249uL)),
                ((+1, -12, 0xB7889F633520EDE9uL, 0x805B7FFA7CE3EF32uL), (+1, -20, 0xF587BD703FC1103CuL, 0xB330ADBA62D97E20uL)),
                ((+1, -18, 0xEAF2D42441F48813uL, 0x412FF64EC62F050CuL), (+1, -26, 0x81ACEE98227DB2F9uL, 0xD9986C95B389F0A8uL)),
                ((+1, -24, 0x9105BEF195548A89uL, 0x18F45E0982B05A89uL), (+1, -35, 0xA2C11B7F4E3FF903uL, 0x05264449B08FDAEAuL)),
                ((+1, -33, 0xF2B0B98427FAA0F7uL, 0xA16FCABFBA2D9E1FuL), (-1, -47, 0x948B6AE70199AB30uL, 0x93999342929DE36EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0x8C04B9F9D46B9E66uL, 0xB904FD652337CF07uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xF4F2319E02DD34C2uL, 0xCE7B57B996482622uL), (+1, -2, 0x98771CD7594FAE66uL, 0xF2A51B68342167D0uL)),
                ((+1, 0, 0xB21018AE02AEC2C0uL, 0x654E2955280A792FuL), (+1, -5, 0x912971EA4359F069uL, 0x98525F1DFBD74276uL)),
                ((+1, -3, 0x8B1EFE09AE3ED9DFuL, 0xF2B6B7271BC5568FuL), (+1, -9, 0x8CD563846DFF68B2uL, 0xBAE2DCC085B9F3EDuL)),
                ((+1, -8, 0xFC1E7E14A8EF6D81uL, 0xF4CAAAF2CDE30C79uL), (+1, -14, 0x92C7E318E1773108uL, 0x557F24578B1222C4uL)),
                ((+1, -12, 0x85126DDD6D74BBBBuL, 0xAB0E8B37874C051FuL), (+1, -20, 0x9E4B85CC5DAB6403uL, 0x3F3E2519EA3BEDE9uL)),
                ((+1, -18, 0x9B47EF94B7C5FA92uL, 0x33304C4212DCF6E5uL), (+1, -27, 0x992ECBBB743C2DEFuL, 0xD54A0D8C39F365BAuL)),
                ((+1, -25, 0xAEC3F8306EF608CBuL, 0xB586AE089CD9A6FCuL), (+1, -36, 0xB04699F03730DA88uL, 0xC0E6F0FA3C39D1CEuL)),
                ((+1, -33, 0x854F406086011501uL, 0xCDE7270EC0F8ABF0uL), (-1, -48, 0x912223B442597FB2uL, 0xB16665AD4E50795CuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX13Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0x9FE5D0B6A80A1B4DuL, 0x2AC405094BA0DA57uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x8040F8322840E3DEuL, 0x4ACA1114C9BB525AuL), (+1, -2, 0x8CA167B561233538uL, 0xE8A1A08474D86EF3uL)),
                ((+1, 0, 0xAB10563DCB095D9FuL, 0xE4E011BE97ADF835uL), (+1, -6, 0xF70055417A188D0BuL, 0x60429298356726A2uL)),
                ((+1, -4, 0xF5518235A586EE03uL, 0xEF1B1D35820451CBuL), (+1, -10, 0xDD0929475CD6C108uL, 0xCAE91F117F700F9BuL)),
                ((+1, -8, 0xCC127D852BD2717AuL, 0xFE8F5F6A92E1799EuL), (+1, -15, 0xD47DF1E6BF6A6907uL, 0x285BC7737782592FuL)),
                ((+1, -13, 0xC5D450A72DC26E76uL, 0xBB20AA3610A389B5uL), (+1, -21, 0xD362FBCF4E8A5F11uL, 0x64E622B49AB50C0FuL)),
                ((+1, -19, 0xD409A1BB28A3783DuL, 0xC7181E9BEE0862F0uL), (+1, -28, 0xBCB8B233FB10E997uL, 0x7F39471710070F76uL)),
                ((+1, -26, 0xDB399A5CB1FECC04uL, 0x29498E19EFBDA9FEuL), (+1, -37, 0xC88088F8B779045FuL, 0x708AC98A99BC0BF7uL)),
                ((+1, -34, 0x999A50E0085F7E13uL, 0x3D65A3E4D695C4EEuL), (-1, -49, 0x962E9A20F7BA8472uL, 0x459A6EA8294CFD6BuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX14Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xB46AD4E1D9966C4BuL, 0xB141D401EF9E5C5FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x859C31D5275A7C4EuL, 0xE3BE33D0704F4F6AuL), (+1, -2, 0x827D6C0435759B21uL, 0xA9FB122734C9A7C9uL)),
                ((+1, 0, 0xA49726B399D2F1F3uL, 0x83F875227739A8B2uL), (+1, -6, 0xD4AA1E85E41071E2uL, 0x848912638C0B57BFuL)),
                ((+1, -4, 0xDA10B1162A8CAAD9uL, 0x6FE3BBC3B14F1043uL), (+1, -10, 0xB0965CC45BA6782CuL, 0x3CA277D573B94A9FuL)),
                ((+1, -8, 0xA7A2DAA5A260D812uL, 0x62457936BF2DDFAFuL), (+1, -15, 0x9D864C4787B5A35BuL, 0x5CA26931DF22AE78uL)),
                ((+1, -13, 0x9635EC259752F6DDuL, 0x4AB9B22917CDD0F3uL), (+1, -21, 0x916A7DDDEF2CFB89uL, 0x1A35A0EAE26FB225uL)),
                ((+1, -19, 0x94D73FF06A4F8051uL, 0xF6AFC356652CD74FuL), (+1, -29, 0xF0F9DFAF2D04149CuL, 0x4F2277FE2BF5EEA2uL)),
                ((+1, -26, 0x8E46ADB6A6A6EB16uL, 0x7DFD7FB656DB4C9CuL), (+1, -38, 0xEDC35C98B31E499BuL, 0x6CAC7DBEA0D413B7uL)),
                ((+1, -35, 0xB8509C89A17A1CC7uL, 0x674FFD2A96EDBEFDuL), (-1, -50, 0xA32FACFDB2E333A2uL, 0xD3413566A9FB1548uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX15Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xC9879EF8B15213C3uL, 0x4745965528EED317uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x8A993F9C3D5D163BuL, 0xC30510167CF0C81AuL), (+1, -3, 0xF368D14FDA2AA814uL, 0x30A34E144DE75AE7uL)),
                ((+1, 0, 0x9E9921D8FA0594B3uL, 0x27378A723D6BD3E0uL), (+1, -6, 0xB8FE701B14F415B5uL, 0xBBEC2C3BA382B7DBuL)),
                ((+1, -4, 0xC33C7EBA3C0E1A02uL, 0x7C955FE0EDA75F07uL), (+1, -10, 0x8F454B652D4D288EuL, 0xFC543953C296E37CuL)),
                ((+1, -8, 0x8B7B4C5DD8A5E8F6uL, 0xA0DF918358C600ECuL), (+1, -16, 0xEE683FDF29F32556uL, 0x30C5F8E3705AF92AuL)),
                ((+1, -14, 0xE85862224BADC212uL, 0x767C1B18EEA02521uL), (+1, -22, 0xCD478C6249595AC3uL, 0x0CF3473A1B7C6691uL)),
                ((+1, -20, 0xD6068668BCE2C615uL, 0x1EB28C43F5643231uL), (+1, -29, 0x9EAB846DE5BBB907uL, 0x2F8A0108A88D0C28uL)),
                ((+1, -27, 0xBE32D6DDEBEED39AuL, 0xDEDAB85E7210C27BuL), (+1, -38, 0x92219A1DC33ACC34uL, 0x315BF56EF70BADA6uL)),
                ((+1, -36, 0xE50B63E37EC14EC4uL, 0x834DADA21372896EuL), (-1, -51, 0xB8F071475C688B26uL, 0x7A56F7F3AC527235uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX16Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xDF31B531FE9A32C4uL, 0x7B621FE88153788CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x812BE075C34BD39BuL, 0x07461D91EBBBADEAuL), (+1, -3, 0xC3B5CEA7672B1330uL, 0x861080C72693D02FuL)),
                ((+1, -1, 0xF2911CDFC463BB3FuL, 0x63373DE0540ACE91uL), (+1, -7, 0xE5DB57EE58E05BE5uL, 0x7F1ED73E3011C890uL)),
                ((+1, -5, 0xEC6FAD3E404A10EAuL, 0x4581BD45AD1E0CCCuL), (+1, -11, 0x81A7F11C8A223265uL, 0x64904CD1F11E65FEuL)),
                ((+1, -10, 0xFDB3AD7DDBD4D303uL, 0xCE960E3C7276468BuL), (+1, -17, 0x8EE230B4AAD83103uL, 0xC8226A36E7152307uL)),
                ((+1, -15, 0x91C349D401AA29BCuL, 0x8162EE49A4CC4C3CuL), (+1, -24, 0x88C61E31E9A0DCAEuL, 0x655A4F2F9C74D493uL)),
                ((+1, -22, 0x9EC1945A56BB2DD3uL, 0x29AC5AFFA0AD26E1uL), (+1, -33, 0x98F0FDFAE4EAE58AuL, 0x35CD0270AC546D26uL)),
                ((+1, -31, 0xE8966B2D9F3E0B8BuL, 0x58E1AE0D85BF4314uL), (-1, -46, 0xF0FF3563210EBB7EuL, 0xE8BF524C202A8A2DuL)),
        });
    }
}
