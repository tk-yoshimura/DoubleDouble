using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class LogGammaTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PadeX4Table), PadeX4Table },
                { nameof(PadeX5Table), PadeX5Table },
                { nameof(PadeX6Table), PadeX6Table },
                { nameof(PadeX7Table), PadeX7Table },
                { nameof(PadeX8Table), PadeX8Table },
                { nameof(PadeX9Table), PadeX9Table },
                { nameof(PadeX10Table), PadeX10Table },
                { nameof(PadeX11Table), PadeX11Table },
                { nameof(PadeX12Table), PadeX12Table },
                { nameof(PadeX13Table), PadeX13Table },
                { nameof(PadeX14Table), PadeX14Table },
                { nameof(PadeX15Table), PadeX15Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((-1, -1, 0x93C467E37DB0C7A4uL, 0xD1BE3F81014764EBuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 1, 0x8AEE3B323EB3CCA1uL, 0xB63291462829E967uL),  (+1, 2, 0xA5F11DAB1DE14BD3uL, 0x96C7ED66C7F1AD81uL)),
                ((-1, 1, 0xB3E08FB3B70D4335uL, 0x23F51C93F83348BFuL),  (+1, 3, 0xB90655CEAFEA1171uL, 0xF1406CBB9510F7F8uL)),
                ((-1, -1, 0xABAE660F00F15F5DuL, 0x0FF93F1C39213082uL), (+1, 3, 0xE822135109C0329FuL, 0xCE294D169A8CA0AEuL)),
                ((+1, 1, 0x800B58E1DBCB7203uL, 0x0FCF4F744B657F04uL),  (+1, 3, 0xB4034188E3D515A6uL, 0xC1C60B00F21FF3BBuL)),
                ((+1, 1, 0x9C4F895C751A7DD5uL, 0xB71DFCB14B4BD851uL),  (+1, 2, 0xB2900138A8E1CC29uL, 0xCDA5BA6BB8C1CE3CuL)),
                ((+1, 0, 0xA92D86CA85E95405uL, 0x6B4A5B3DF26D0221uL),  (+1, 0, 0xE2B732534A818E72uL, 0x830D23F576BFD4D2uL)),
                ((+1, -2, 0xC97893AC062E9607uL, 0x9B28B46FF2C3D699uL), (+1, -2, 0xB3499CC6166CA5A2uL, 0x47D70F2F260A1949uL)),
                ((+1, -4, 0x857FCE6241283BC3uL, 0x611718519006DD72uL), (+1, -5, 0xA6502D9E46C5BE2EuL, 0x5AAD2624E4F17D34uL)),
                ((+1, -8, 0xB6C677F3ED8BB55EuL, 0xB9278CDD6E492A72uL), (+1, -9, 0xA1B601407EF95CDEuL, 0x8BF21BCDA600028BuL)),
                ((+1, -13, 0xD708D8DAF951A43BuL, 0x6FF83B60B7004C31uL),(+1, -14, 0x83ECF2A419503F4FuL, 0xC40D7CEB114F6FD9uL)),
                ((+1, -19, 0x877115D3FFB4E2C1uL, 0xB2084C81470EE0BBuL), (+1, -22, 0xCD4779E91099A5FDuL, 0xF02A16AD43D4035CuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -2, 0xD8773039049E70B6uL, 0x5C8380FDFD6BB449uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xB43ED98DE5C1A6B9uL, 0x61138235147D28A7uL),  (+1, 1, 0xA459C1958BB3244DuL, 0x8AB5C5EAC12DA302uL)),
                ((+1, 0, 0xFABE33EF06C32823uL, 0xE37E90D5EC230A7AuL),  (+1, 1, 0xB561229C37BB584EuL, 0xFDCDB931F3E270D1uL)),
                ((+1, 0, 0xC0A3C12D0B64FE1EuL, 0xA7DB3C6D437F6DB5uL),  (+1, 0, 0xE11821E9627B03A0uL, 0x96D351F5AF9539C0uL)),
                ((+1, -1, 0xB4E619121CA0B658uL, 0xE8C87957142108C0uL), (+1, -1, 0xAC8E563D3283DED6uL, 0x919265C2F09CF712uL)),
                ((+1, -3, 0xD80CD14DE9C91A15uL, 0x11F654C8C293D909uL), (+1, -3, 0xA91AC7FD7C26CD28uL, 0x9193E0D67480CEB3uL)),
                ((+1, -5, 0xA503633F2B41A93BuL, 0xF54ED9D39953B562uL), (+1, -6, 0xD3FF9B1F2538E0DDuL, 0x9165B564A5316269uL)),
                ((+1, -8, 0x9DB4CF271E4CCD3EuL, 0x975C48650C2EE920uL), (+1, -9, 0xA5708B61255170F1uL, 0xEA1CCF88CCB49E5EuL)),
                ((+1, -12, 0xB2CE7EA79E487CABuL, 0x50F9459E4127EE56uL),(+1, -13, 0x975AF26952DF4A92uL, 0x4A0D7B3ACF0A1FBBuL)),
                ((+1, -17, 0xD943DE6AF474F101uL, 0x83A1A760C324B659uL), (+1, -18, 0x910C4CAB69E69C75uL, 0xB4AFAD74724629CBuL)),
                ((+1, -23, 0xE7D07CD0BDEB8A2BuL, 0x551EAD4CACD8B80BuL), (+1, -25, 0xE917103253CF4A13uL, 0x2660BD4E3A6CC376uL)),
                ((+1, -30, 0x859547D18C271636uL, 0x00C527A9C682A3A8uL), (+1, -33, 0xB278D36AB083988FuL, 0x6A0B523BB66F6A08uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, -1, 0xB17217F7D1CF79ABuL, 0xC9E3B39803F2F6AFuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xF34B1327DB5F84ACuL, 0x1ADA8CE7DD031371uL), (+1, 0, 0xB49790328D07B869uL, 0x7DB09E3C7DAE8CF4uL)),
                ((+1, 1, 0x849E0EB842B5EA83uL, 0x8959A205268DCFF6uL), (+1, -1, 0xD38849BA2DC2B06DuL, 0x7AD30D5E43A14073uL)),
                ((+1, 0, 0x990C4FB408DD313DuL, 0x75B98E2D1351AD51uL), (+1, -2, 0x8529E2B68B379D58uL, 0x46467957DDE37F0DuL)),
                ((+1, -2, 0xCF4C974BD6621C14uL, 0x89D774D105E315DDuL), (+1, -5, 0xC2FAA8C0E103EAA0uL, 0x4235E71AAD4636A3uL)),
                ((+1, -4, 0xAAF03CE80B2DEA66uL, 0x426A70B178344E6AuL), (+1, -8, 0xA7C214E519972E4EuL, 0x91FCE70703AFF86FuL)),
                ((+1, -7, 0xAB071214A7949DE9uL, 0x0B5685F47C38828DuL), (+1, -12, 0xA33A8616B1088591uL, 0x1ACB313D787716D7uL)),
                ((+1, -11, 0xC748D33EC0D929FAuL, 0x0C9A4986512E27F0uL), (+1, -17, 0xA2C0B1DE54873A8AuL, 0x7455EC86AF5A0E8DuL)),
                ((+1, -16, 0xF689548BD52BEBA9uL, 0xB258A46F6CB737CFuL), (+1, -23, 0x86701D6EA500E66EuL, 0x0C6F73688D926D7EuL)),
                ((+1, -21, 0x859FBBDE2FAF5EB1uL, 0x6D25DE54015B33EAuL), (+1, -32, 0xD2B881239E6F3475uL, 0xA10A76E79B60DEBCuL)),
                ((+1, -29, 0x9D1BF121681750A4uL, 0x4AEE08A6BD8FE963uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xE5585FD151001191uL, 0x36FEA076849739B2uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0xC2F7E90260C79DBBuL, 0x60AA38AEFB2A5B57uL), (+1, -1, 0xFFC94912DE51BCDCuL, 0x9346441577398F23uL)),
                ((+1, 1, 0x88551FB2C0628CD9uL, 0x3F3BC1B7039182A2uL), (+1, -2, 0xD184A5A151FBAC74uL, 0xF0B52437059C4D04uL)),
                ((+1, -1, 0xCD13DA56F2AECA4CuL, 0xB937F3128F2D096EuL), (+1, -4, 0xB54A9F93FED6FE01uL, 0x84A5D688A05F2C7FuL)),
                ((+1, -3, 0xB584B3675AEC7ACCuL, 0x04BE533A26070680uL), (+1, -7, 0xB1ED0A5F034BA820uL, 0x07F1C0A6D1A6E496uL)),
                ((+1, -6, 0xC1BD361D2492B433uL, 0xB406CF610F16D982uL), (+1, -11, 0xC586AE74B2B614E8uL, 0x2430CEB542598DE1uL)),
                ((+1, -10, 0xF4B20B69C8A476DFuL, 0xD2E6377E1A06F8D7uL), (+1, -16, 0xE8990E081073AF40uL, 0x792E8BADA320331AuL)),
                ((+1, -14, 0xAB2F1140CA38C9A4uL, 0xDEFA91124EDB13B7uL), (+1, -22, 0xF798B87F00D954E9uL, 0xCD581299B7BF7D79uL)),
                ((+1, -20, 0xE54E9BEBF71D1147uL, 0x04C89B12AD132445uL), (+1, -29, 0x9AF1A8B58D6C9941uL, 0x45F7BDE0C96B366FuL)),
                ((+1, -27, 0xCD000E3F3919A36FuL, 0x81B8C07CFEE6B74DuL), (-1, -40, 0x9EDC16CFC5EEF477uL, 0x57EF58E69A8867FEuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xCB653BE49167C59EuL, 0x80712A0744451830uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0xFA6E2630B8058089uL, 0x65142CFF4A7AF5D6uL), (+1, -1, 0xC1E0C98071166966uL, 0x17C4E50FB0133804uL)),
                ((+1, 0, 0xFEC1DA300DA7D6ADuL, 0x833D059C1B81E0F4uL), (+1, -3, 0xEE1C44F7E893CE29uL, 0x28AA44C635C78B89uL)),
                ((+1, -1, 0x8B405C4129C44C71uL, 0x3713198F448098A8uL), (+1, -5, 0x98282E93DEECB671uL, 0xCB57A76D5117C355uL)),
                ((+1, -4, 0xB1F0FED1BB985AC7uL, 0xF20EC9C63F0C54A8uL), (+1, -9, 0xD7E8955C9B2AE6FBuL, 0xE3753E162D922BB3uL)),
                ((+1, -7, 0x8728BE092B7347F8uL, 0xC15232B9F864DD98uL), (+1, -13, 0xA7CF0C74FBD6F9FFuL, 0xE533208CC57950DAuL)),
                ((+1, -12, 0xECE742CE4DFC84B2uL, 0x99C5503EC88EC2BDuL), (+1, -18, 0x835419E17D23780CuL, 0x03FAA82214CBF051uL)),
                ((+1, -17, 0xDBF584FCCFC381A4uL, 0x4243D82C289EA457uL), (+1, -25, 0xA8F0840CD80986AFuL, 0xBEBA3DD932A4057DuL)),
                ((+1, -23, 0xB3881277A218354EuL, 0x4A96E25DFAC76F91uL), (+1, -34, 0xCE0FB79D12BF3E45uL, 0x412A9E2C557D73C8uL)),
                ((+1, -31, 0xA00C271B9A4D19B9uL, 0xFB3E6176966C908CuL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x993321E223CE49A5uL, 0x3C2789A6630DB256uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0x906BAF195A081302uL, 0x125D81C1AC8C2ADBuL), (+1, -1, 0x9619698F99FD27C9uL, 0x74220A31E9E55F09uL)),
                ((+1, 0, 0xDF92D2C014A49A2DuL, 0x0811BCB1BE71846BuL), (+1, -3, 0x8C3DB4E267FAB77FuL, 0xF26359FFB252DD80uL)),
                ((+1, -2, 0xB7D78579DDBBB35DuL, 0xFD534EFDF297B31EuL), (+1, -6, 0x84FA888BFEF7F0F6uL, 0xCE3C75378F7FE287uL)),
                ((+1, -5, 0xAD59A2A406BA5648uL, 0x2847EA3AFC4332E2uL), (+1, -10, 0x86BFAFE595781373uL, 0xC053082D71FCBD63uL)),
                ((+1, -9, 0xBC4B1343608FC5F4uL, 0xD5DCBC7292A0E530uL), (+1, -15, 0x8C4EB21EEC808BC8uL, 0xE8EA189C422986E1uL)),
                ((+1, -14, 0xDF73F8C9BE4E9667uL, 0x0CCC97DF0C82BDE3uL), (+1, -21, 0x81CF82ABFEF7BF81uL, 0x38189AD0BBA27421uL)),
                ((+1, -20, 0xFC8B94012BFD61C2uL, 0x9725E753A2EEEB0EuL), (+1, -29, 0x8C51F1101A1618F6uL, 0x2FDF37B8EBBAB219uL)),
                ((+1, -27, 0xBEB96263D7F3E9A2uL, 0x732A6ED3C51F94B1uL), (-1, -41, 0xF0C565FA23AE86F6uL, 0x1446B5AD990DC91AuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX7Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xD28939D6780E4E09uL, 0x89E731C4043380C3uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xA5D8CF7EFEE415A3uL, 0x10C5D9A20CCAE0A1uL), (+1, -1, 0x80CA452AC4CA809FuL, 0x2FF3B04A95556625uL)),
                ((+1, 0, 0xD75DEA71DB3E7832uL, 0xF4C41179014CD134uL), (+1, -4, 0xCE91B606E75F539BuL, 0x23E0F750B0D4C426uL)),
                ((+1, -2, 0x9510A761BA4A784AuL, 0xA1B098E6CF566F88uL), (+1, -7, 0xA83436B38B00D46DuL, 0xA807CBB0C2C7CE42uL)),
                ((+1, -6, 0xED590511CF7DFA73uL, 0x61C9052DBF323F2AuL), (+1, -11, 0x92769E61B88D9E0CuL, 0x4F8F18C8758720B9uL)),
                ((+1, -10, 0xDA44B777E1AC7A08uL, 0xE064C6D24FBC81DFuL), (+1, -16, 0x832BF2F28A2475C7uL, 0xCC15B4B181B2C948uL)),
                ((+1, -15, 0xDBDC03FA825F4A7BuL, 0x7BDA50CB23B87E40uL), (+1, -23, 0xD1104EE170FA93D8uL, 0xF8181A21340F673FuL)),
                ((+1, -21, 0xD36D49350242FF20uL, 0x755383713B19DD28uL), (+1, -31, 0xC34281005B15337AuL, 0xD7DD5E4C7B5C637AuL)),
                ((+1, -28, 0x882DF0DED1AD545CuL, 0x01B54E7EFAB19540uL), (-1, -42, 0x8CD355D9BBAC034EuL, 0x587A53DB8B3EFBC1uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0x88670F996E617E59uL, 0x345CE24EF47B7E66uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xB134C6ED70C5348BuL, 0x8902272E028F0F36uL), (+1, -2, 0xD3868FB3A0E6188AuL, 0x18D492D4FEC7E6BEuL)),
                ((+1, 0, 0xBC3695D069B7E5B0uL, 0x0EE58B6524E58B4CuL), (+1, -4, 0x8932D566AA931F18uL, 0x7125793AD61CC76FuL)),
                ((+1, -3, 0xD2874C1D00272A89uL, 0x731224469F42B8F1uL), (+1, -8, 0xB0DA80FFD2697F7FuL, 0xF9B48C70D540C04BuL)),
                ((+1, -6, 0x84FDD9D231E9E265uL, 0x59B61A088FE8A004uL), (+1, -13, 0xEC090CB5E585D41EuL, 0x4B630CDA6E02B3A3uL)),
                ((+1, -11, 0xBCAE9F38C605F359uL, 0xA46EFF0FFE721A4FuL), (+1, -18, 0x99C05AF1BF8954B6uL, 0xCCE507DB01A79934uL)),
                ((+1, -16, 0x8BE87DB4F81CC64DuL, 0x54651B403CC09C51uL), (+1, -25, 0xA1F39EC67AFB3053uL, 0x3CE1126C73C1A5A7uL)),
                ((+1, -23, 0xB59A8AE567C2490AuL, 0xF43D3828F4649054uL), (+1, -34, 0xA0C0A434FFF33E9DuL, 0xFFD182E11DF8E9ABuL)),
                ((+1, -31, 0x8100953357AD7624uL, 0x108E5AC1C55230E8uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX9Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xA9AC7417E5B86529uL, 0x6A3793FB75390CA7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xC1331C4BA3A41B2AuL, 0xF6C6DB4D92DF380CuL), (+1, -2, 0xBC24B5670C474ADFuL, 0xB628A4087B51C8F5uL)),
                ((+1, 0, 0xB42AF8623F25B3B1uL, 0x88F536CA7633E733uL), (+1, -5, 0xD924DF8192137639uL, 0x37DB066BC3A7B3A1uL)),
                ((+1, -3, 0xB13D63D389071BFBuL, 0xBCA62330E2E9CA77uL), (+1, -9, 0xF91DE13214A55127uL, 0x083DD3AF1C70E658uL)),
                ((+1, -7, 0xC53EC989A0A6645CuL, 0x4E6E0E8B36351588uL), (+1, -13, 0x9405169965218A54uL, 0x5CF8A8CDF988D2A2uL)),
                ((+1, -12, 0xF6DCAD80977314D8uL, 0x15A464000D391D28uL), (+1, -19, 0xABCDA53F0A261CE0uL, 0x3E0FF3CBC8DDCA57uL)),
                ((+1, -17, 0xA1B38405AE79A893uL, 0xF4C7FF2D05981CE1uL), (+1, -26, 0xA15ADBF986770A43uL, 0xC78D86AA6DEAF2A8uL)),
                ((+1, -24, 0xB9A6DD00AB6123E0uL, 0x0A97B188CD410FABuL), (+1, -35, 0x8EF5AA14F3A3EB7EuL, 0xDFCAACC279A0F808uL)),
                ((+1, -33, 0xE97BCDBC433953E6uL, 0x7B98D2CC4A675A88uL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX10Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xCCD4490D3FBE7A58uL, 0x3EBAC5A615E07C3DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xCF972F1E742D2AE1uL, 0x0535F7D9D6F304F1uL), (+1, -2, 0xA964D79FB8605F4FuL, 0x408FB3F985FEB987uL)),
                ((+1, 0, 0xAC8603D9DCA01484uL, 0x5A126B5C5C31946CuL), (+1, -5, 0xB00FADFA8CD95FE6uL, 0xF31CDC63424A7883uL)),
                ((+1, -3, 0x976F70C24A80946DuL, 0x7A1A8C0449BE75F3uL), (+1, -9, 0xB5F2FA846D4751B8uL, 0x3F73CAE34A8BCAC1uL)),
                ((+1, -7, 0x968BB3E24291453AuL, 0x629ACD2BAD296833uL), (+1, -14, 0xC2D83E0ECC2108D1uL, 0x63781D1077AF25A4uL)),
                ((+1, -12, 0xA87F0F9D50C7D0FFuL, 0x79A7F104FBCC7A3CuL), (+1, -20, 0xCBE4964656BB8F89uL, 0xB122D0ABB8018FBDuL)),
                ((+1, -18, 0xC59C62153EE228BEuL, 0x1A4F70F9518A8F8EuL), (+1, -27, 0xACC1FCFAE58E5552uL, 0x4F96B515951A9385uL)),
                ((+1, -25, 0xCB4DC43D956E72C4uL, 0xED7E1D122FD59F0FuL), (+1, -36, 0x8A35E2AC903ED06EuL, 0xEA36080A0113CA99uL)),
                ((+1, -34, 0xE53C20D3863F2ADCuL, 0xB4E79FA3D826FB2DuL), Hexcode.Zero),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX11Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xF1ABAC84AA68A55DuL, 0xF9507B30F6953EC7uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xD08C5A39DC501DD0uL, 0x279061F559752CB6uL), (+1, -2, 0x8D320AA00EF2DC93uL, 0x607289B8576B29C9uL)),
                ((+1, 0, 0x9171106BE65EA523uL, 0xF95A90C7A31A6D39uL), (+1, -6, 0xEEB57120CFD582ABuL, 0x79CDB0999433E140uL)),
                ((+1, -4, 0xD1BC167F2DA28708uL, 0xF2724D9581DD9735uL), (+1, -10, 0xC13AFEDA9C2DF53BuL, 0x6659C06EA8E29296uL)),
                ((+1, -8, 0xA5B77F74448FEB1AuL, 0x04CD38F79E1985FCuL), (+1, -15, 0x982BEF9EBC75C93EuL, 0x1BDBDD0E2FCCE017uL)),
                ((+1, -13, 0x8B7C49C426526911uL, 0xB600DA14B27DE77FuL), (+1, -22, 0xCEFC8924855085D6uL, 0x8510C0144219D91FuL)),
                ((+1, -20, 0xDD2CB5A73AB3CC9AuL, 0x4F73847DE8C20BDFuL), (+1, -30, 0xA2C916F7D3D1C0A6uL, 0x3285C75D1BD39143uL)),
                ((+1, -28, 0xEA0FE7F86E0784E4uL, 0xC5D3571D77B045E5uL), (-1, -42, 0xBE033058BA6D6177uL, 0xF84FD4BF05F20A53uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0x8C04B9F9D46B9E66uL, 0xB904FD652337CF07uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xDBBA6D15203782B9uL, 0x96902FE04A7FD7DEuL), (+1, -2, 0x8169798990B6AB19uL, 0x2D23057EAB2F18EBuL)),
                ((+1, 0, 0x8B7087ACF4137C70uL, 0x750EE3FCCE005AD1uL), (+1, -6, 0xC891C00823041B73uL, 0x73B6E6D7D3C89730uL)),
                ((+1, -4, 0xB71C77D406CCF16BuL, 0x5B57F6FDE4B0D7F8uL), (+1, -10, 0x94E0D5337E0677DBuL, 0xD002122D5276672AuL)),
                ((+1, -8, 0x83D9E93C0A8D1756uL, 0xC24ECAA852A09B65uL), (+1, -16, 0xD719E6AF3D6D902EuL, 0xC5DAD9C840B5B0DDuL)),
                ((+1, -14, 0xCA6DC0AF37BC2B2BuL, 0xD39358B393433A94uL), (+1, -22, 0x864707942AE04F24uL, 0xCB3A9E28D9837A2AuL)),
                ((+1, -20, 0x9279956E7F3A8937uL, 0xA47E658F456501A9uL), (+1, -31, 0xC22238C7C148F1BAuL, 0xC8CBF4F8645F9B93uL)),
                ((+1, -28, 0x8D925D357D21985AuL, 0xBE2425B686196C13uL), (-1, -43, 0xCD1DB4FA0A837EF5uL, 0xB4C234665F3FAE3EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX13Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0x9FE5D0B6A80A1B4DuL, 0x2AC405094BA0DA57uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xE606729FF055277AuL, 0x89865C25CAB5EA1FuL), (+1, -3, 0xEEDCAF76BB0D49BBuL, 0x69D03D5F59CB143FuL)),
                ((+1, 0, 0x85E54A2849C2DB20uL, 0x7227CA684D879A0FuL), (+1, -6, 0xAADAB4CCFB552A26uL, 0x990B63F064E1F362uL)),
                ((+1, -4, 0xA160EF8A40FA578DuL, 0xB3EFA54D6692ECD3uL), (+1, -11, 0xEA2D12E3ED7E8BADuL, 0x8E7F8EBF3E0E0BC2uL)),
                ((+1, -9, 0xD56DFF7852D7E1D8uL, 0x8DEA7FA350B1C8FBuL), (+1, -16, 0x9C3CD0E3FF7B2D54uL, 0xC453014454E14873uL)),
                ((+1, -14, 0x968CBD6EC0DA0864uL, 0x4E72BA0F48662E10uL), (+1, -23, 0xB43E93AA5258F251uL, 0xA52AA4EEBD9E0760uL)),
                ((+1, -21, 0xC851E8BA1603C4A0uL, 0xAEBDB5FC266558A1uL), (+1, -32, 0xF117CDFC5C2DD630uL, 0xC5E92F4761D10539uL)),
                ((+1, -29, 0xB21D47019636DD36uL, 0xC0851EC34D1BB2CCuL), (-1, -44, 0xE865BEB29EDA42E6uL, 0x95CFEA33C1BB334EuL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX14Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xB46AD4E1D9966C4BuL, 0xB141D401EF9E5C5FuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xEF90C617D7D691E6uL, 0x32B1BA883C1603E0uL), (+1, -3, 0xDDBD58C6AC8A5D20uL, 0xC1CC4F27D4A86A4DuL)),
                ((+1, 0, 0x80C6A3F26D446EE0uL, 0x2C288F9AC96BC2FBuL), (+1, -6, 0x93428B67974506E0uL, 0xCF34C0C136723A6AuL)),
                ((+1, -4, 0x8F65D213BC5FDCEDuL, 0xCD1FFE5CA360EE1DuL), (+1, -11, 0xBB6F7433611E2DADuL, 0xB4E1FA41FE3398DFuL)),
                ((+1, -9, 0xAF4D72C93D16666EuL, 0x9FBED0FB0BF3885FuL), (+1, -17, 0xE8538A1EBA0D3A03uL, 0x3F9D2EFC6CE2607EuL)),
                ((+1, -15, 0xE4B664CB36C75BB0uL, 0x318A9133986DD880uL), (+1, -24, 0xF915875C418001AEuL, 0xC2D100F30388D141uL)),
                ((+1, -21, 0x8CC911E1D9C2AF91uL, 0xE0F3C38A428D82F0uL), (+1, -32, 0x9AFC1952DAFE5E64uL, 0xBF1003FAB978399FuL)),
                ((+1, -30, 0xE7BE1F29BA089935uL, 0xD0C502BB62466ADDuL), (-1, -44, 0x893747CCBEE0C154uL, 0xA03008FFA38707D6uL)),
        });
        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX15Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xC9879EF8B15213C3uL, 0x4745965528EED317uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 2, 0xEC95D5990F7F7214uL, 0x2C5321421C473010uL), (+1, -3, 0xBFD21B0ADD33059DuL, 0x8AB2C7FCD60E0051uL)),
                ((+1, -1, 0xDE08DCFA020A340CuL, 0xC5D1BAD53F2E2FE4uL), (+1, -7, 0xD7D9DF8CFF607367uL, 0xB149E263B76EC2D9uL)),
                ((+1, -5, 0xD3E8E02610F810A4uL, 0x070EED9AC6BA98FEuL), (+1, -12, 0xE18D42C627107B5AuL, 0x924F66E0FEEF154CuL)),
                ((+1, -10, 0xD7E94ACD53B38773uL, 0x97AE10A276174245uL), (+1, -18, 0xDA077DF4942E2AC0uL, 0x7CC09EC66BCCD4C9uL)),
                ((+1, -16, 0xE03821340A1ADBCAuL, 0x9C38B8879FFA2747uL), (+1, -25, 0xA5C638701481A842uL, 0xF58CDC73B3FE5DA8uL)),
                ((+1, -23, 0xC9B02524F34729F9uL, 0xD2DEE0BFAE879AEDuL), (+1, -35, 0xEAD1F33F88374914uL, 0x876B2371F08BDE8FuL)),
                ((+1, -32, 0xC665099FE373F1B2uL, 0x29E10672E255E0EEuL), Hexcode.Zero),
        });
    }
}
