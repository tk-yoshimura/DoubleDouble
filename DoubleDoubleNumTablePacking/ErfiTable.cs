using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class ErfiTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(PadeX0p25to0p5Table), PadeX0p25to0p5Table },

                { nameof(PadeX0p5to1Table), PadeX0p5to1Table },
                { nameof(PadeX1to1p5Table), PadeX1to1p5Table },
                { nameof(PadeX1p5to2Table), PadeX1p5to2Table },

                { nameof(PadeX2to3Table), PadeX2to3Table },
                { nameof(PadeX3to4Table), PadeX3to4Table },

                { nameof(PadeX4to6Table), PadeX4to6Table },
                { nameof(PadeX6to8Table), PadeX6to8Table },

                { nameof(PadeX8to12Table), PadeX8to12Table },
                { nameof(PadeX12to16Table), PadeX12to16Table },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }


        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0p25to0p5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0x856C3922E1D8F738uL, 0x9DF314910FCF6755uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xEF95B58917BA824DuL, 0x1D9188ABBECB4B5AuL), (+1, 1, 0xF207397D0383CABFuL, 0x8E7E4D04EA551EB2uL)),
                ((+1, 1, 0x885AFE8DB6FDC436uL, 0x055051A19A27825CuL), (-1, -1, 0xFE9AE410AE7AC142uL, 0xEC3390AFE9B85C84uL)),
                ((+1, -3, 0xCFB1F99AC86660B5uL, 0xC7EC9C1F83558B0FuL), (-1, -2, 0xD621F458FDA57FD4uL, 0x8B4C3CDF74E41518uL)),
                ((+1, -2, 0xF735598FADA10296uL, 0x5A051E38D0A0A08DuL), (+1, -2, 0x99CCEEFAFF1AD21EuL, 0xA6D6BEC678B8DF02uL)),
                ((+1, -5, 0x96F266E90C81BE36uL, 0x1867705D596C1C21uL), (+1, -4, 0xF493F2463A8D9DDEuL, 0x3DB5BC4BB28AD807uL)),
                ((+1, -5, 0xFBB7EC9575CCF84EuL, 0xFB48577D3D714B18uL), (-1, -5, 0xA2BB26E00FC8D5BCuL, 0x225D1994399B5927uL)),
                ((+1, -9, 0xDD05F7B99E7F4164uL, 0x5AAC6BF8EF1E0438uL), (-1, -9, 0xFB91B0A2D4036BBBuL, 0xC4E45B6C1071ABB1uL)),
                ((+1, -8, 0x926B4C31174EC21DuL, 0xEB54BA6C56E2614EuL), (+1, -9, 0xCF0B62AE0ED7C200uL, 0x7E0BBFE2DBCD8128uL)),
                ((+1, -13, 0x8BEEBFE232D6FD60uL, 0x494BE229C91A8D3FuL), (+1, -12, 0x8962EEB132173CB3uL, 0xF0F1E07D5AEAD2D7uL)),
                ((+1, -13, 0x9F55F93889FCD780uL, 0xBAFB2EEDCF9DDCE3uL), (-1, -14, 0xDE16825C41857D2AuL, 0x18277F5DC7095F63uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0p5to1Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x96C9C7BD87A5842DuL, 0x93FD89EB5E58C5EAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xF27961664DB99C7CuL, 0xA3665034AD74CB2BuL), (+1, 0, 0xC74E1C5A2A4AF622uL, 0xD4E35BDFBBC5A626uL)),
                ((+1, 0, 0xAA198D8DE758463FuL, 0x000C2E6E20C626AFuL), (-1, -1, 0xD7675636F48C0542uL, 0x5DA2843E0D50101BuL)),
                ((+1, -3, 0xE85D4877DFC1D1D4uL, 0xDF3EB2D0F4381A47uL), (+1, -3, 0xB77D1DA36DB92CC4uL, 0x04D4CE429948F71CuL)),
                ((+1, -2, 0xADEA6C41B2368909uL, 0xC2F893F3260B233DuL), (+1, -3, 0xBCA2428B861231DFuL, 0xA5B1C093E958BB97uL)),
                ((+1, -5, 0xC38798795A69F92DuL, 0xD82186BE3E838E57uL), (-1, -10, 0xBF58A1E564AA7905uL, 0x317FB2307C419CE5uL)),
                ((+1, -5, 0xD098FD4A9EE98B2DuL, 0x1E6B190F6A2262BFuL), (-1, -7, 0xE8CE2BF78EBEA226uL, 0x25DA308924032CFDuL)),
                ((+1, -8, 0xB6532823D1EBE4C0uL, 0xF3BC6992B176BFAFuL), (+1, -8, 0xD47E6EFA7A0301CBuL, 0xA0D23AAE6406A083uL)),
                ((+1, -8, 0x9CF50DF0DE05FD31uL, 0x1E2C2700A19D41DEuL), (+1, -11, 0xC02A31AF2B38C022uL, 0x1A8017C6AF7FB7B2uL)),
                ((+1, -12, 0xBE7E3196D2D88185uL, 0x86D3C047379EB290uL), (-1, -14, 0xD2231024957C1F27uL, 0x414B1145C5FC479CuL)),
                ((+1, -12, 0x8F1D41F108308A31uL, 0xF5A3353C21B2202CuL), (+1, -21, 0x81C661AB4E6895B1uL, 0x0AD29B84FAD2EA6FuL)),
                ((+1, -17, 0xB496818CAE9BE048uL, 0x17199DE8B5AF20EBuL), (+1, -17, 0x82B9A1FCEC2352D1uL, 0x42B33E1D61A3F61BuL)),
                ((+1, -18, 0xFD8199A81182D68AuL, 0x15FE7126B71F1FBAuL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1to1p5Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 0, 0xEDE21043F81CA358uL, 0x992D01F8CFF99BD0uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -1, 0xF197461D1B63510DuL, 0x2AA36E86FA4B4E77uL), (+1, -2, 0xBB85C162FE54D68BuL, 0x165A915DEA9765DAuL)),
                ((+1, 0, 0x9C2405DD7D1B446EuL, 0x438DCC360C9E4FC7uL), (-1, -2, 0x8C4434129BD4635CuL, 0x8DDDBF199F1C5DE7uL)),
                ((+1, -2, 0xF6CDDE4D1ABBB489uL, 0x1DBB9B846121D751uL), (+1, -2, 0xCB603C6C8E5FC923uL, 0x274CC7BADCA7A342uL)),
                ((+1, -2, 0xAEB667F13AF8F889uL, 0x9AD06676DB3B9BFCuL), (+1, -6, 0x9240916AFF60179FuL, 0xC82DD34270EC9CA9uL)),
                ((+1, -4, 0xDA4BFE2B1FE8CBFCuL, 0xEA8E9132F3A4014AuL), (-1, -7, 0xA48DEDB05C3E775DuL, 0xC3328C09C5FC8BDDuL)),
                ((+1, -5, 0xD985494B00F96A1DuL, 0x07CA89B8FCE0150BuL), (+1, -7, 0xDD6D0CA3ACBC6B26uL, 0x7B5CC87816D48D4FuL)),
                ((+1, -7, 0xD3377726D67FD3C8uL, 0xCB9CBB500AE24F7DuL), (+1, -9, 0xDC018806EFE7B24BuL, 0xA3DB8BF42790950BuL)),
                ((+1, -8, 0xA0FE8D54505DB8AFuL, 0x5D7A10FDCDBB562DuL), (-1, -12, 0xFBE9E4EE78CFEB9AuL, 0xC2B58A0B0C049CC8uL)),
                ((+1, -11, 0xE283F848576829E4uL, 0xADAB7431F3139ADEuL), (+1, -13, 0xB5DC01F1A443D426uL, 0xC77F92C09A4ECF99uL)),
                ((+1, -12, 0x87781347BB849BCCuL, 0x9BF47929DD98A7FEuL), (+1, -15, 0x816338716864DB3BuL, 0xF63C0485DF0BC041uL)),
                ((+1, -16, 0xDB1F256FCECDFDC5uL, 0x7C7574B45D1EFE1CuL), (+1, -25, 0x8D89E48C4BEC42F2uL, 0xDAB86C3871EB818DuL)),
                ((+1, -18, 0xCAF9C7B43B8CD9B3uL, 0xA30A0BB96BA2E696uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1p5to2Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0x95721C1E6742D01DuL, 0xE2198733A7A02DCEuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xEDDADF57A9C79C1FuL, 0xF38971BE57025D7DuL), (+1, -3, 0x86056F12515002B7uL, 0x43718D4B61326A2CuL)),
                ((+1, 0, 0xF49AEE59B00AE44EuL, 0x65A53F86D579D18AuL), (+1, -2, 0x92BEA738D78FFCBBuL, 0x2162B5DCA43BFE10uL)),
                ((+1, 0, 0x833C16372196B04CuL, 0xB3B17F3B47EE52D0uL), (+1, -2, 0xAD6EF8DEF7AB364FuL, 0x4F0F5C84379CAE08uL)),
                ((+1, -1, 0x9957FA1A009B30AFuL, 0xBB3D1B9640A9E255uL), (-1, -6, 0x81C91BC1182EE687uL, 0x50559BBF4C544078uL)),
                ((+1, -3, 0xF2BD09A2DE86B01FuL, 0x8C10B0A8F3E2D01FuL), (+1, -5, 0xD170198743AF0937uL, 0x894927FCC80267AEuL)),
                ((+1, -4, 0xC7BAA5B6375C311EuL, 0xB20A3549E8EE86E7uL), (+1, -7, 0xE80875BB803CEF9BuL, 0x61C7DDE8A0F30DD2uL)),
                ((+1, -6, 0xEDA5A561618B435CuL, 0xC3BCD7EE830364ECuL), (+1, -11, 0xCF88E27D60C85EDAuL, 0xEF918CBA4E2683D2uL)),
                ((+1, -7, 0x91109FCEE7C9D6EBuL, 0x3C2B1704DC2B8573uL), (+1, -10, 0x843706E5742EE261uL, 0x30D6917DA02754A7uL)),
                ((+1, -10, 0xF877954B511C571BuL, 0xA9F52E24794BB8E3uL), (+1, -12, 0x84A931F75941DEBFuL, 0xEF908A801FA2DF46uL)),
                ((+1, -12, 0xDC33215CE6659AB9uL, 0x5CB3CD7BB6BA1E18uL), (-1, -18, 0x84CA8ED1C914A47CuL, 0x8275BC1FA66BB15EuL)),
                ((+1, -15, 0xDF766742D81A86C6uL, 0x9E658D6D14F63E24uL), (+1, -18, 0xC61E0B7EE0876F99uL, 0x93275A7613FC94B5uL)),
                ((+1, -18, 0xFC42A1236F906FF3uL, 0xAE93D2DECC181253uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2to3Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 1, 0xD462688A0805AF1CuL, 0x8447DEDCF5225C7DuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0xCDA5E42EEA7E2D0FuL, 0x383BA149F01473BBuL), (+1, -2, 0x92D5EF0F2348EBD8uL, 0x5F2EF02AC1EF666DuL)),
                ((+1, 1, 0xCE3440B0BFCB9F71uL, 0xDB06E97918C07195uL), (+1, -1, 0xAC8BE51BE4445637uL, 0x96DAC20E00FF1999uL)),
                ((+1, 0, 0xFA99ABFEEF98E795uL, 0xA3141FFAA5F03223uL), (+1, -2, 0x80108E4E5A2198ECuL, 0x647A8AB10EBF0BACuL)),
                ((+1, 0, 0x9278BFCAFEF37219uL, 0x9EB4D5B21F0CC5E9uL), (+1, -4, 0xEAC78410B102D9BEuL, 0xDE3EE500085634E1uL)),
                ((+1, -1, 0x817801C50CFCEAD3uL, 0xC3CC9612920D8913uL), (+1, -4, 0xB66B2AF4FA9E2F37uL, 0x9523DFE6AE58828AuL)),
                ((+1, -3, 0xD99042D96D2B3D93uL, 0x1598A437729760D5uL), (+1, -7, 0xB83E478C0038935EuL, 0x48B6C42A68AFA452uL)),
                ((+1, -4, 0x9336F18DBF77F0B2uL, 0x2EB72F46A53A556CuL), (+1, -7, 0x9F172185D5915D0EuL, 0x3EB62BB14289557FuL)),
                ((+1, -6, 0xBCD6C785874102D9uL, 0xE41D7EF889E42FF4uL), (+1, -9, 0x8455A460B8E1A812uL, 0x71FF99038B571532uL)),
                ((+1, -8, 0xC4576BE71CFDD03DuL, 0x77F67909709F4090uL), (+1, -12, 0xD5344A6620CAD9D0uL, 0x8221DA3B1C2AADA1uL)),
                ((+1, -10, 0xC11ECD4577DD3417uL, 0xAC78499426C1E842uL), (+1, -13, 0x8D0589716FD12B2AuL, 0xE0B4719051020586uL)),
                ((+1, -12, 0x92E0405F558F0E6EuL, 0xEFF7D477BAB267CEuL), (+1, -16, 0x8EAEBD62C3A91EC3uL, 0x0F2D8C659E573838uL)),
                ((+1, -15, 0xD34C6E60714DA96FuL, 0x20781E3128BCE886uL), (+1, -19, 0x980CC9C0A1EA55C4uL, 0x4893FA2CA95246C5uL)),
                ((+1, -18, 0xC1F9833F1099B679uL, 0xF2A55577D35F8B95uL), (+1, -22, 0xC13613960B9AB6E5uL, 0x25CEE4040F32D33DuL)),
                ((+1, -21, 0xAD721FCF25342449uL, 0x3284C8749CB85D3FuL), (-1, -29, 0xB8078ED532C9F930uL, 0x7EA459C93F7FF75DuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3to4Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xB38080AB43349E66uL, 0xBFE77233C93BD546uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 3, 0x8B648D2AE5C92E01uL, 0x78A1444A727F8FC5uL), (+1, 0, 0x94CE2F3E4234E4D1uL, 0x89DD050256415B7EuL)),
                ((+1, 3, 0x8F5EE7FD43C47D38uL, 0x4A89159AE9F9E45AuL), (+1, 0, 0x94CDDADB89A27F8AuL, 0x306286075DA357BEuL)),
                ((+1, 2, 0xD113D2D068DA2B6DuL, 0x6E53831E02E23C3FuL), (+1, -1, 0xB979CE73E0E3B4F2uL, 0xD2E23815A5F85EA2uL)),
                ((+1, 1, 0xF4BA4FC3610B9656uL, 0x908264150AB5214BuL), (+1, -2, 0xD251EEC14C4E941DuL, 0x08711661C5058D97uL)),
                ((+1, 0, 0xE9366D02F23CC794uL, 0x2CCF0D71ED40294CuL), (+1, -3, 0xB0F2DEB6BABC95DAuL, 0xBA23710EEBD345DEuL)),
                ((+1, -1, 0xBB585EA6611A4C7DuL, 0x2E7AEB582C80175CuL), (+1, -4, 0x8638F5F35961D45CuL, 0xA573287101C77A26uL)),
                ((+1, -3, 0xFD1CC2D62B9F12DFuL, 0x11E9658FBA48535DuL), (+1, -6, 0xA5C15B788D50960BuL, 0x934B30544BF16153uL)),
                ((+1, -4, 0x90F1D1CE12838413uL, 0xCFFBD26D8D27234AuL), (+1, -8, 0xA5E5EE9D9B23A4ABuL, 0x61AD0E87FCBF597CuL)),
                ((+1, -6, 0x8A16D3B19C31422BuL, 0xD79979E7B0C14C67uL), (+1, -10, 0x97C8A4808E1DA535uL, 0x9E8C4DEDCB9CAF80uL)),
                ((+1, -9, 0xD7AD82D77285256FuL, 0x946AD357FCAB739EuL), (+1, -13, 0xB09D7195D31971BBuL, 0x7CF4301102DD0710uL)),
                ((+1, -11, 0x8245787571FBF232uL, 0x0093F1B21EDBF944uL), (+1, -16, 0xD086BDFB534339D5uL, 0x7C730FA3562CAECBuL)),
                ((+1, -15, 0xE0D5F2EEF384C90EuL, 0xA8AFCBB844FBF255uL), (+1, -20, 0x9FF96858FA778FF5uL, 0x7C0BE65003F6ACE0uL)),
                ((+1, -19, 0xCB5B687CAD5EF5BCuL, 0x126C3B8BAE092B5AuL), (+1, -26, 0xD35B8170A05FE885uL, 0x13E390A86AB9F0B9uL)),
                (Hexcode.Zero, (-1, -31, 0xF0A112E75A441327uL, 0x062203C09B92D341uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX4to6Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 2, 0xF76506031A9E865CuL, 0x3D34F6BD99E2ED5CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 4, 0x96B78A29DBDDB76BuL, 0x335277F9BE24FFF3uL), (+1, 1, 0x8ABFAD49264B2D73uL, 0x13CEA9A189DB4A01uL)),
                ((+1, 4, 0xD11FF46258AC70C2uL, 0xE8ABE6458823BC84uL), (+1, 1, 0xB34D3D77D86AB44DuL, 0xB71CABC71ABE9698uL)),
                ((+1, 4, 0xCE9ADEE327D77C4EuL, 0xA13EF7AC148A9483uL), (+1, 1, 0xA5F575A217A70F99uL, 0xABC7904268048399uL)),
                ((+1, 4, 0xA034843A26591D77uL, 0x64651B56CC2FCB8CuL), (+1, 0, 0xF3382DA0DE88187DuL, 0x1C086C3CF3226131uL)),
                ((+1, 3, 0xCC8C580353CDA5CFuL, 0xD5FBDAB23D99E5E4uL), (+1, 0, 0x930989CD54ADAD55uL, 0xE712DFF26A8F5207uL)),
                ((+1, 2, 0xDD5E94160464E727uL, 0xE2DCA1EFF28D4920uL), (+1, -1, 0x970F68FC16976144uL, 0x246A853004133748uL)),
                ((+1, 1, 0xCE9FF2262DFEBF61uL, 0xFAF4E959EB9B1A59uL), (+1, -2, 0x85C6F3F927B272EAuL, 0x16BE7D996D56EA57uL)),
                ((+1, 0, 0xA81E98CF08689420uL, 0xA52596BE8EE6993EuL), (+1, -4, 0xCE5F88E92A59AB9DuL, 0xB9023EABEFAB35E9uL)),
                ((+1, -2, 0xEFBA747E9EF55CCAuL, 0x29A9DBA4B2FABF05uL), (+1, -5, 0x8B04A0ED3CF25323uL, 0xFCDD0EC625B2ED11uL)),
                ((+1, -3, 0x95E685611FE7C4B7uL, 0x20964038890FA7A3uL), (+1, -7, 0xA3806BCCD686D17AuL, 0x0F963B9FB5F71A18uL)),
                ((+1, -5, 0xA3C8226377F3EBDEuL, 0x46BFBEE56BAA1055uL), (+1, -9, 0xA6A0CDCE421FA269uL, 0x3DF86A9558BC54ACuL)),
                ((+1, -7, 0x9AE7634170409362uL, 0x14DE1B2433915ECDuL), (+1, -11, 0x9133BE17CBD51304uL, 0xA8EFA151C34DDE52uL)),
                ((+1, -10, 0xF958E44E420C8558uL, 0x42CE8A58C988FFF2uL), (+1, -14, 0xD2E51CB7C0D3CD74uL, 0xBFCD5D1C0C53F79BuL)),
                ((+1, -12, 0xA5CB5E9525BBFC92uL, 0x371EB566E9F3D2C6uL), (+1, -17, 0xF3D6A12A9DA63498uL, 0x045809206EFE9AD4uL)),
                ((+1, -15, 0xACA37CF137050F9AuL, 0xCBD916ACA76F503AuL), (+1, -20, 0xCC5E2FD654463776uL, 0xAD136D3BB40FCF55uL)),
                ((+1, -19, 0xFC1C263ED5E491EAuL, 0x039AE7411ED242E3uL), (+1, -24, 0xBEF824DA30F0CFF2uL, 0x79B8F86E35E01C3DuL)),
                ((+1, -23, 0xBEF82AE233CE8421uL, 0xD5D38931A12F0897uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX6to8Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xBD40E58A5B915B9DuL, 0x65AC08F5AD49515EuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 5, 0x9A06F0E614BAD78FuL, 0xF46F99901C58F7FBuL), (+1, 1, 0xC55D26AD20B250C4uL, 0x680058A78F06FF84uL)),
                ((+1, 6, 0x809464E37DBA2100uL, 0x93876566AFA89329uL), (+1, 2, 0x9D00D42D003A2B3AuL, 0xD1031C05EB347B1BuL)),
                ((+1, 6, 0x8F76D88C6BD67D0AuL, 0xE6DCE5E9E39A6A43uL), (+1, 2, 0xA727991F97F35FCDuL, 0x3E561C2D3D61C4F9uL)),
                ((+1, 5, 0xECC41CA5CA81173CuL, 0x73D829324236DCD0uL), (+1, 2, 0x8381DBCC20F578A6uL, 0x8137946DB8128138uL)),
                ((+1, 5, 0x97AF3C260BD11FFAuL, 0x92348034D539CE1CuL), (+1, 1, 0xA02A64F1447CCA5EuL, 0xBCF0226F7D905156uL)),
                ((+1, 4, 0x9A805E1F4898FC26uL, 0x825D337511CE0C4CuL), (+1, 0, 0x9A33CB5B4EBE6E1BuL, 0x5825674A11B0FEEFuL)),
                ((+1, 2, 0xFC249DDCBD169CBFuL, 0xB0C1BF8569EE91F0uL), (+1, -2, 0xEBA51C0676EAF3B9uL, 0x934FA192D4EA8360uL)),
                ((+1, 1, 0xA3FA6670B4D22F77uL, 0x7B8850D5E652148BuL), (+1, -3, 0x8D5216464C2970A3uL, 0x745D92E38A411185uL)),
                ((+1, -1, 0xA6E062A2A818F862uL, 0xB196B44113B3BFF0uL), (+1, -5, 0x8146D8ACD2D2DE7DuL, 0x4D7B86764DAB2E55uL)),
                ((+1, -3, 0x8089287E60378835uL, 0x4EE248BF7C42D738uL), (+1, -8, 0xAB77C90E1338DAC2uL, 0xE5CDC6C7B86DBAF0uL)),
                ((+1, -6, 0x8EA62AFCBC78990AuL, 0x3BBBDEDDEC9F9966uL), (+1, -11, 0x98764C759C472CADuL, 0xA112092C167A9899uL)),
                ((+1, -10, 0xD43BD041071E08E9uL, 0x1677546B3DA27CF3uL), (+1, -15, 0x9FC62CCA24655129uL, 0x11E5FF8610E7ED3DuL)),
                ((+1, -14, 0xBB5FED2D07207EA4uL, 0x925E894D839A613AuL), (+1, -20, 0x9334020FB0D56687uL, 0xE61F95E00AB3877FuL)),
                ((+1, -19, 0x9334020FB741BB6BuL, 0x90A3600F05227D88uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX8to12Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 3, 0xFDF7AAFED198363DuL, 0xB1BFA2B7D74DF39CuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 5, 0x885EB96E73582864uL, 0xF7A30D5362A8F59DuL), (+1, 1, 0x8154CAFD910D8658uL, 0x84A0D7472BD9A1BCuL)),
                ((+1, 5, 0x808C4AEC59810218uL, 0x280A343CD987039FuL), (+1, 0, 0xE24FE198D1DCC84BuL, 0xB2AD76EB834A0FBAuL)),
                ((+1, 4, 0x8D0622AC6FD6A12FuL, 0x21099D523BC82BB1uL), (+1, -1, 0xE2DF426935055B7DuL, 0x351537522A3F0555uL)),
                ((+1, 2, 0xC8BC93CF5E1B9B03uL, 0xE4C50D404EB6F467uL), (+1, -2, 0x90CEBD768EE5115AuL, 0x094C313280338964uL)),
                ((+1, 0, 0xC327929C09B9923FuL, 0xAA2A17A059924EE4uL), (+1, -5, 0xF6A63E86C335DEC6uL, 0x37F4DC46BD784C36uL)),
                ((+1, -2, 0x8482EE240F4979CEuL, 0x7F82A8454FF59074uL), (+1, -7, 0x8E3D357C4FAB98D4uL, 0xC049078D17355C60uL)),
                ((+1, -6, 0xFBD00711B0E7794EuL, 0x549A398A95B29594uL), (+1, -11, 0xDBC8FF8D59BBB418uL, 0x072C0C07B50BD963uL)),
                ((+1, -9, 0xA44C260FDE48AAEAuL, 0x542E96B5C90A4B80uL), (+1, -15, 0xDA0C38A9BA805DB2uL, 0x5BEB3F54167D9BC3uL)),
                ((+1, -13, 0x8C638F76B3EE4558uL, 0x390D557D9DC0FE26uL), (+1, -20, 0xFB2B71DE9F5D1EA2uL, 0x6784751320D1E34CuL)),
                ((+1, -18, 0x8D8BECE9CAEA2BDEuL, 0x0B045EF5A1600406uL), (+1, -26, 0xFF633FA7B3BA5842uL, 0xA486229355E7A637uL)),
                ((+1, -25, 0xFF633FA7B3BA624FuL, 0x41DCB4DB0F67B394uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX12to16Table
            = new(new (Hexcode c, Hexcode d)[] {
                ((+1, 4, 0xBF542084B71356B0uL, 0x0C1EC4D671B72B24uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 4, 0x8A9AE80CD93D92A2uL, 0xCFE00A05AA081C88uL), (+1, -1, 0xA3F89EFEA2FB2309uL, 0x43C51062150CECC8uL)),
                ((+1, 2, 0xAEF212B0649116A5uL, 0x48880A4A4CF567BEuL), (+1, -3, 0xB30FD15B491331EEuL, 0x87F4651612DFFC40uL)),
                ((+1, -1, 0xFB43B89FFB13BFDFuL, 0x8D0FC7457C9F2DB0uL), (+1, -6, 0xD81768C0E6552BF8uL, 0x1A8124C08F148A0FuL)),
                ((+1, -4, 0xE095440FA42234BAuL, 0x4E7FA0E2D99FFA6CuL), (+1, -9, 0x9BA05A3A207FD415uL, 0xCF2246E015F9C658uL)),
                ((+1, -8, 0xFFDB06CD741077DAuL, 0x9CE5BF07A819F5E4uL), (+1, -13, 0x85C77F5773F0DE1BuL, 0x5425B3E19D55646DuL)),
                ((+1, -12, 0xB56AD14F2B068E34uL, 0xC075C92FE7E794EAuL), (+1, -19, 0xFE34077503EA11A6uL, 0x259F272DBE17EAA9uL)),
                ((+1, -17, 0x92684E6774CCBDF2uL, 0xD6A03961CAAC939EuL), (+1, -25, 0xCDEDC734C8FD4EC8uL, 0x532580E6A78D6385uL)),
                ((+1, -24, 0xCDEDC734C8FD59A1uL, 0x9F185DDCABDCBE31uL), Hexcode.Zero),
        });
    }
}
