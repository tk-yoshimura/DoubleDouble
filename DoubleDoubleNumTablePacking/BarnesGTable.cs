using DoubleDoubleHexcode;
using System.Collections.ObjectModel;

namespace DoubleDoubleNumTablePacking {
    public static class BarnesGTable {
        public static void Pack(BinaryWriter stream) {
            Dictionary<string, ReadOnlyCollection<(Hexcode c, Hexcode d)>> tables = new(){
                { nameof(PadeX0Table), PadeX0Table },
                { nameof(PadeX1Table), PadeX1Table },
                { nameof(PadeX2Table), PadeX2Table },
                { nameof(PadeX3Table), PadeX3Table },
                { nameof(PolyXNegativeTable), PolyXNegativeTable },
                { nameof(LogPadeX0p25Table), LogPadeX0p25Table },
                { nameof(LogPadeX0p75Table), LogPadeX0p75Table },
                { nameof(LogPadeX1p25Table), LogPadeX1p25Table },
                { nameof(LogPadeX1p75Table), LogPadeX1p75Table },
                { nameof(LogPadeX2p25Table), LogPadeX2p25Table },
                { nameof(LogPadeX2p75Table), LogPadeX2p75Table },
                { nameof(SterlingTable), SterlingTable },
            };

            foreach (var key in tables.Keys) {
                stream.Write(key);
                stream.Write((UInt32)tables[key].Count);
                foreach ((Hexcode c, Hexcode d) in tables[key]) {
                    stream.Write((UInt64)c.Hi);
                    stream.Write((UInt64)c.Lo);
                    stream.Write((UInt64)d.Hi);
                    stream.Write((UInt64)d.Lo);
                }
                stream.Write((UInt32)0u);
            }
        }

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX0Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000000000000uL, 0x0000000000004AA6uL),  (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 1, 0xA8E67BC8F4077A56uL, 0xA46C1B87742E8120uL),  (+1, 0, 0xD24AFC7E963BBE40uL, 0x959ACF4DC620AE2EuL)),
                ((+1, 1, 0x83EF2BD1C4DF03EFuL, 0x1EFE68C31368AF11uL),  (+1, 0, 0xC517DF72B10FC261uL, 0xBB419DCF099EF8B6uL)),
                ((+1, -3, 0xA4D8E17E8F88BF9CuL, 0xFDCE2B6B53D237D1uL), (+1, -1, 0xF32FFE7765A8A61BuL, 0xD93956F9DDD9D3EFuL)),
                ((-1, -3, 0xF080EB96EFEE238DuL, 0xEF5397515A47C03AuL), (+1, -2, 0xDB8478813004D46BuL, 0x983E267873B2C9F7uL)),
                ((+1, -4, 0xAF04BCF5D5AD7494uL, 0x8D3FC98871B5294AuL), (+1, -3, 0x8F7DDF660ABF0E50uL, 0x7F8F8A09132BEBF5uL)),
                ((+1, -5, 0xAA3AB941E52DDC58uL, 0xC0AE3130342A890EuL), (+1, -5, 0x851571AC89B3D436uL, 0x07C0E6097A8B00ACuL)),
                ((-1, -6, 0x9B0891F2887A0D05uL, 0x45EA39427485B1C3uL), (+1, -8, 0x827E7C774C024FDFuL, 0xF3A55C19604CFB3BuL)),
                ((+1, -10, 0x952B72C1D13EC767uL, 0xAC6F36165F5BAB4BuL),(-1, -12, 0xA113429C18626427uL, 0xD1EBA2674300A633uL)),
                ((+1, -9, 0x84CF2AC15F67FEBDuL, 0x222B12CD76FE3EF5uL),  (-1, -12, 0xA1E7A4389A844C04uL, 0x8D9F0CC94DD8EDFAuL)),
                ((-1, -11, 0xB3F7F2A84EFAD693uL, 0x44D656ECD0206AEFuL),(-1, -14, 0x96BA4784F6D14FCBuL, 0x0772F367B8630CD2uL)),
                ((+1, -15, 0xE8B49BB3922A3A89uL, 0x946F40F7A1A32487uL), (-1, -17, 0x9EA5CF3881DFDCC1uL, 0xE0721C49A71C8429uL)),
                ((+1, -15, 0x8A047D7E293F2B0DuL, 0xC1206E54BCE8BDC1uL), (+1, -22, 0xCBFA3CE752A9F75FuL, 0xAD8C6B892621FA47uL)),
                ((-1, -17, 0xDD634A0F7F44AA9EuL, 0x7749FF9A1E58CA16uL), (+1, -23, 0xD4B7C7C70212FDBDuL, 0xBAFF65CFECA307D5uL)),
                ((+1, -19, 0xAA7D7F3DB30348F3uL, 0x026F209801180AE0uL), (+1, -25, 0xDD347E2B2D34B698uL, 0xCDF308EDDEF6CCD9uL)),
                ((-1, -22, 0x9145453E221EA32AuL, 0xC87786A8329272D6uL), (+1, -35, 0xC02027D9B0DB9C23uL, 0x27BFC77FA6A688DBuL)),
                ((+1, -27, 0xFBA24BD5B90EB276uL, 0xF489DAE269CCFC91uL), (+1, -32, 0xE5D73B541D1836F9uL, 0x2EA66E447726A3FAuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX1Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, 0, 0xBEAFB5AB33A20246uL, 0x06703ABFEAA942A6uL), (+1, 0, 0x890FEE89A0A72FABuL, 0xBC11F2BF6B031084uL)),
                ((+1, -2, 0xB0D1AFF1E5CB32A8uL, 0x45014D1B8B9EF988uL), (+1, -1, 0x98FC93FCEF2CAF09uL, 0x6C4AF8EA4A3D927CuL)),
                ((-1, -4, 0xF90BC282C3F0DD31uL, 0x26973D24728B75A5uL), (+1, -3, 0x97E1753150D6C288uL, 0xF175FE5C141B6870uL)),
                ((+1, -5, 0xE930F1C6221D11FFuL, 0x1C5939AA1674B508uL), (-1, -8, 0xA69087CE6A28DFEAuL, 0xAF389C7BB47087CAuL)),
                ((+1, -6, 0xC0BFA24A4454672CuL, 0x44D12D4ADF359437uL), (-1, -6, 0x9EA2CB4885D99C63uL, 0xD0EF3DF5F62A5F4CuL)),
                ((-1, -7, 0x9E04C5CAFDD93B96uL, 0x963726A358E21D90uL), (-1, -8, 0xBEBA5530EB65BEDEuL, 0x02624C912D395FDAuL)),
                ((+1, -10, 0xEBDFD056EF41782BuL, 0x986FED934304108BuL), (-1, -12, 0xF225DE22AEFE21E3uL, 0xC2A5BEB999D3299BuL)),
                ((+1, -11, 0x86373BA3D72826C6uL, 0x830F9A41DD81CB51uL), (+1, -12, 0xA50DB92E1FDFFEA1uL, 0xCEC2AB1C5CBEAB8CuL)),
                ((-1, -12, 0x8773D0F9C4FD9132uL, 0x290FB01D8876DA06uL), (+1, -14, 0xBB231728DEA44D2DuL, 0xCF8EF2C94AF93C19uL)),
                ((+1, -15, 0xE0E7BA78953BB536uL, 0x4B4D2059958A103FuL), (+1, -17, 0x9186C646EF24B063uL, 0x361605EAE57D7BBCuL)),
                ((-1, -19, 0x92BBA0B0C52B7359uL, 0x5CF511442ABA78FEuL), (-1, -19, 0xF1EE6E1D3C5E447CuL, 0x69BEE37AA25DD546uL)),
                ((-1, -20, 0x9C2D055D2964DC89uL, 0x6F5C5A0BE012C068uL), (-1, -21, 0x9E06D27C7EC4CD92uL, 0x82039401F48BFC0BuL)),
                ((+1, -22, 0x9479BCE84631E903uL, 0x44EEFFA3AA8E969DuL), (-1, -24, 0x8381A971C4995C22uL, 0x1F5C89F943AC6DC7uL)),
                ((-1, -26, 0xD59031B8A20F01BBuL, 0x47EA5C51F4E49B41uL), (+1, -26, 0xED9E6ACC70EF7BABuL, 0x5E5392FF62914018uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX2Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xAF4BFB4024361DE9uL, 0xB75CA60949C29250uL), (+1, -1, 0x802AD74069D63165uL, 0x18B0028473EC322DuL)),
                ((-1, -7, 0xD249269BA0454E95uL, 0xF60BAAB08AAA156CuL), (+1, -6, 0xA4058F1783C15BB9uL, 0x26C9D6293BD558B3uL)),
                ((+1, -4, 0xA8E7D183FCD13177uL, 0x17ADC797297F70A7uL), (-1, -4, 0xA22C53478963B101uL, 0x41E3481F5870A03DuL)),
                ((+1, -7, 0xA9D17267AAE86CA2uL, 0xE3322D0C27A308ABuL), (-1, -6, 0xB1E7B3C2F211FF7BuL, 0x999BE7645E22F6F7uL)),
                ((-1, -10, 0x96D7F8370AF8CE97uL, 0x4E11D465827C7F92uL), (+1, -10, 0xF54050AE7AAD8639uL, 0xFF1BAB907984F35EuL)),
                ((+1, -9, 0xC46677EFCFDD4071uL, 0x99603DEBEFD21C0AuL), (+1, -9, 0x99426B05A1981D1CuL, 0x09525621FA682C97uL)),
                ((-1, -13, 0xC17501F027B75CACuL, 0xF274A019885B005BuL), (+1, -12, 0x80962286FE1ED2DAuL, 0x7FA04578D7911160uL)),
                ((+1, -15, 0xBA6BEBE25FBE6DEFuL, 0xF3A91BAF4E39B495uL), (-1, -14, 0xAAACC556B964C9D0uL, 0x3364DAE00DCF2B15uL)),
                ((+1, -15, 0xA9B173A9E3B79208uL, 0xE646CED26A2597A8uL), (-1, -16, 0xE6926F817C2BE7C7uL, 0xF42E0B390F13B52FuL)),
                ((-1, -17, 0x80F323C8086ABCFBuL, 0x00E49FFEAF902073uL), (+1, -20, 0x88F54A10E005A35FuL, 0x6EFE13735C7B6D99uL)),
                ((+1, -19, 0x92AFA8527C624E84uL, 0x17BA54755CC58D69uL), (+1, -21, 0xDF212D46CE3C7270uL, 0x884D6DE29DA70337uL)),
                ((-1, -24, 0xF6BE893A6B94FC42uL, 0xB1877DD91D076977uL), (+1, -24, 0xC2851392AB0DBFE9uL, 0xD2D726FF355CE2E4uL)),
                ((+1, -27, 0xCA7157F7292C3CD3uL, 0xA4BCB03BCBE5DCDBuL), (-1, -26, 0xD150577C81DC56B8uL, 0x7E5A3D943BEDF9F7uL)),
                ((+1, -29, 0xD046640E4B6EFD51uL, 0x906C389FA0D58675uL), Hexcode.Zero),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PadeX3Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -4, 0xDA1C671989E37BD9uL, 0x5FFE0A460E9B2B2DuL), (-1, -3, 0xA1CCC663E55E99BFuL, 0x15013ED982B030A8uL)),
                ((+1, -3, 0x806F1D5412CE8B83uL, 0x41CF2B769CC81646uL), (-1, -3, 0xE577E7E4D7859FFAuL, 0x30B551F92A08B1F7uL)),
                ((+1, -5, 0xFB6FD2DE56872C2FuL, 0xD46F015658295A89uL), (+1, -8, 0x9FECE1D5E49BE625uL, 0xCDE3D3F3EB2C5B6AuL)),
                ((+1, -8, 0xA89516327BC471B7uL, 0x90128AA25CCC97ACuL), (+1, -5, 0x8151DF5C2B63DFB7uL, 0xEA8E1B3B331EC780uL)),
                ((+1, -8, 0xDBDABE2A8D36F23EuL, 0xB6625873B0D46E13uL), (+1, -10, 0xD5141A0B25D587D8uL, 0xBECE8CB6F552364FuL)),
                ((+1, -11, 0xE4CC2B06C205A960uL, 0x59251A1614ACD7D7uL), (-1, -9, 0xAEC3C256B5C8AD33uL, 0x28890621703A2160uL)),
                ((+1, -13, 0xD839FD36A0912B2FuL, 0x00953EB408208620uL), (-1, -12, 0xA213ADEDE40E5CACuL, 0x549C6AA174752EEDuL)),
                ((+1, -14, 0xDEA06191BFE5A466uL, 0xE160C21E4AB6CB27uL), (+1, -13, 0xA19F344E19B79924uL, 0xA9063BD8F7916FB5uL)),
                ((+1, -21, 0xB67CB6908570120FuL, 0xE9FAD50C34023775uL), (+1, -16, 0xD47F6F4E4439B7AAuL, 0xD8F17881E340BD05uL)),
                ((+1, -18, 0x8D8BEC5B75DBBE26uL, 0x172C2D82D0B90330uL), (-1, -18, 0xD18E9C029195F056uL, 0xBFBFA5305717FE11uL)),
                ((+1, -23, 0xF8003BAF775022FCuL, 0x483F65C640CE5354uL), (-1, -20, 0x9D083633A7B33CF3uL, 0x9801FBAFD6DB2FD7uL)),
                ((+1, -25, 0xA6AAB0C84824482DuL, 0xD1F5BEB40662D4DBuL), (+1, -23, 0xB0C5100FA2EA3971uL, 0x6473DC690CDE0D6CuL)),
                ((+1, -27, 0xC3E911D17635F732uL, 0x03C44FA3BAF64174uL), (+1, -25, 0x9DBC6B905B140A1CuL, 0x61928F5EE6A9148FuL)),
                (Hexcode.Zero, (-1, -28, 0xAF0412D8543E2224uL, 0x6E0ED894989B86C5uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> PolyXNegativeTable
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0x8000000000000000uL, 0x0000000000000000uL), (+1, -1, 0xFF03F626A3A66CD9uL, 0x667ACF82456BEB7AuL)),
                ((+1, 0, 0x8EB57A6600A493AFuL, 0x4EBDB54C7EDC176EuL), (-1, -2, 0xFB7580B39AE30146uL, 0xF7A41BA27C4A72EAuL)),
                ((-1, -1, 0xE9E8DAC4857EAB8FuL, 0x0337CEB793CC577AuL), (-1, -3, 0xAB94D0DC534DA764uL, 0x44000A3D3BCE7293uL)),
                ((+1, -2, 0xA29B719781125D8BuL, 0x207C5C510D57EDCDuL), (+1, -3, 0xE4B12C1F52F491FBuL, 0x924074BAD78C6E7BuL)),
                ((+1, -7, 0x82160015D9F2E601uL, 0x32F0CA0D2CC381D8uL), (-1, -5, 0xFF2F382D88EF72DFuL, 0xCE1DFE148C512E4BuL)),
                ((-1, -5, 0x89FF749170E03629uL, 0x77687C7FDBC6E246uL), (-1, -10, 0xDC3F9F66906B6151uL, 0x772FE680F6025711uL)),
                ((+1, -8, 0xDD1961AEDCE7F432uL, 0xF6E3D9C110032C64uL), (+1, -9, 0xF09C7D3AB2F8DA7EuL, 0x523F6A56258F7948uL)),
                ((+1, -12, 0xFA6C26C59A77824CuL, 0xF5CACD7A52DD3885uL), (-1, -12, 0xE4C6142815E17E7BuL, 0xC5E8C7E1CADE85BAuL)),
                ((-1, -12, 0x973A8A8E57F6EB90uL, 0x8C3F3605C41A17FDuL), (-1, -14, 0x887AB08971741263uL, 0x2A561142BFAAA1ACuL)),
                ((+1, -17, 0xE62A391DF589C3DCuL, 0x469A7A931AFB3358uL), (+1, -16, 0x83527EACEB584396uL, 0x0CC2BEBA90FA6CE1uL)),
                ((+1, -18, 0xADFB73688047BA88uL, 0x9969E7D7D094E0F4uL), (+1, -22, 0x8DB00254AB2D5ED8uL, 0xDA9F2FA4B4EAAC02uL)),
                ((-1, -21, 0x8EE37E249DDABFD1uL, 0x4378240BB0344DDDuL), (-1, -22, 0x8D74AFAE96AA380AuL, 0xDAF5B41CE679DB39uL)),
                ((-1, -25, 0xE06F64D55B23701DuL, 0x76DF7577512457D0uL), (+1, -28, 0xEC0983B4F057A3A6uL, 0x59CB1574EC59C1B8uL)),
                ((+1, -27, 0x9136E52C635542F5uL, 0xE828C9EF7AE830D6uL), (+1, -29, 0xC18C2F53EE273849uL, 0xCF638AE841B61780uL)),
                ((+1, -32, 0xB20BBC6529129202uL, 0xDD52284719348F30uL), (-1, -33, 0x972C3AF376CBB8CFuL, 0x867E983A2EBA0386uL)),
                ((-1, -34, 0xBC10E6323D718BBAuL, 0xB38D061F1AA801BFuL), (-1, -36, 0xC03B6F3BA80B7B9AuL, 0x1C3C01960EC41F01uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX0p25Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, 0, 0x9CCCFE5841701C34uL, 0x31F57124DB8C8FF6uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, 4, 0xCA876FF667756A67uL, 0x097FE062E5200AC2uL), (+1, 4, 0xC1AB2EDE4EB0BD84uL, 0xD9AF3127483A8A1CuL)),
                ((-1, 7, 0xDCC11692F755A44BuL, 0x4452DD9652D42416uL), (+1, 8, 0x8148800C6542BF4FuL, 0x4E822EE8C4B221C8uL)),
                ((-1, 10, 0x82230A91596B81C5uL, 0x4FE705527EB9E312uL), (+1, 10, 0xC893731F096B8CD8uL, 0x50B831900414F758uL)),
                ((-1, 11, 0xAD323ACFC6AED02AuL, 0xDE19E6F7622D1912uL), (+1, 12, 0xC86E63B8DDE6E296uL, 0xC3A260E8DA3BDD9DuL)),
                ((-1, 11, 0xE09E570AC532F43DuL, 0x33D37EDDCAC6D13EuL), (+1, 14, 0x872E0C3AC9F2E53BuL, 0x27F0626370CB3CDEuL)),
                ((+1, 8, 0xD64509BB43D0FECDuL, 0xC40D0D5FA323E6B2uL), (+1, 14, 0xFADC9FF90C9347C0uL, 0x4223791D3B0028D6uL)),
                ((+1, 13, 0x83BE02F9A92797B9uL, 0x46BC428B3F0DB207uL), (+1, 15, 0xA0401AC0571CB7A7uL, 0xA7CAEFF8DAE1E4F3uL)),
                ((+1, 13, 0xACACE3283616AB28uL, 0x4A1D04CF33471595uL), (+1, 15, 0x8AE7037BF82F80F2uL, 0xC9C818F9FF82F071uL)),
                ((+1, 11, 0xFB9EED4699DC88C1uL, 0x07CAC01B0A1F5CAEuL), (+1, 14, 0x9E4FE0A0DDAD0E9AuL, 0xA522C2EFECEA291CuL)),
                ((-1, 11, 0xBA3E3789AD183343uL, 0xC93F25ED9BF5A023uL), (+1, 12, 0xE0B80F073FBEF3FDuL, 0x551FDF8E0F940571uL)),
                ((-1, 11, 0xB5B6101CDDCB7C2EuL, 0xF01AD4F36D2D4740uL), (+1, 10, 0xB50DCC449646CC27uL, 0x3B8BB6618D76F475uL)),
                ((-1, 8, 0xDEC06B3682BEA08FuL, 0x7EB52EBA0CB47D0CuL), (+1, 7, 0x8AEF1B96FADDB023uL, 0xD9F6C05E6C4E0F84uL)),
                ((+1, 7, 0xFBBE4D2C1A70A342uL, 0x3AD8D21EC04D1BF4uL), (+1, 1, 0xFF7AD5D7D10A062EuL, 0xD776D73936F20D7CuL)),
                ((+1, 6, 0xA923E57CD3EF1A4DuL, 0x7E8A298083A9989BuL), (-1, -6, 0xF075DE40E424E698uL, 0x5898DF69F169A567uL)),
                ((+1, 2, 0xC42A90DF5245834DuL, 0xC24034CC1F784457uL), (+1, -11, 0x9791CA091D6E548DuL, 0xB8C6CAF46C427977uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX0p75Table
            = new(new (Hexcode c, Hexcode d)[]{
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xD67F1C864BEB4A69uL, 0x297920028831CD86uL), (+1, 2, 0xAFDC684BC79C33B8uL, 0xA924AC2696563083uL)),
                ((+1, 0, 0xC1C2084607592E89uL, 0xC4927D06CFD9B189uL), (+1, 3, 0xD0B9C652BADE89A8uL, 0xC034173814639D74uL)),
                ((+1, 0, 0xD6FD053D6F197437uL, 0xAA000335780FAA0AuL), (+1, 4, 0x8C0428A1E259BC1CuL, 0x21B7638653DDDCE8uL)),
                ((-1, -3, 0xF866710EE98510FAuL, 0xE22570EE2F358E91uL), (+1, 3, 0xE943A3BA9A5FE71AuL, 0x177D546A31D6E83CuL)),
                ((-1, 0, 0xFD0380FD5DEDBD31uL, 0x0C5B3323FE014690uL), (+1, 2, 0xF97C402A6C6E4DD6uL, 0x3C18B991AE6A7D22uL)),
                ((-1, 0, 0xC4D8B67925A41FF4uL, 0x4BA0251167F5FD33uL), (+1, 1, 0xAB0D2521613CED13uL, 0x926476CB084986D4uL)),
                ((-1, -2, 0x8CC9232E5C05933EuL, 0x4D5D99E7812A11FBuL), (+1, -1, 0x918408CEA099A0E1uL, 0x25582CA9DED28818uL)),
                ((+1, -3, 0xEC5D1D1D43426E89uL, 0x78001D5469C4C1FCuL), (+1, -4, 0x8E8109B84D466CB3uL, 0xECA322EEC07E6C17uL)),
                ((+1, -3, 0x98EE517A17B12974uL, 0x6F1E860AE1CABFEBuL), (+1, -8, 0x89114D61AF2AEF5EuL, 0xD446E733E6D9B203uL)),
                ((+1, -5, 0x926857D77515FD8CuL, 0x356664DEB964C75EuL), (+1, -14, 0xA71327FD7EC6A231uL, 0x1B3D0DBF9E549A06uL)),
                ((+1, -9, 0xF69DA93F6D5BE140uL, 0x04028B3E5A90C45FuL), (-1, -22, 0xC36EF70A4B6B3BE4uL, 0x49A3B717034577BFuL)),
                ((+1, -13, 0x8F4B14F310591A0BuL, 0xEA48BE0D8D317922uL), (+1, -28, 0xADA99687B23C025AuL, 0x003CFD2EF8887335uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX1p25Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((+1, -4, 0x810EDB5CA07BCBD5uL, 0x9943C37A553864FAuL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0xB26F5C2C849DCE5DuL, 0x5B340B6A3ABE69E2uL), (+1, 1, 0xF01EC7EB854D34E8uL, 0x93130FBD8DB2D5B2uL)),
                ((+1, -2, 0xA958C8460A2357D6uL, 0xA39C71257F891595uL), (+1, 2, 0xBE1521E952DE10F7uL, 0xE1E59C97D820D544uL)),
                ((-1, -2, 0xD006BD64827A9725uL, 0xBEC2C364B2D486E1uL), (+1, 2, 0xA52CF3360154EC94uL, 0x73C176FF72163EBAuL)),
                ((-1, -1, 0xDB3115996286622EuL, 0x9F5FE041727BA6D1uL), (+1, 1, 0xAB9CD5DC39FA0DAFuL, 0x0B2D544851D2C12BuL)),
                ((-1, -2, 0xE027D7A85BC7C6D7uL, 0x63165581F9E108CFuL), (+1, -1, 0xD9A65A9B95795A8BuL, 0x13109D60EFE4D941uL)),
                ((+1, -5, 0xEB8B578A36820D7BuL, 0x7675B1E8524CFE8AuL), (+1, -3, 0xA4D65C375B2C1E9CuL, 0x050B20186E144738uL)),
                ((+1, -3, 0x912D28D8B0B07964uL, 0x3A828CE3819E876CuL), (+1, -6, 0x8B1AAE6DE940FD96uL, 0xFD87F74B432E11C6uL)),
                ((+1, -5, 0xEC1EA129DF42B152uL, 0x5FA1F5566F34FD15uL), (+1, -11, 0xDFF3B38551A79A41uL, 0x327A3242080ED204uL)),
                ((+1, -7, 0xABF21996C49B74ECuL, 0xAE546EAB95420406uL), (+1, -17, 0xDF9510B057AB1C19uL, 0x0C0B936F2F8D623FuL)),
                ((+1, -11, 0xE1CC8DBFA501EBABuL, 0xD56FDDD3B04C5923uL), (-1, -25, 0xBF16E4DBD5E82EEBuL, 0x6F0E29CAA126C3F3uL)),
                ((+1, -16, 0xCAF0C64D846DCE5CuL, 0xC8286C3D8E10E886uL), (+1, -32, 0xF0109945A4BCF669uL, 0xFB5EBF2D0BD9D756uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX1p75Table
            = new(new (Hexcode c, Hexcode d)[]{
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -3, 0xA21366815EEC89C0uL, 0xF406BDFEF4EAB4A4uL), (+1, 1, 0x8B97FF6D2344120CuL, 0x082C5533A9F1EC0BuL)),
                ((-1, -2, 0x9F6B895E8E48F28BuL, 0xCFCC45BCF6D9E092uL), (+1, 0, 0xFCD9B6A59EEFA4A2uL, 0x8EA1BD690AFBCCC3uL)),
                ((-1, -4, 0xBABD95DEA5362DFFuL, 0x4BF218BBD91598E2uL), (+1, -1, 0xF5DC72189D3B5ABBuL, 0xC234A3BEC9D090C1uL)),
                ((+1, -3, 0xD3E769580EA7DD62uL, 0xEB103011AF0D2F7BuL), (+1, -2, 0x8A71F7F719B7A17CuL, 0xC5AAC98473598E06uL)),
                ((+1, -3, 0xE688222D8FD030ADuL, 0xEDAE617C30CF88D5uL), (+1, -5, 0xB55783EFA19849C7uL, 0xC15E5B5EA7295369uL)),
                ((+1, -4, 0xCF890FF87CF8E849uL, 0xADF2B8016666E3F2uL), (+1, -8, 0x82E472665FEE469AuL, 0xB07FAEFE1E04A9C8uL)),
                ((+1, -6, 0xC5BB278961B472ABuL, 0x5538A6DC8377BDD5uL), (+1, -13, 0xB45634A3A3816429uL, 0xBFBE460CB44D8978uL)),
                ((+1, -9, 0xCA7F0A2A44F226CAuL, 0x7979E855493B8A29uL), (+1, -19, 0x9C0A5662D2BF314CuL, 0x1C0AF8A1EC830E75uL)),
                ((+1, -13, 0xCAA947D602F1727DuL, 0x75E8618FF7FE38DEuL), (-1, -28, 0xE3182432860CE6B7uL, 0xC3ABF00F68B0DE6BuL)),
                ((+1, -18, 0x92A0132CF7ED2D96uL, 0x55748E207A569F6DuL), (+1, -35, 0xFF722DEC919CC15BuL, 0x925739771CCC46C1uL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX2p25Table
            = new(new (Hexcode c, Hexcode d)[]{
                ((-1, -5, 0x9067C67F89FC7F9CuL, 0x98B9407BB7EB4323uL), (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((-1, -3, 0xB9E85579DA0A9518uL, 0xC4A17CFEB48C9069uL), (+1, 0, 0xF03F99EC63D15309uL, 0xF19E8DC3B7B037BEuL)),
                ((-1, -3, 0x8886228FE3835132uL, 0xE1D173AD0253C2B8uL), (+1, 0, 0xBA81A587397D2967uL, 0x8D39A6CD5B8C8FC1uL)),
                ((+1, -3, 0xBE2CC59257982C1DuL, 0x8B26DF83479C8174uL), (+1, -1, 0x9AB89E7334956D92uL, 0x1E42DB3CE3DE371AuL)),
                ((+1, -2, 0xA90B27800C50627BuL, 0x898250D79C3CEBACuL), (+1, -3, 0x93D1E8A5C2172761uL, 0xCE9DEEBBD3013748uL)),
                ((+1, -3, 0xD5719782E28B5BDDuL, 0xA771A99A3F5EF5BBuL), (+1, -6, 0xA31FB4C14D109A73uL, 0xF2B04B5CA218AC1BuL)),
                ((+1, -4, 0x8D5ADFD8D3931EBCuL, 0x6240D98A0F909A92uL), (+1, -10, 0xC4BF0E9AEE6D0A60uL, 0xA58E3449D920706AuL)),
                ((+1, -7, 0xD2486FED27589EDEuL, 0x350D12283BC63D20uL), (+1, -15, 0xE053A72A7008FCDAuL, 0xA23787F3173A8772uL)),
                ((+1, -10, 0xAB7AE0689E946279uL, 0x69C620E5CF0EC6C8uL), (+1, -21, 0x9F96A68EBDE69668uL, 0x894CEBBA4EC3572EuL)),
                ((+1, -14, 0x8928C8597B66CD49uL, 0x9D772A328DD595ADuL), (-1, -30, 0xAF8BA5780A31A950uL, 0x8840529D6B1FD135uL)),
                ((+1, -20, 0x9DA6284FBD9BF79EuL, 0x9E91837C5278753AuL), (+1, -37, 0x944B571E68D12F68uL, 0x83F5484E53038F9BuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode c, Hexcode d)> LogPadeX2p75Table
            = new(new (Hexcode c, Hexcode d)[]{
                (Hexcode.Zero, (+1, 0, 0x8000000000000000uL, 0x0000000000000000uL)),
                ((+1, -2, 0x876D7CF855282BD5uL, 0xE28021FE82ED124EuL), (+1, 0, 0xA1FA070D352799B4uL, 0xD58DB21C76402EC6uL)),
                ((+1, -1, 0xB0E85272A4CEFBF8uL, 0xCA7C7E483FF90613uL), (+1, -1, 0xA572C58FB7C32627uL, 0xF3C4E4D269513419uL)),
                ((+1, -1, 0xB3BECED821FFF363uL, 0xEF4CF0EF8F0EEC48uL), (+1, -3, 0xAE7744A5EFCC4CD1uL, 0x20F909ABFDAA3016uL)),
                ((+1, -2, 0xBC33B99724737D8EuL, 0x46503F530225A1C2uL), (+1, -6, 0xC93FA6CFE580A176uL, 0x4A6DEBE8579394C6uL)),
                ((+1, -4, 0xDF1EC60F9E6A32DCuL, 0x72A4E72852A6115AuL), (+1, -10, 0xF693D320FECF08CCuL, 0x86798FBC353C9622uL)),
                ((+1, -6, 0x98CE50DABD4BB997uL, 0xB827CE88CB25F428uL), (+1, -14, 0x8CE94733873365F1uL, 0x938682E152EFD0B6uL)),
                ((+1, -10, 0xE95EF76FC4ECCA91uL, 0x9E21EF9F887167D2uL), (+1, -21, 0xC8682852068DDD3BuL, 0xE33B417A0871C6BEuL)),
                ((+1, -14, 0xB191077D1AB82FFEuL, 0x0CC49D0323C2F9A8uL), (-1, -30, 0xDEF2198D7E049EF7uL, 0xA082B295E0C120A6uL)),
                ((+1, -20, 0xC5DA84C140392B3FuL, 0x4CA291A9A6892BCAuL), (+1, -37, 0xC24E4DBC6368EFCBuL, 0x56DD9A2445D80D5FuL)),
        });

        static readonly ReadOnlyCollection<(Hexcode s, Hexcode r)> SterlingTable
            = new(new (Hexcode s, Hexcode r)[]{
                ((-1, -8, 0x8888888888888888uL, 0x8888888888888888uL), (+1, -3, 0xF3CF3CF3CF3CF3CFuL, 0x3CF3CF3CF3CF3CF3uL)),
                ((-1, -11, 0xB60B60B60B60B60BuL, 0x60B60B60B60B60B6uL), (+1, 0, 0xAE8BA2E8BA2E8BA2uL, 0xE8BA2E8BA2E8BA2EuL)),
                ((-1, -9, 0x8A3BD6F0A23D5708uL, 0xA3BD6F0A23D5708AuL), (+1, 1, 0xD2B588B4CB058EA2uL, 0x44E8A8F011C86DA9uL)),
                ((-1, -5, 0x81AF6641AF6641AFuL, 0x6641AF6641AF6641uL), (+1, 2, 0xC0E9CF771BBFC487uL, 0xE65FE79DC7A709BAuL)),
                ((-1, 0, 0xBC22107B0495E92CuL, 0xECCBB25AF4093D79uL), (+1, 3, 0x993290AC966E2E82uL, 0xEE61D760E62CB3E0uL)),
                ((-1, 7, 0xA3FA4DF653C2536BuL, 0x0824DF653C2536B0uL), (+1, 3, 0xDEE8168C29CA49B3uL, 0x78C4D734A052C7D8uL)),
                ((-1, 15, 0x927991F539CF3304uL, 0xD806E188941F539CuL), (+1, 4, 0x98CAD716EB545A3AuL, 0x13FED0C14F0D60E7uL)),
                ((-1, 23, 0xF0447241E4286CB0uL, 0xF5397DC2064A8ED3uL), (+1, 4, 0xC89DAE7A6E85BB57uL, 0x3E40D39D2B394231uL)),
                ((-1, 33, 0xA6ED8202F953184AuL, 0x5F98F54869BD5318uL), (+1, 4, 0xFEEC91B071D9EC6FuL, 0xDD39B5FFB3FCD695uL)),
                ((-1, 43, 0xB8BCFFF811677446uL, 0x32A2B401BF760104uL), (+1, 5, 0x9DDBC05F3F317631uL, 0x9C611BFA5FECE453uL)),
                ((-1, 54, 0x9B18D46661E92599uL, 0x3BC04194CB62F8F7uL), (+1, 5, 0xBF7F3DD284B91E2CuL, 0xECD6E9A8E095416DuL)),
                ((-1, 65, 0xBDEB068B3A62D600uL, 0xF08F4CD7FE9AC1BBuL), (+1, 5, 0xE460C1320E348DF3uL, 0x3CD7F8348EB1DCF8uL)),
            });
    }
}
