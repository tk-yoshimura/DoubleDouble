using DoubleDouble;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using PrecisionTestTools;
using System;

namespace DoubleDoubleTest.DDouble {
    [TestClass]
    public class SincFunctionTests {
        [TestMethod]
        public void SincTest() {
            ddouble[] expecteds = {
                "1.000000000000000000000000000000000000000",
                "0.9896158370180917183873948193975567835736",
                "0.9588510772084060005465758704311427761636",
                "0.9088516800311122223109892703731919137845",
                "0.8414709848078965066525023216302989996226",
                "0.7591876954844689714787926776288394003024",
                "0.6649966577360362872944822474276582151378",
                "0.5622776839279639421323788211245631963075",
                "0.4546487134128408476980099329558724213511",
                "0.3458103097279649961826518558167810314686",
                "0.2393888576415825976207418808744649086814",
                "0.1387858152917569813005677717737382913026",
                "0.04704000268662240736691493426937009328231",
                "-0.03329081062464873139564025924948461569813",
                "-0.1002237793398913851772482285838958814529",
                "-0.1524163516646250059824414862267449327783",
                "-0.1892006238269820628431597736279572735340",
                "-0.2105857313479020057566477243384179307955",
                "-0.2172289150366882345309188921108066173032",
                "-0.2103774292579743041545833169678061606837",
                "-0.1917848549326276937786308812311987946705",
                "-0.1636065701764937200629953694138491715913",
                "-0.1282800591946167102239853046403763779722",
                "-0.08839636130421883999683120161103187746279",
                "-0.04656924969982097880192590776864912660467",
                "-0.005308674647609090700391307326286829974107",
                "0.03309538278274084989183780754995872916696",
                "0.06667319611564705368489317680145044712503",
                "0.09385522838839844148528558451337645399098",
                "0.1135283971050352356443684390913181400986",
                "0.1250666635699651810597951730865396315242",
                "0.1283353263369259510476142969857794974880",
                "0.1236697808279227222260154497806610840146",
                "0.1118308133623442741447748561077476888673",
                "0.09393966030864591607846037180460148069290",
                "0.07139702328619341853023728009053462307960",
                "0.04579094280463961886180806292804835326043",
                "0.01879886328437119442422552966870390327563",
                "-0.007910644259137821819313947845684940803622",
                "-0.03277119934587421947717374501820943976425",
                "-0.05440211108893698134047476618513772816836",
                "-0.07167789564924833444627698321585367161443",
                "-0.08378054856873048552557225569771390806617",
                "-0.09023235980657474521027616007439807550014",
                "-0.09090820059551849609559680900232019153118",
                "-0.08602737755655657152010684167893301185288",
                "-0.07612627605986335017005961100924583797374",
                "-0.06201404049592936368474399955785501864277",
                "-0.04471440983336958097211451902020014935964",
                "-0.02539749836580631204763232205139942327119",
                "-0.005305751788096055114352785589076754181881",
                "0.01432150075538305946620887460643876581185",
                "0.03232054129435699398991961811360636833192",
                "0.04766875379005574671682747433474934013192",
                "0.05953958715197192051966360935122178371685",
                "0.06734417765880925122551192587388349743576",
                "0.07075766826391930770538248600104182883987",
                "0.06972920007949210885178392908432962259587",
                "0.06447552107066779554968167019585603382889",
                "0.05545910260709790976508017691870026915149",
                "0.04335252267714112438864935139925802168097",
                "0.02899161761157635411591724835646746919989",
                "0.01332048270566429603278029133148642242944",
                "-0.002668212871037510733001494227477891815630",
                "-0.01799395729156658092402851551366359560129",
                "-0.03174657518880672667030865794839858406398",
                "-0.04313850559812867065711156572805431439779",
                "-0.05154826703330779607894679968507449407883",
                "-0.05655279363997393278009629087465624108777",
                "-0.05794704181792563430831858256684569609068",
                "-0.05575005745532328840363316407058480823079",
                "-0.05019751210844244546336000490055456721964",
                "-0.04172151370953756131945311580261747396542",
                "-0.03091922761434822951260193621873509663943",
                "-0.01851246586322230038233069892534502527831",
                "-0.005300882501271902772188593583958726843435",
                "0.007888274192786964723907332696750207865706",
                "0.02025077024656512016915963161398587228617",
                "0.03105332665228723170817775166731013743192",
                "0.03967609498624584123381883984606632803520",
                "0.04564726253638138271880499919228411506490",
                "0.04866790674395652549563513704445953063641",
                "0.04862584362335606085686684211784338523907",
                "0.04559790016630702662870186403079806731231",
                "0.03984074469219314437459432239262017980667",
                "0.03177108956672004800051175582420160475586",
                "0.02193669781833470445017198022935043156650",
                "0.01098014363354403366446210161581447673662",
                "-0.0004023322404729034509859207643532878392404",
                "-0.01150428813794755185331865015173524232791",
                "-0.02165220055380042340347681195416682919532",
                "-0.03024564669267239245455405131389598661122",
                "-0.03679219148587698414092722921328677946684",
                "-0.04093498752526251531811143893543799909785",
                "-0.04247157565869771362522809313561911514497",
                "-0.04136293430014413684462374425769957138896",
                "-0.03773243175027599354732472327199138842587",
                "-0.03185495084258847359927069468115773173261",
                "-0.02413704203531119867081451445632009422530",
                "-0.01508948504178241261330276238674286581840",
                "-0.005294070003910921156080203755344252059429",
                "0.004633277044529269153923612155645499653212",
                "0.01408071976557522677644169768688000888782",
                "0.02247774575874757918272301075613093759356",
                "0.02932917117229241298137781896940626819600",
                "0.03424391453761779832273063429045879248709",
                "0.03695689219260064498136318744293472489574",
                "0.03734283419771305137174109453003308631083",
                "0.03542133068164825975675335401219233149906",
                "0.03135296216233109615791505222672175438683",
                "0.02542691024200355530609864690929730626734",
                "0.01804095444801495599429109543439132199018",
                "0.009675206725281036428083681884956876194389",
                "0.0008612913584850362152667733273053702274787",
                "-0.007851075094273558729781157987290453347007",
                "-0.01592802501867170298290966000356879529679",
                "-0.02288392704182646559141977034693466038356",
                "-0.02831027379409382906816091943319993893411",
                "-0.03189936977433740895198074598255906085519",
                "-0.03346146329578000322688848387427206088920",
                "-0.03293438746976205966625829690981527168289",
                "-0.03038524608937445408178267741916425861321",
                "-0.02600417178548475870079469577192391436663",
                "-0.02009066583450068223373569237856109970656",
                "-0.01303347242977629051770228708594313541526",
                "-0.005285318795954527875475720481740614861896",
                "0.002665855736245931055862478081417967537478",
                "0.01032737004175830904448350540437321177043",
                "0.01723208378880282970817369271392852549142",
                "0.02296664568712167543291222628113687407917",
                "0.02719601303217940376648538250691823879411",
                "0.02968280127336592627864244913031977918544",
                "0.03030035939718991350691164777902510043488",
                "0.02903886622690891037822181768976142708502",
                "0.02600417910952765158295020087373240407948",
                "0.02140961281129288935752977448907587235718",
                "0.01556125547411834767154373923623837511444",
                "0.008837814335950815777201020439866752927619",
                "0.001666303713186219266292581441047394456256",
                "-0.005504877057523890171069512968818197980556",
                "-0.01223379055703288584019293976416973330441",
                "-0.01811201522618818206397416795327840359308",
                "-0.02278926102005370292207073792016560225737",
                "-0.02599407348912836580243375126838924739038",
                "-0.02754941259564210380098024913446710496100",
                "-0.02738222273505138675122939350700382175355",
                "-0.02552649007821111127733686877518835511717",
                "-0.02211968865780689108797041646579601443976",
                "-0.01739292252316214758609918970488636598043",
                "-0.01165545300224840799331496472065392264461",
                "-0.005274634656972326874358650465736397252306",
                "0.001347448911239912452177208221443995377134",
                "0.007799173123931192562955174996026771612515",
                "0.01368481564008360891010459733757400793320",
                "0.01864869072134140607086501916790932555430",
                "0.02239651108606393274100110906542808542081",
                "0.02471270221241250649386320440425338756660",
                "0.02547265831671710197079019540759501991485",
                "0.02464925204291083812947761320402330060837",
                "0.02231327078739181951477893824903525586692",
                "0.01862782901198371967469273506590860855599",
                "0.01383717465188102966159441214441533404164",
                "0.008250646341936309706158973393133594451188",
                "0.002222826312076533371491167529342245184748",
                "-0.003868845580602658222032122242187488581958",
                "-0.009647590801373842451977079950948242043614",
                "-0.01476048561386674167579885472469019790256",
                "-0.01889990807111712358451354401105258462579",
                "-0.02182194161703889966426164662070646432734",
                "-0.02336064054704641600002087964793254083713",
                "-0.02343732948516691764664827887092148664741",
                "-0.02206442359834095976881852491553080710907",
                "-0.01934359866578135553975763386725005210446",
                "-0.01545848905357158097754122169520880159933",
                "-0.01066242565480062962791025220543485853666",
                "-0.005262024641617235691057659529170127029086",
                "0.0004023164796684904047262284810594704245572",
                "0.005977780978901864920566931704431922308249",
                "0.01112101837196917070204580454197910772560",
                "0.01551920122193316612033515190719702038257",
                "0.01890896721186929833027510394706758042401",
                "0.02109210463017551998727248298835399513790",
                "0.02194705214091803135559798435453725540623",
                "0.02143555117940602615397705230156321459705",
                "0.01960409451410454750072376172223344715479",
                "0.01658013831619181416754245429057709562632",
                "0.01256336740673732560516429488348290463526",
                "0.007812604440514567171813638985291871032377",
                "0.002629215377557957533224028682689586135370",
                "-0.002661929954692328319120434583601049624039",
                "-0.007732744192298764268608116983826275866593",
                "-0.01227219351444091824270819536840885550180",
                "-0.01600530544424305831343678468428944780829",
                "-0.01870975603052138063335778156859401266275",
                "-0.02022903997119787618593227937125073200099",
                "-0.02048144775267068120345526859718214541891",
                "-0.01946433985223411874204946037934103255679",
                "-0.01725350268129070716435485143249546517503",
                "-0.01399767584310496314326340356977000113158",
                "-0.009908636600870580568073668195377519785892",
                "-0.005247497074078575718287872938252450917733",
                "-0.0003080962965808591767749903578873915337455",
                "0.004601460626841277899343201533575293489957",
                "0.009177960338885587239188772552633686768387",
                "0.01314174854594852420577147205785621192368",
                "0.01625376118120242039451153712498658260976",
                "0.01832988568398289860729588405444675436391",
                "0.01925179312118516498805605685716270549191",
                "0.01897360753924010185745324873916807906285",
                "0.01752404143616545633846226360166581773415",
                "0.01500390908541176960170086800643215513681",
                "0.01157921503512766904864366124715475817301",
                "0.007470285852487437386856342250255457982190",
                "0.002937652564407114319301739199731814600805",
                "-0.001734415173033807252987699057922808643737",
                "-0.006255685850216879433278857060035052214764",
                "-0.01034794534910400455218280220306284808643",
                "-0.01376206795663147114221110304103383799566",
                "-0.01629313464839749259224510879219814209409",
                "-0.01779268407746691329874577082640631696362",
                "-0.01817736678833854248361148514988894907696",
                "-0.01743350152094078171631196923511139862416",
                "-0.01561728962631998643760604709145306709127",
                "-0.01285071349316199473470123065804276642749",
                "-0.009313410751551997860489464669832152461036",
                "-0.005231061541537875140078205047903062651318",
                "-0.0008610363694705710114660819324929388216115",
                "0.003523785611947444750048545598695678102955",
                "0.007652013249961841387377803388232341899438",
                "0.01127049895311762444188263030137213492482",
                "0.01415982124362494769209502029642594620179",
                "0.01614754986201422389939819807055790328059",
                "0.01711849393249201927870841662802413480046",
                "0.01702132668292494164503637571513070845354",
                "0.01587120893616031791260650163937686118099",
                "0.01374828365207619370176401360794278026393",
                "0.01079216961252776069103785580299710818857",
                "0.007192828091566370348070879530835730087248",
                "0.003178396980687252257698623811501633377810",
                "-0.0009992310436010792029290800775425493827048",
                "-0.005080177018370278427094157757973764013821",
                "-0.008812706045732524931619948130684916432621",
                "-0.01196872052673470395300317642379225322234",
                "-0.01435766488189831974585420765501977609420",
                "-0.01583799622964578601669324572918882216019",
                "-0.01632553265008516873339967042877347486888",
                "-0.01579818900026193763677652927266062894734",
                "-0.01429683720513836302536988793309876377652",
                "-0.01192226930079391721412930538315220376961",
                "-0.008828482254249415720700743002737362709621",
                "-0.005212728886632987672616496778642456461528",
                "-0.001302975312056558147160621855189663924789",
                "0.002656439687346141611552990004582825857503",
                "0.006420043234252902919124592474727803673095",
                "0.009756416438613404342939986171903595692938",
                "0.01246239414016188311560836765333297952178",
                "0.01437540684682485442736775943401956041459"
            };

            for ((int i, ddouble x) = (0, 0); i < expecteds.Length; i++, x += 1d / 4) {
                ddouble expected = expecteds[i];

                ddouble y = ddouble.Sinc(x, normalized: false);
                ddouble y_neg = ddouble.Sinc(-x, normalized: false);
                ddouble y_dec = ddouble.Sinc(ddouble.BitDecrement(x), normalized: false);
                ddouble y_inc = ddouble.Sinc(ddouble.BitIncrement(x), normalized: false);

                ddouble y_normed = ddouble.Sinc(x * ddouble.RcpPI, normalized: true);

                Console.WriteLine(x);
                Console.WriteLine(y);

                PrecisionAssert.AlmostEqual(expected, y, 1e-30d, 1e-30d);
                PrecisionAssert.AlmostEqual(expected, y_neg, 1e-30d, 1e-30d);

                PrecisionAssert.AlmostEqual(expected, y_normed, 1e-30d, 1e-30d);

                PrecisionAssert.AlmostEqual(expected, y_dec, 1e-30d, 1e-30d);
                PrecisionAssert.AlmostEqual(expected, y_inc, 1e-30d, 1e-30d);
            }

            foreach (bool normalized in new[] { false, true }) {
                PrecisionAssert.AreEqual(1, ddouble.Sinc(0, normalized));

                PrecisionAssert.AlmostEqual(
                    ddouble.Sinc(-double.ScaleB(1, -64), normalized),
                    ddouble.Sinc(ddouble.BitDecrement(-double.ScaleB(1, -64)), normalized),
                    1e-31
                );

                PrecisionAssert.AlmostEqual(
                    ddouble.Sinc(-double.ScaleB(1, -64), normalized),
                    ddouble.Sinc(ddouble.BitIncrement(-double.ScaleB(1, -64)), normalized),
                    1e-31
                );

                PrecisionAssert.AlmostEqual(
                    ddouble.Sinc(+double.ScaleB(1, -64), normalized),
                    ddouble.Sinc(ddouble.BitDecrement(+double.ScaleB(1, -64)), normalized),
                    1e-31
                );

                PrecisionAssert.AlmostEqual(
                    ddouble.Sinc(+double.ScaleB(1, -64), normalized),
                    ddouble.Sinc(ddouble.BitIncrement(+double.ScaleB(1, -64)), normalized),
                    1e-31
                );

                for (double x = double.ScaleB(1, 256); x < double.PositiveInfinity; x *= 16) {
                    PrecisionAssert.IsFinite(ddouble.Sinc(+x, normalized), $"+2^{double.ILogB(x)}");
                    PrecisionAssert.IsFinite(ddouble.Sinc(-x, normalized), $"-2^{double.ILogB(x)}");
                }

                PrecisionAssert.AreEqual(1, ddouble.Sinc(-ddouble.Epsilon, normalized));
                PrecisionAssert.AreEqual(1, ddouble.Sinc(+ddouble.Epsilon, normalized));

                PrecisionAssert.IsNaN(ddouble.Sinc(ddouble.NaN, normalized), "nan");
                PrecisionAssert.IsFinite(ddouble.Sinc(ddouble.MaxValue, normalized), "+lval");
                PrecisionAssert.IsFinite(ddouble.Sinc(ddouble.MinValue, normalized), "-lval");
                PrecisionAssert.AreEqual(0, ddouble.Sinc(ddouble.PositiveInfinity, normalized), "+inf");
                PrecisionAssert.AreEqual(0, ddouble.Sinc(ddouble.NegativeInfinity, normalized), "-inf");
            }
        }

        [TestMethod]
        public void SinhcTest() {
            ddouble[] expecteds = {
                "1.000000000000000000000000000000000000000",
                "1.010449267232673231656500602168231622079",
                "1.042190610987494723244851252822983118212",
                "1.096422309247773307604882179262551798110",
                "1.175201193643801456882381850595600815156",
                "1.281535264240660510322264241209771151943",
                "1.419519636729878331222924996451754432555",
                "1.594522495015795802910223556050377529974",
                "1.813430203923509383834106991400630852443",
                "2.084963691510369196392700301171342294778",
                "2.420081792415914928580129455340161275069",
                "2.832491640542084370456412367381583108314",
                "3.339291642469967299658197873155276020059",
                "3.961779339901744627568185820632250112830",
                "4.726464939324285035701923294003570921057",
                "5.666341900560903192970936191533790037881",
                "6.822479299281938112227067897698454645072",
                "8.246017425032806923112775652851532373103",
                "10.00066914488706347151325706792082559113",
                "12.16585608757731973676181006658650822785",
                "14.84064211555775179540189439921291311992",
                "18.14866866097436331358277925962661914959",
                "22.24434959025290216801777134628678449235",
                "27.32065021781719030240014848282780309250",
                "33.61885956171320468749701128132978857817",
                "41.44087153713646385843570469655277784511",
                "51.16462535424375870165493164148478581287",
                "63.26352530715042678563974909664583636058",
                "78.33087475332093176767944536800264451140",
                "97.11063020898667120489812016643222378453",
                "120.5361240914462039380145587185811281114",
                "149.7788376689365271396847988624746663580",
                "186.3098532236937732644845798789851808059",
                "231.9773066776575106447069850778789224895",
                "289.1040374606332567521881945537881234205",
                "360.6107399787256503546885799697292441069",
                "450.1713224536433289461359550997816241654",
                "562.4089524567065527776788124887408976054",
                "703.1435134110548625369033948276443323294",
                "879.7040385126318622657416010320749373758",
                "1101.323287470339337723652455484636440290",
                "1379.636189511096499487012847198175775296",
                "1729.309649843342304245946144947881946024",
                "2168.838531724600971943130551470571008895",
                "2721.551895386187166594583021801012011531",
                "3416.885322296465146273684172035636885830",
                "4291.990043505669731716502495033855217615",
                "5393.768467993791243220781545605344323724",
                "6781.449642202487852278208130825186457975",
                "8529.848525099095678349661297939492400866",
                "10733.49146068591215137604011176902204999",
                "13511.83906411456394246150490816046810771",
                "17015.89969256385284304314313935780786515",
                "21436.60528380116684816012460390357688961",
                "27015.42110541964343609994480265931930212",
                "34057.78757205406370847821750960927617384",
                "42950.15300585518746536190010299269515250",
                "54181.56024857870086047565749819512154888",
                "68371.00908748497998204120342240500437980",
                "86302.14540864113152436986220992126139648",
                "108967.2457490601578993784406767783278669",
                "137622.9965195976863693968336234865350386",
                "173861.2411704137686670628772339388964538",
                "219698.7248200138355580823040505726978298",
                "277690.9537658675031746345150520917679882",
                "351076.6696562571350223687402764174397430",
                "443961.1948167711713352695267775015232206",
                "561549.1378966321301525499628646037026942",
                "710439.7868698604945705366861388008049880",
                "899002.1238980347417435056576638798969467",
                "1.137850982787891426053689111715250597248e6",
                "1.440451700861894605471242077208952146092e6",
                "1.823888031592513775244632181845322150905e6",
                "2.309837513185343656221246575360616275153e6",
                "2.925810479735966162467523854881671546769e6",
                "3.706724153453770424316782884047790919090e6",
                "4.696902656925980401108252532933030628175e6",
                "5.952618464042685752573640850483602901484e6",
                "7.545322206192533414574691819442906485922e6",
                "9.565747698838881735618551182798933448669e6",
                "1.212912988524475689769883020257456826797e7",
                "1.538183807897396251972124039998240350029e7",
                "1.950980920671964403547429197310359645163e7",
                "2.474927052391367636942328708861231233984e7",
                "3.140037463055273086789863907033600267374e7",
                "3.984453936480375497564039307085756135310e7",
                "5.056650124596484988431173638535788598650e7",
                "6.418236624850625881295977045792561780789e7",
                "8.147529195753617185005029856117109564661e7",
                "1.034408811470416657659529852363901853826e8",
                "1.313449347338509025356242033815316845014e8",
                "1.667969352706718717323170696093407253793e8",
                "2.118435531793239695637394323588251385785e8",
                "2.690876409808577717118287045334868396643e8",
                "3.418396749068612469999946840750191910278e8",
                "4.343105064757089719090023000617028812545e8",
                "5.518567110384056727937793918201894034032e8",
                "7.012929088755616225302628450576372042532e8",
                "8.912893693397227455182639086603828712586e8",
                "1.132878221998662606972323243519104430777e9",
                "1.440097986747717450482949270445223877893e9",
                "1.830814274757342092102959419581951349295e9",
                "2.327764884944502960101815677970174605471e9",
                "2.959890739678443871203739604967995385417e9",
                "3.764030950554591620572524784366678451295e9",
                "4.787081777237973119126135996072863985238e9",
                "6.088746610776506241224836918955370629206e9",
                "7.745038998363439035548839824539266870531e9",
                "9.852745196329604012661952311340016714370e9",
                "1.253510942819640744450834911717204217214e10",
                "1.594907729670481687835804095066585917451e10",
                "2.029452494040994595692115609378202553895e10",
                "2.582601900520491381566154877780211005146e10",
                "3.286780229406108203330672722459716622974e10",
                "4.183289096136276976855179459049924471296e10",
                "5.324741268054349632754940884448206724745e10",
                "6.778162581282831162739000562891315427767e10",
                "8.628945570990064821187918879010283266178e10",
                "1.098588894565139019986685095633082993305e11",
                "1.398762146615783993820025755154006828421e11",
                "1.781079096920743691165078092860861993604e11",
                "2.268050409498331456310117222819720824680e11",
                "2.888363598582890395436227000684439822012e11",
                "3.678579978311904380768168445247221930650e11",
                "4.685298333104423424368658399557266868075e11",
                "5.967913807315021584748262332459536158759e11",
                "7.602135925787893186577834743004195911460e11",
                "9.684474838410691054873533230119228546031e11",
                "1.233796252854385861890281603475688416732e12",
                "1.571944927929676263908701244212496184742e12",
                "2.002890954625122134041147302978158296634e12",
                "2.552131114786580153220866047550902078958e12",
                "3.252175451301758554913602447372757488244e12",
                "4.144478375548261051565329129284346022669e12",
                "5.281902024063580207899227053264888772236e12",
                "6.731858695890196584963306097108670271538e12",
                "8.580319743050807079454451979539369273119e12",
                "1.093693003022147430978815577915987210575e13",
                "1.394153312383733928242209834728827129082e13",
                "1.777249667084146897958468370314202431217e13",
                "2.265733503304901040185206608248613733572e13",
                "2.888626360254065671671344586185222193969e13",
                "3.682949456965769869555162879478848486397e13",
                "4.695930776077564132405563911726133836133e13",
                "5.987821593215548926546419851189851997925e13",
                "7.635490874099206805258868817174763195382e13",
                "9.737012540605813787481621052631227723031e13",
                "1.241752007736592572624950039924608948116e14",
                "1.583667888216569095780126998809474215027e14",
                "2.019822371605481938143953516202992919474e14",
                "2.576213240587044827792303456122625964341e14",
                "3.286016503034361294623434855093083154321e14",
                "4.191569968041283713201141013328765080028e14",
                "5.346905365804476806968514144253068031900e14",
                "6.820980816353916643804652657226187910825e14",
                "8.701807491486716446806385614264607946063e14",
                "1.110171800307612140430858111785447726942e15",
                "1.416409261934102178752424202184967101261e15",
                "1.807194698497366910349156539914716682049e15",
                "2.305889687247078641354373373101721649823e15",
                "2.942315835462749817598748884362935003256e15",
                "3.754542426491426133008730975064371506251e15",
                "4.791169089427411407693483797193820379845e15",
                "6.114240660176075691296669052987330540115e15",
                "7.802969433293353039300773213604522162396e15",
                "9.958488586604473072649349278460925801294e15",
                "1.270992262291664359578962856826686336166e16",
                "1.622213995727710328508617374409884977518e16",
                "2.070565406572025056422239647156232411396e16",
                "2.642926901207584093967352116022257046745e16",
                "3.373623049035966540663450610335851962724e16",
                "4.306485473792876584757774893532497220222e16",
                "5.497487753755054141249369259004977175126e16",
                "7.018111032631140848955320533388690760330e16",
                "8.959643098534834942061636489261118093558e16",
                "1.143866998032409787593611892038424694350e17",
                "1.460409103904466849523784049107170370196e17",
                "1.864608044287506996348688232831332518731e17",
                "2.380753536075998983024731439328758050633e17",
                "3.039870129117106959774295620533338952037e17",
                "3.881585673053899483114977470378455503709e17",
                "4.956518447654122308304750067240503038080e17",
                "6.329327007569179765414122943093942580674e17",
                "8.082606820660942810116937500737042872652e17",
                "1.032186893543744442881887490403460033715e18",
                "1.318190129292498772970736651195881824815e18",
                "1.683489685790949910290066837661875873563e18",
                "2.150083954135970782403083440861255549822e18",
                "2.746077538500071698120061704417801919485e18",
                "3.507377094488505712933474967914557491267e18",
                "4.479858380835687564576236805514241384764e18",
                "5.722135521410349606098879791468383838991e18",
                "7.309099908435033061098662498813722973499e18",
                "9.336442749553369321635457546360389035698e18",
                "1.192643479294930935588701421957977840696e19",
                "1.523531286407942290616302697164745282836e19",
                "1.946272012750101725025612082605967803457e19",
                "2.486377134533965381216339588280714065610e19",
                "3.176447338050156415897241907524595904575e19",
                "4.058143442872617219967652063144539948296e19",
                "5.184705528587072464087453322933485384827e19",
                "6.624172812683833520035998983256328869821e19",
                "8.463499294354512566591996939526420635493e19",
                "1.081381447305483606413667897646314225370e20",
                "1.381714786693077251420798363957859685165e20",
                "1.765502480801693860724934804114135041454e20",
                "2.255945446639807937899455526038393315231e20",
                "2.882697614406654331260534588365016061641e20",
                "3.683661539150554662791893796909807105645e20",
                "4.707283870291075612376030248391926607972e20",
                "6.015489884765516214419458458007643638018e20",
                "7.687435072189841477227085260688453800803e20",
                "9.824301351914233770927804654239430603589e20",
                "1.255542891575687602453900474346846652221e21",
                "1.604615578055062025559640137231880304433e21",
                "2.050784083043997805027454108041125409642e21",
                "2.621067873402494352261169951864883834121e21",
                "3.350008469841004125002450497183435551687e21",
                "4.281764388269393165876606205934033360376e21",
                "5.472789762610877334656150461629189033817e21",
                "6.995259331947288307438859627390358174610e21",
                "8.941447833843141984442795686009491193132e21",
                "1.142932985595456664370144708506732952415e22",
                "1.460974038936019240865814134704028714203e22",
                "1.867553121440175137417027818941673016208e22",
                "2.387327960832852207903260404043536123584e22",
                "3.051826108087200568280304149180389835346e22",
                "3.901359636834864830360128464421191668719e22",
                "4.987473683628010721614341070730923950326e22",
                "6.376077721674362974928209909446300732683e22",
                "8.151450001869799945548605978907383213353e22",
                "1.042135872991271439025061177678343281282e23",
                "1.332361151370779250304376457859881040376e23",
                "1.703443155174430597348358081185321106276e23",
                "2.177917023762939882342608432972647776130e23",
                "2.784600810484923868158090928692299581126e23",
                "3.560347799822469707590333415863696413908e23",
                "4.552287712506320439731774426198445905850e23",
                "5.820693239845458093203582481200138358402e23",
                "7.442646439010761782446066105318596693905e23",
                "9.516728248464035697191309859539713584984e23",
                "1.216901671841131977385595541818467101852e24",
                "1.556075929657728574875165958057042936204e24",
                "1.989818652849054209544951612713757563313e24",
                "2.544506504673704843202739459923852763986e24",
                "3.253875469724533413944752091858931484675e24",
                "4.161074826977442353098642663640402003276e24",
                "5.321294559879883503470778449380964189414e24",
                "6.805126345759237491188168935784772548452e24",
                "8.702863002201227498215696870126390814354e24",
                "1.112999850360664893104487169885746464011e25",
                "1.423426391068472767196836015793303226387e25",
                "1.820462824975880856428057809736994921003e25",
                "2.328281325793905137236763043312131753846e25",
                "2.977802429441960534634120208143020020902e25",
                "3.808579597414147060792221510298291502794e25",
                "4.871210219384075689772842741350366988150e25"
            };

            for ((int i, ddouble x) = (0, 0); i < expecteds.Length; i++, x += 1d / 4) {
                ddouble expected = expecteds[i];

                ddouble y = ddouble.Sinhc(x);
                ddouble y_neg = ddouble.Sinhc(-x);
                ddouble y_dec = ddouble.Sinhc(ddouble.BitDecrement(x));
                ddouble y_inc = ddouble.Sinhc(ddouble.BitIncrement(x));

                Console.WriteLine(x);
                Console.WriteLine(y);

                PrecisionAssert.AlmostEqual(expected, y, 1e-29);
                PrecisionAssert.AlmostEqual(expected, y_neg, 1e-29);

                PrecisionAssert.AlmostEqual(expected, y_dec, 1e-29);
                PrecisionAssert.AlmostEqual(expected, y_inc, 1e-29);
            }

            PrecisionAssert.AreEqual(1, ddouble.Sinhc(0));

            PrecisionAssert.AlmostEqual(
                ddouble.Sinhc(-double.ScaleB(1, -64)),
                ddouble.Sinhc(ddouble.BitDecrement(-double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Sinhc(-double.ScaleB(1, -64)),
                ddouble.Sinhc(ddouble.BitIncrement(-double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Sinhc(+double.ScaleB(1, -64)),
                ddouble.Sinhc(ddouble.BitDecrement(+double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Sinhc(+double.ScaleB(1, -64)),
                ddouble.Sinhc(ddouble.BitIncrement(+double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AreEqual(1, ddouble.Sinhc(-ddouble.Epsilon));
            PrecisionAssert.AreEqual(1, ddouble.Sinhc(+ddouble.Epsilon));

            PrecisionAssert.IsNaN(ddouble.Sinhc(ddouble.NaN), "nan");
            PrecisionAssert.IsPositiveInfinity(ddouble.Sinhc(ddouble.PositiveInfinity), "+inf");
            PrecisionAssert.IsPositiveInfinity(ddouble.Sinhc(ddouble.NegativeInfinity), "-inf");
        }

        [TestMethod]
        public void JincTest() {
            ddouble[] expecteds = {
                "0.5",
                "0.4961039092909076909262999066552695967425",
                "0.4845369153497477727679091522830632816013",
                "0.4656581362331495900310413552350017806349",
                "0.4400505857449335159596822037189149131274",
                "0.4084986082559043736555798698199283002823",
                "0.3719576719400664279934141421040595996863",
                "0.3315178272222814270367415500494596909627",
                "0.2883624038784366936012241211345685434602",
                "0.2437237140653156276453855897310085521186",
                "0.1988376409857096152043265105057688970085",
                "0.1548990192574190331780268266629688549679",
                "0.1130196528419788196418381990688262989910",
                "0.07419067323544735022651367808651558624711",
                "0.03925072210352205306175197062399162723340",
                "0.008861159767914594267657442632989077671678",
                "-0.01651083200588728403579635520081875718186",
                "-0.03660075128902181318758816380857321366043",
                "-0.05134676264963791866846589436561181287975",
                "-0.06088143129412850752166763703430544845394",
                "-0.06551582751829304440754686438203382655217",
                "-0.06571694830084527290935457138605186593557",
                "-0.06207967553255333639631472718992256773019",
                "-0.05529469981205785938353831574661590388434",
                "-0.04611397635459426802879580050769229312350",
                "-0.03531534040627796319447764825139136968363",
                "-0.02366789252461105186304361758052960830094",
                "-0.01189967188967069859940987248748407803429",
                "-0.0006689747831922618141591151709018570790596",
                "0.009459544917673344073182744410795780079121",
                "0.01803312367729406735763206580736861719232",
                "0.02472291512117649104102857571644597870756",
                "0.02932954335673932804765958144880682644359",
                "0.03178224872639319014819441220960084229574",
                "0.03213199572635926403117692268111365089344",
                "0.03053918759843218431707472263752905201411",
                "0.02725686517481391914695995236822095256341",
                "0.02261044869947255297303765445685240283907",
                "0.01697520323763472115269902072045884899292",
                "0.01075266679574333437774891906251039479197",
                "0.004347274616886143666974876802585928830631",
                "-0.001855654214328640681762925823445074878417",
                "-0.007509525164507760776468283888367294346032",
                "-0.01232280023655722820129143012318055268115",
                "-0.01607139081424740919433918904393399178540",
                "-0.01860668263330849912512283610968069018134",
                "-0.01985901049263682387950804178073816770526",
                "-0.01983664581055015231373912071354970158949",
                "-0.01862059204088563436397480969702476322379",
                "-0.01635568969435550977474918400100814140730",
                "-0.01323870436918077747670098067393695553008",
                "-0.009504200064564067929847617185345547050326",
                "-0.005409080932444490088982261454464157313177",
                "-0.001216715036555995937459518898257913842028",
                "0.002818466080444549863890497381871648450277",
                "0.006465065217584818069554132782374632438272",
                "0.009526796764199518078941280513150690401367",
                "0.01185196866568375095385982653270412109094",
                "0.01333996300662392827966406550596219920144",
                "0.01394449298211432494924834399441032200778",
                "0.01367360257423485074314249413846157569090",
                "0.01258655799702783357453407331426728164769",
                "0.01078794711946755763002657133309090679547",
                "0.008419446010008826054937251893295651494008",
                "0.005649823478831511639917706403629751528100",
                "0.002663829990186589624699744268226081582645",
                "-0.0003493462870079531508385757827372952878299",
                "-0.003207376830978717167617353347487698461520",
                "-0.005745205456340038249152868586005803849128",
                "-0.007824014072820320369343655074378709663243",
                "-0.009338283967185994622392513233177453786868",
                "-0.01022062179587936377212823538448340608902",
                "-0.01044416030489275522259030055060078774741",
                "-0.01002249026985980653221230617383537323357",
                "-0.009007223784325190874820632123696725692474",
                "-0.007483421765431584187583536768678393521041",
                "-0.005563233218021540357847466449941611110535",
                "-0.003378184478887548049312295802452723539938",
                "-0.001070618981953719089765018228072613335160",
                "0.001215180576629013340540683889543746274626",
                "0.003341656208792502278949648709682335999150",
                "0.005185924377754745831781973141833682464023",
                "0.006646570155775401785675026509584553396699",
                "0.007648927046734458484878336214309334802780",
                "0.008148584417328576373466307548642281531787",
                "0.008132976868895636197892859024136274032221",
                "0.007621027095154057389362223883211337650583",
                "0.006660928868347288862040314197041957135837",
                "0.005326263165629622757204282110116168205459",
                "0.003710732177631285374109690446019363115342",
                "0.001921868141809431114419601593715929983759",
                "0.00007412299888344708580642812250161358949444",
                "-0.001718231386247891797035789682748586181331",
                "-0.003347964901686352284214084689031557121956",
                "-0.004721112484330354102385278320432599123270",
                "-0.005762208739670470297381448607199098051399",
                "-0.006418252715963384220124912261075700219862",
                "-0.006661205324354707951596642802505923764736",
                "-0.006488914768135839950551494917748717071975",
                "-0.005924461708357494552003999727642640530333",
                "-0.005014009983211596186072370842290046045265",
                "-0.003823335038395302418954709921087952911366",
                "-0.002433275940842513792983374557427710651158",
                "-0.0009344139363700434055684767458064352055839",
                "0.0005786819456506081211473986549109528732044",
                "0.002013285431991301430660680935627439976971",
                "0.003284068208955905245269316561664621366021",
                "0.004318054380837842291763605763460241405368",
                "0.005058693500685469142668203551051274931499",
                "0.005468831731889830968738479788867391718129",
                "0.005532432480169343328337064317970394452166",
                "0.005254976598449328787861131919803427387349",
                "0.004662553154824778338506324720067188060456",
                "0.003799729903995080879860109142072236929340",
                "0.002726363435246434061487590234698659792355",
                "0.001513568451473082420181303532249085856109",
                "0.0002391105020436293533846184148681488716807",
                "-0.001017485567491349312695034032132761325951",
                "-0.002179809427091267687519908814122034299380",
                "-0.003179127878279330589314750951345814324366",
                "-0.003958368753887431217341142308012096373217",
                "-0.004475299924822281369976737035341086427654",
                "-0.004704731152490850528360187881207875050415",
                "-0.004639629491953489673383455051672319158905",
                "-0.004291106989235941882938385709415234074150",
                "-0.003687308335482730620586236953728255415321",
                "-0.002871291792203887847927743922929811027827",
                "-0.001898055225931990226891908987692452846776",
                "-0.0008309071398720401451017855147080169893695",
                "0.0002625824816986068108639686099231262670481",
                "0.001314796696011680436965301320127529978819",
                "0.002262192459681714465624924254600546118214",
                "0.003049080276215681675628135711870201314405",
                "0.003630841236586166167523307750357011771240",
                "0.003976398977030566428439928324934388661159",
                "0.004069813153458277185651684324925504837483",
                "0.003910917090497512680203548028173350329636",
                "0.003514981781808761277970391758818110269050",
                "0.002911447739345671303240976422340795335881",
                "0.002141821743290453876918276190314169013383",
                "0.001256884062275018284848542018849784912200",
                "0.0003133904164432201721304675313430325036413",
                "-0.0006295202875723195112361958602233351324334",
                "-0.001513987979762109498956777297419879519224",
                "-0.002286939152401359149935259913539930940090",
                "-0.002903230196951030915040820911308694746253",
                "-0.003328242658903480131101719748963774407530",
                "-0.003539783705706198971620665149171618498403",
                "-0.003529190236047471757517601804699935747641",
                "-0.003301585447515472593571826909852361293716",
                "-0.002875289173847385579278122332927226432528",
                "-0.002280434686351843906624318324404218951449",
                "-0.001556891839151582264981182733842134077359",
                "-0.0007516366497128077929482522020681983893359",
                "0.00008426165625889920761240416457990512692953",
                "0.0008988451401147051479031677389372792924514",
                "0.001642464197145880683071556374539070279943",
                "0.002270772405692338124800148303743367039883",
                "0.002747340415218774172084285330755512490620",
                "0.003045736655691997374923940316135489079980",
                "0.003150957950939624980140068045979296917247",
                "0.003060134871892609817096590269223680360597",
                "0.002782482220755415128523562436303527984267",
                "0.002338511560701104628222668406952823874134",
                "0.001758567356219009425632501577984128740407",
                "0.001080788389435280190479166002076378883161",
                "0.0003486293135289667744061771106292195861715",
                "-0.0003918983981586021723721316646453272496213",
                "-0.001095092576711598572727787660980741406507",
                "-0.001718356568515527569389682438431675778486",
                "-0.002224755924952659909513571305904769185350",
                "-0.002585183543552526594375780531506992340939",
                "-0.002780007768589380103604114275582866482005",
                "-0.002800111682243380290409897487933117894891",
                "-0.002647270554248808156361698688186371871053",
                "-0.002333855726423379552717395457585212284147",
                "-0.001881894531273390249433105593209207952770",
                "-0.001321554665444168636245328109266344866123",
                "-0.0006891554373539003321082543402614527455254",
                "-0.00002483549368630452060281739158430824294016",
                "0.0006299745416983228340829012736220964695394",
                "0.001235116620183360268403768923375851518621",
                "0.001754149442924544525235816494233162950111",
                "0.002156524625997507490818338184124371451017",
                "0.002419366012067409186730160465180150249210",
                "0.002528749633967775775401017820877227453898",
                "0.002480414019668303966200201267397316445827",
                "0.002279866491387822589076801121176479989064",
                "0.001941888600851231608711434081349349487847",
                "0.001489480547041484195704038385692797801528",
                "0.0009523181152624845405499949593545944541341",
                "0.0003648243480026233953186654417093751114533",
                "-0.0002360198629088477862886297735237515569631",
                "-0.0008129880252531075819933741902578089364629",
                "-0.001330899517434081843426992545148848757386",
                "-0.001758750143817862839627556513739849031173",
                "-0.002071553633353276662714304372134662827521",
                "-0.002251785590928959176288660472596414441439",
                "-0.002290347399661927099227514020515949891504",
                "-0.002186998216614141312242659836357206476093",
                "-0.001950236562503502753229179077474032280810",
                "-0.001596646999087332265504260289693464566615",
                "-0.001149759929135063098611559956158320945932",
                "-0.0006385016755500832878954193855433164017561",
                "-0.00009533596800057019288510373961437795621455",
                "0.0004457846032812444910605397580738776816795",
                "0.0009515286871758411413954729862315541132220",
                "0.001391227435675967605730894960552435888142",
                "0.001738722644964238034918390683232294662955",
                "0.001973911112184240652457655577216656154118",
                "0.002083894755695688069132280924400012872242",
                "0.002063671509362226377784526600759727851048",
                "0.001916331085568304235982178434900755338169",
                "0.001652750576429909392049909597885514906524",
                "0.001290815613277756276658072456079554575248",
                "0.0008542215502928172881306713742749586977588",
                "0.0003709341470499173119568721025476393234327",
                "-0.0001285909830890745675983889379733825033200",
                "-0.0006133174567188344983668640131920715714017",
                "-0.001053546692281568138030648035158694244099",
                "-0.001422727969248811988713930531857395278290",
                "-0.001699050238134340594703272427856699925089",
                "-0.001866720826953759048584146750426770700955",
                "-0.001916856688938216463988154432258943500172",
                "-0.001847938621533890919484121157215153457260",
                "-0.001665806382145197051813460616775702206372",
                "-0.001383201110741727607795469006378370874606",
                "-0.001018889184426268762016170355849755907830",
                "-0.0005964268855895044918245124018895690498951",
                "-0.0001426465471717683351808086502293403483521",
                "0.0003140391072379786498990475766133917015807",
                "0.0007454078008270721847354358337671276099933",
                "0.001125163853651190170919672874796759896272",
                "0.001430533328784690276371184658168644199966",
                "0.001643621887176229655274271170261039884701",
                "0.001752454876355664373328532846575521130613",
                "0.001751639730498253362760793267651052667415",
                "0.001642614730813990364572848367339527929879",
                "0.001433474052021281854557250736302958497163",
                "0.001138385191129753002394106579202559931798",
                "0.0007766397293027719644801501008225293981330",
                "0.0003714004072516136183148411660491824065627",
                "-0.00005177461764899497991530279690477688142313",
                "-0.0004665367653987269201281290631207459958713",
                "-0.0008473809170888595325148271374336439744434",
                "-0.001171207281930728387746332852189183860436",
                "-0.001418716003096467861740693868996224061409",
                "-0.001575550703549550100173295719695011231575",
                "-0.001633123629808391121942163696208842545662",
                "-0.001589075448526729820433037539050163545361",
                "-0.001447345788001241756571347800607088539865",
                "-0.001217854847801003824723959227439759010811",
                "-0.0009158203221260891427129302952851182594086",
                "-0.0005607560304304981934489700111798552660626",
                "-0.0001752176826685427529739667734088366447636",
                "0.0002166240064825222901026196516352679215769",
                "0.0005904929586624433579948806219408116293967"
            };

            for ((int i, ddouble x) = (0, 0); i < expecteds.Length; i++, x += 1d / 4) {
                ddouble expected = expecteds[i];

                ddouble y = ddouble.Jinc(x);
                ddouble y_neg = ddouble.Jinc(-x);
                ddouble y_dec = ddouble.Jinc(ddouble.BitDecrement(x));
                ddouble y_inc = ddouble.Jinc(ddouble.BitIncrement(x));

                Console.WriteLine(x);
                Console.WriteLine(y);

                PrecisionAssert.AlmostEqual(expected, y, 1e-30d, 1e-30d);
                PrecisionAssert.AlmostEqual(expected, y_neg, 1e-30d, 1e-30d);

                PrecisionAssert.AlmostEqual(expected, y_dec, 1e-30d, 1e-30d);
                PrecisionAssert.AlmostEqual(expected, y_inc, 1e-30d, 1e-30d);
            }

            PrecisionAssert.AreEqual(0.5, ddouble.Jinc(0));

            PrecisionAssert.AlmostEqual(
                ddouble.Jinc(-double.ScaleB(1, -64)),
                ddouble.Jinc(ddouble.BitDecrement(-double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Jinc(-double.ScaleB(1, -64)),
                ddouble.Jinc(ddouble.BitIncrement(-double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Jinc(+double.ScaleB(1, -64)),
                ddouble.Jinc(ddouble.BitDecrement(+double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AlmostEqual(
                ddouble.Jinc(+double.ScaleB(1, -64)),
                ddouble.Jinc(ddouble.BitIncrement(+double.ScaleB(1, -64))),
                1e-31
            );

            PrecisionAssert.AreEqual(0.5, ddouble.Jinc(-ddouble.Epsilon));
            PrecisionAssert.AreEqual(0.5, ddouble.Jinc(+ddouble.Epsilon));

            PrecisionAssert.IsNaN(ddouble.Jinc(ddouble.NaN), "nan");
            PrecisionAssert.AreEqual(0, ddouble.Jinc(ddouble.PositiveInfinity), "+inf");
            PrecisionAssert.AreEqual(0, ddouble.Jinc(ddouble.NegativeInfinity), "-inf");
        }
    }
}
